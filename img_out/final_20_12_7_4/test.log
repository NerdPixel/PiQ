2022-02-02 12:41:23,920 - DEBUG - root - filenames: 
2022-02-02 12:41:23,926 - DEBUG - root - .//portrait_7_20.jpeg
2022-02-02 12:41:46,941 - DEBUG - root - filenames: 
2022-02-02 12:41:46,944 - DEBUG - root - .//portrait_7_20.jpeg
2022-02-02 12:42:01,332 - DEBUG - root - filenames: 
2022-02-02 12:42:01,336 - DEBUG - root - .//portrait_7_20.jpeg
2022-02-02 12:42:01,376 - DEBUG - root - .//art_10_7.jpeg
2022-02-02 12:42:01,415 - DEBUG - root - .//art_3_7.jpeg
2022-02-02 12:42:01,448 - DEBUG - root - .//portrait_5_7.jpeg
2022-02-02 12:42:01,478 - DEBUG - root - .//nautre_8_20.jpeg
2022-02-02 12:42:01,516 - DEBUG - root - .//portrait_3.jpeg
2022-02-02 12:42:01,551 - DEBUG - root - .//nature_1_12.jpeg
2022-02-02 12:42:01,592 - DEBUG - root - .//portrait_9_7.jpeg
2022-02-02 12:42:01,627 - DEBUG - root - .//art_6_4.jpeg
2022-02-02 12:42:01,658 - DEBUG - root - .//portrait_8_r_12.jpeg
2022-02-02 12:42:01,689 - DEBUG - root - .//art_4_12.jpeg
2022-02-02 12:42:01,725 - DEBUG - root - .//art_10_r_4.jpeg
2022-02-02 12:42:01,760 - DEBUG - root - .//art_6.jpeg
2022-02-02 12:42:01,805 - DEBUG - root - .//nature_2_r_12.jpeg
2022-02-02 12:42:01,839 - DEBUG - root - .//nautre_9_4.jpeg
2022-02-02 12:42:01,877 - DEBUG - root - .//nature_4_r.jpeg
2022-02-02 12:42:01,920 - DEBUG - root - .//art_10_20.jpeg
2022-02-02 12:42:01,960 - DEBUG - root - .//portrait_9_12.jpeg
2022-02-02 12:42:01,997 - DEBUG - root - .//nature_10_4.jpeg
2022-02-02 12:42:02,045 - DEBUG - root - .//art_9_r_12.jpeg
2022-02-02 12:42:02,100 - DEBUG - root - .//art_2_r_7.jpeg
2022-02-02 12:42:02,295 - DEBUG - root - .//art_3_r_7.jpeg
2022-02-02 12:42:02,332 - DEBUG - root - .//nautre_8_r.jpeg
2022-02-02 12:42:02,409 - DEBUG - root - .//art_6_r_20.jpeg
2022-02-02 12:42:02,476 - DEBUG - root - .//nature_5_4.jpeg
2022-02-02 12:42:02,517 - DEBUG - root - .//portrait_5_r_12.jpeg
2022-02-02 12:42:02,548 - DEBUG - root - .//art_8_r_7.jpeg
2022-02-02 12:42:02,583 - DEBUG - root - .//art_9_r_7.jpeg
2022-02-02 12:42:02,619 - DEBUG - root - .//nature_10_20.jpeg
2022-02-02 12:42:02,653 - DEBUG - root - .//portrait_7_r_20.jpeg
2022-02-02 12:42:02,684 - DEBUG - root - .//nature_6_20.jpeg
2022-02-02 12:42:02,715 - DEBUG - root - .//portrait_4_r_7.jpeg
2022-02-02 12:42:02,742 - DEBUG - root - .//portrait_5_r_7.jpeg
2022-02-02 12:42:02,772 - DEBUG - root - .//art_7_r.jpeg
2022-02-02 12:42:02,803 - DEBUG - root - .//portrait_1_r.jpeg
2022-02-02 12:42:02,835 - DEBUG - root - .//art_3_20.jpeg
2022-02-02 12:42:02,867 - DEBUG - root - .//nature_2_r_7.jpeg
2022-02-02 12:42:02,897 - DEBUG - root - .//nature_3_r_7.jpeg
2022-02-02 12:42:02,930 - DEBUG - root - .//art_4_r_12.jpeg
2022-02-02 12:42:02,968 - DEBUG - root - .//nature_4_r_12.jpeg
2022-02-02 12:42:03,010 - DEBUG - root - .//nature_2_7.jpeg
2022-02-02 12:42:03,040 - DEBUG - root - .//nautre_8_r_20.jpeg
2022-02-02 12:42:03,075 - DEBUG - root - .//nature_7_4.jpeg
2022-02-02 12:42:03,108 - DEBUG - root - .//portrait_10_4.jpeg
2022-02-02 12:42:03,139 - DEBUG - root - .//nature_7_20.jpeg
2022-02-02 12:42:03,171 - DEBUG - root - .//art_5_r.jpeg
2022-02-02 12:42:03,208 - DEBUG - root - .//portrait_3_r.jpeg
2022-02-02 12:42:03,237 - DEBUG - root - .//portrait_1_12.jpeg
2022-02-02 12:42:03,267 - DEBUG - root - .//art_7_r_4.jpeg
2022-02-02 12:42:03,296 - DEBUG - root - .//art_6_r_4.jpeg
2022-02-02 12:42:03,330 - DEBUG - root - .//art_9_r.jpeg
2022-02-02 12:42:03,370 - DEBUG - root - .//nature_6_r_20.jpeg
2022-02-02 12:42:03,407 - DEBUG - root - .//art_2_20.jpeg
2022-02-02 12:42:03,446 - DEBUG - root - .//nature_1.jpeg
2022-02-02 12:42:03,489 - DEBUG - root - .//nautre_9_20.jpeg
2022-02-02 12:42:03,523 - DEBUG - root - .//art_4_4.jpeg
2022-02-02 12:42:03,554 - DEBUG - root - .//portrait_2_4.jpeg
2022-02-02 12:42:03,592 - DEBUG - root - .//portrait_6_20.jpeg
2022-02-02 12:42:03,629 - DEBUG - root - .//portrait_1_r_20.jpeg
2022-02-02 12:42:03,663 - DEBUG - root - .//art_8_4.jpeg
2022-02-02 12:42:03,692 - DEBUG - root - .//art_1_7.jpeg
2022-02-02 12:42:03,729 - DEBUG - root - .//portrait_7_7.jpeg
2022-02-02 12:42:03,760 - DEBUG - root - .//art_2_r_12.jpeg
2022-02-02 12:42:03,798 - DEBUG - root - .//art_7.jpeg
2022-02-02 12:42:03,831 - DEBUG - root - .//art_5_12.jpeg
2022-02-02 12:42:03,871 - DEBUG - root - .//nature_10.jpeg
2022-02-02 12:42:03,905 - DEBUG - root - .//portrait_1_r_4.jpeg
2022-02-02 12:42:03,939 - DEBUG - root - .//nature_10_r_4.jpeg
2022-02-02 12:42:03,973 - DEBUG - root - .//art_10.jpeg
2022-02-02 12:42:04,010 - DEBUG - root - .//portrait_10_r_20.jpeg
2022-02-02 12:42:04,042 - DEBUG - root - .//portrait_2.jpeg
2022-02-02 12:42:04,075 - DEBUG - root - .//nature_6_r.jpeg
2022-02-02 12:42:04,106 - DEBUG - root - .//nature_7_r_4.jpeg
2022-02-02 12:42:04,140 - DEBUG - root - .//nature_6_r_4.jpeg
2022-02-02 12:42:04,177 - DEBUG - root - .//portrait_3_r_12.jpeg
2022-02-02 12:42:04,220 - DEBUG - root - .//portrait_8_12.jpeg
2022-02-02 12:42:04,279 - DEBUG - root - .//nautre_8_r_4.jpeg
2022-02-02 12:42:04,322 - DEBUG - root - .//nautre_9_r_4.jpeg
2022-02-02 12:42:04,356 - DEBUG - root - .//portrait_9_r_12.jpeg
2022-02-02 12:42:04,395 - DEBUG - root - .//portrait_9.jpeg
2022-02-02 12:42:04,433 - DEBUG - root - .//nature_1_r_20.jpeg
2022-02-02 12:42:04,478 - DEBUG - root - .//art_1_r.jpeg
2022-02-02 12:42:04,524 - DEBUG - root - .//portrait_7_r.jpeg
2022-02-02 12:42:04,560 - DEBUG - root - .//nature_3_4.jpeg
2022-02-02 12:42:04,596 - DEBUG - root - .//portrait_10_r_4.jpeg
2022-02-02 12:42:04,629 - DEBUG - root - .//art_8_r_12.jpeg
2022-02-02 12:42:04,659 - DEBUG - root - .//nature_5_20.jpeg
2022-02-02 12:42:04,699 - DEBUG - root - .//nature_3_r_12.jpeg
2022-02-02 12:42:04,744 - DEBUG - root - .//nature_6_7.jpeg
2022-02-02 12:42:04,777 - DEBUG - root - .//portrait_3_12.jpeg
2022-02-02 12:42:04,822 - DEBUG - root - .//art_1_r_4.jpeg
2022-02-02 12:42:04,883 - DEBUG - root - .//portrait_4_r_12.jpeg
2022-02-02 12:42:04,935 - DEBUG - root - .//nature_2_r.jpeg
2022-02-02 12:42:04,997 - DEBUG - root - .//art_7_12.jpeg
2022-02-02 12:42:05,034 - DEBUG - root - .//portrait_5.jpeg
2022-02-02 12:42:05,066 - DEBUG - root - .//nature_2_12.jpeg
2022-02-02 12:42:05,097 - DEBUG - root - .//art_7_r_20.jpeg
2022-02-02 12:42:05,129 - DEBUG - root - .//portrait_4_20.jpeg
2022-02-02 12:42:05,161 - DEBUG - root - .//art_5_7.jpeg
2022-02-02 12:42:05,199 - DEBUG - root - .//portrait_3_7.jpeg
2022-02-02 12:42:05,239 - DEBUG - root - .//portrait_6_r_4.jpeg
2022-02-02 12:42:05,276 - DEBUG - root - .//portrait_7_r_4.jpeg
2022-02-02 12:42:05,319 - DEBUG - root - .//art_5_r_12.jpeg
2022-02-02 12:42:05,364 - DEBUG - root - .//nature_1_r_4.jpeg
2022-02-02 12:42:05,406 - DEBUG - root - .//portrait_6_r_20.jpeg
2022-02-02 12:42:05,443 - DEBUG - root - .//art_9_20.jpeg
2022-02-02 12:42:05,477 - DEBUG - root - .//nature_6.jpeg
2022-02-02 12:42:05,508 - DEBUG - root - .//art_9_7.jpeg
2022-02-02 12:42:05,623 - DEBUG - root - .//portrait_6_4.jpeg
2022-02-02 12:42:05,654 - DEBUG - root - .//art_6_12.jpeg
2022-02-02 12:42:05,687 - DEBUG - root - .//nature_7.jpeg
2022-02-02 12:42:05,721 - DEBUG - root - .//nautre_9_r_20.jpeg
2022-02-02 12:42:05,755 - DEBUG - root - .//nautre_8_7.jpeg
2022-02-02 12:42:05,791 - DEBUG - root - .//portrait_5_20.jpeg
2022-02-02 12:42:05,820 - DEBUG - root - .//nature_5_r_12.jpeg
2022-02-02 12:42:05,851 - DEBUG - root - .//nature_3_12.jpeg
2022-02-02 12:42:05,882 - DEBUG - root - .//art_10_r_20.jpeg
2022-02-02 12:42:05,917 - DEBUG - root - .//art_1.jpeg
2022-02-02 12:42:05,954 - DEBUG - root - .//art_2_4.jpeg
2022-02-02 12:42:05,997 - DEBUG - root - .//portrait_4_4.jpeg
2022-02-02 12:42:06,028 - DEBUG - root - .//nature_7_r_20.jpeg
2022-02-02 12:42:06,064 - DEBUG - root - .//portrait_4.jpeg
2022-02-02 12:42:06,095 - DEBUG - root - .//art_8_20.jpeg
2022-02-02 12:42:06,126 - DEBUG - root - .//art_5_r_7.jpeg
2022-02-02 12:42:06,165 - DEBUG - root - .//art_4_r_7.jpeg
2022-02-02 12:42:06,201 - DEBUG - root - .//portrait_9_r_7.jpeg
2022-02-02 12:42:06,234 - DEBUG - root - .//portrait_8_r_7.jpeg
2022-02-02 12:42:06,266 - DEBUG - root - .//portrait_8_4.jpeg
2022-02-02 12:42:06,298 - DEBUG - root - .//art_7_7.jpeg
2022-02-02 12:42:06,331 - DEBUG - root - .//portrait_1_7.jpeg
2022-02-02 12:42:06,370 - DEBUG - root - .//art_3_r.jpeg
2022-02-02 12:42:06,404 - DEBUG - root - .//art_3_r_12.jpeg
2022-02-02 12:42:06,438 - DEBUG - root - .//portrait_5_r.jpeg
2022-02-02 12:42:06,468 - DEBUG - root - .//art_10_r.jpeg
2022-02-02 12:42:06,504 - DEBUG - root - .//nature_10_r_12.jpeg
2022-02-02 12:42:06,537 - DEBUG - root - .//portrait_9_r.jpeg
2022-02-02 12:42:06,571 - DEBUG - root - .//nature_4_7.jpeg
2022-02-02 12:42:06,608 - DEBUG - root - .//art_1_20.jpeg
2022-02-02 12:42:06,643 - DEBUG - root - .//portrait_3_r_7.jpeg
2022-02-02 12:42:06,676 - DEBUG - root - .//portrait_2_r_7.jpeg
2022-02-02 12:42:06,782 - DEBUG - root - .//portrait_2_r_12.jpeg
2022-02-02 12:42:06,837 - DEBUG - root - .//portrait_2_12.jpeg
2022-02-02 12:42:06,883 - DEBUG - root - .//art_1_r_20.jpeg
2022-02-02 12:42:06,923 - DEBUG - root - .//portrait_8.jpeg
2022-02-02 12:42:06,959 - DEBUG - root - .//portrait_10_20.jpeg
2022-02-02 12:42:07,014 - DEBUG - root - .//nature_1_4.jpeg
2022-02-02 12:42:07,059 - DEBUG - root - .//nature_4_20.jpeg
2022-02-02 12:42:07,144 - DEBUG - root - .//nature_5_r_7.jpeg
2022-02-02 12:42:07,192 - DEBUG - root - .//nature_4_r_7.jpeg
2022-02-02 12:42:07,229 - DEBUG - root - .//art_4_20.jpeg
2022-02-02 12:42:07,266 - DEBUG - root - .//portrait_8_r_20.jpeg
2022-02-02 12:42:07,299 - DEBUG - root - .//portrait_7_12.jpeg
2022-02-02 12:42:07,329 - DEBUG - root - .//nautre_8_12.jpeg
2022-02-02 12:42:07,367 - DEBUG - root - .//nature_1_20.jpeg
2022-02-02 12:42:07,407 - DEBUG - root - .//art_6_r.jpeg
2022-02-02 12:42:07,443 - DEBUG - root - .//nature_4_4.jpeg
2022-02-02 12:42:07,481 - DEBUG - root - .//nautre_9_r.jpeg
2022-02-02 12:42:07,515 - DEBUG - root - .//portrait_9_20.jpeg
2022-02-02 12:42:07,552 - DEBUG - root - .//portrait_2_r_4.jpeg
2022-02-02 12:42:07,589 - DEBUG - root - .//portrait_3_r_4.jpeg
2022-02-02 12:42:07,627 - DEBUG - root - .//art_9_r_20.jpeg
2022-02-02 12:42:07,670 - DEBUG - root - .//nature_10_r.jpeg
2022-02-02 12:42:07,708 - DEBUG - root - .//nature_1_7.jpeg
2022-02-02 12:42:07,749 - DEBUG - root - .//nature_2_r_20.jpeg
2022-02-02 12:42:07,787 - DEBUG - root - .//nature_4_r_4.jpeg
2022-02-02 12:42:07,826 - DEBUG - root - .//nature_5_r_4.jpeg
2022-02-02 12:42:07,863 - DEBUG - root - .//art_10_12.jpeg
2022-02-02 12:42:07,912 - DEBUG - root - .//nature_5_r.jpeg
2022-02-02 12:42:07,950 - DEBUG - root - .//portrait_5_r_20.jpeg
2022-02-02 12:42:07,993 - DEBUG - root - .//nature_4.jpeg
2022-02-02 12:42:08,042 - DEBUG - root - .//nautre_8_4.jpeg
2022-02-02 12:42:08,089 - DEBUG - root - .//art_6_r_12.jpeg
2022-02-02 12:42:08,128 - DEBUG - root - .//art_2.jpeg
2022-02-02 12:42:08,174 - DEBUG - root - .//art_3_12.jpeg
2022-02-02 12:42:08,213 - DEBUG - root - .//art_2_7.jpeg
2022-02-02 12:42:08,256 - DEBUG - root - .//portrait_4_7.jpeg
2022-02-02 12:42:08,292 - DEBUG - root - .//art_4_r_20.jpeg
2022-02-02 12:42:08,336 - DEBUG - root - .//portrait_7.jpeg
2022-02-02 12:42:08,375 - DEBUG - root - .//nature_10_12.jpeg
2022-02-02 12:42:08,413 - DEBUG - root - .//portrait_7_r_12.jpeg
2022-02-02 12:42:08,450 - DEBUG - root - .//art_4_r_4.jpeg
2022-02-02 12:42:08,488 - DEBUG - root - .//art_5_r_4.jpeg
2022-02-02 12:42:08,533 - DEBUG - root - .//portrait_8_r_4.jpeg
2022-02-02 12:42:08,569 - DEBUG - root - .//portrait_9_r_4.jpeg
2022-02-02 12:42:08,609 - DEBUG - root - .//art_7_4.jpeg
2022-02-02 12:42:08,648 - DEBUG - root - .//portrait_1_4.jpeg
2022-02-02 12:42:08,686 - DEBUG - root - .//portrait_8_7.jpeg
2022-02-02 12:42:08,721 - DEBUG - root - .//nature_6_12.jpeg
2022-02-02 12:42:08,756 - DEBUG - root - .//nautre_8_r_12.jpeg
2022-02-02 12:42:08,795 - DEBUG - root - .//portrait_6.jpeg
2022-02-02 12:42:08,830 - DEBUG - root - .//nature_4_r_20.jpeg
2022-02-02 12:42:08,869 - DEBUG - root - .//portrait_10_r.jpeg
2022-02-02 12:42:08,903 - DEBUG - root - .//nature_7_r.jpeg
2022-02-02 12:42:08,942 - DEBUG - root - .//art_3.jpeg
2022-02-02 12:42:08,977 - DEBUG - root - .//nature_6_r_12.jpeg
2022-02-02 12:42:09,021 - DEBUG - root - .//art_5_4.jpeg
2022-02-02 12:42:09,073 - DEBUG - root - .//portrait_3_4.jpeg
2022-02-02 12:42:09,109 - DEBUG - root - .//portrait_7_r_7.jpeg
2022-02-02 12:42:09,154 - DEBUG - root - .//portrait_6_r_7.jpeg
2022-02-02 12:42:09,188 - DEBUG - root - .//art_2_12.jpeg
2022-02-02 12:42:09,231 - DEBUG - root - .//nature_1_r_7.jpeg
2022-02-02 12:42:09,280 - DEBUG - root - .//nature_7_12.jpeg
2022-02-02 12:42:09,329 - DEBUG - root - .//portrait_1_20.jpeg
2022-02-02 12:42:09,365 - DEBUG - root - .//portrait_6_7.jpeg
2022-02-02 12:42:09,401 - DEBUG - root - .//art_9_4.jpeg
2022-02-02 12:42:09,442 - DEBUG - root - .//nature_5.jpeg
2022-02-02 12:42:09,478 - DEBUG - root - .//art_2_r_20.jpeg
2022-02-02 12:42:09,528 - DEBUG - root - .//art_4_r.jpeg
2022-02-02 12:42:09,566 - DEBUG - root - .//portrait_2_r.jpeg
2022-02-02 12:42:09,613 - DEBUG - root - .//art_5_20.jpeg
2022-02-02 12:42:09,657 - DEBUG - root - .//nautre_9_12.jpeg
2022-02-02 12:42:09,702 - DEBUG - root - .//art_8_r.jpeg
2022-02-02 12:42:09,741 - DEBUG - root - .//portrait_1_r_12.jpeg
2022-02-02 12:42:09,778 - DEBUG - root - .//portrait_6_12.jpeg
2022-02-02 12:42:09,816 - DEBUG - root - .//portrait_10_r_12.jpeg
2022-02-02 12:42:09,852 - DEBUG - root - .//nature_3_7.jpeg
2022-02-02 12:42:09,888 - DEBUG - root - .//portrait_10_r_7.jpeg
2022-02-02 12:42:09,928 - DEBUG - root - .//portrait_3_r_20.jpeg
2022-02-02 12:42:09,963 - DEBUG - root - .//portrait_8_20.jpeg
2022-02-02 12:42:10,014 - DEBUG - root - .//art_1_r_7.jpeg
2022-02-02 12:42:10,054 - DEBUG - root - .//nature_6_4.jpeg
2022-02-02 12:42:10,095 - DEBUG - root - .//nature_2.jpeg
2022-02-02 12:42:10,130 - DEBUG - root - .//art_4_7.jpeg
2022-02-02 12:42:10,174 - DEBUG - root - .//portrait_2_7.jpeg
2022-02-02 12:42:10,218 - DEBUG - root - .//art_1_4.jpeg
2022-02-02 12:42:10,257 - DEBUG - root - .//portrait_7_4.jpeg
2022-02-02 12:42:10,297 - DEBUG - root - .//art_8_7.jpeg
2022-02-02 12:42:10,329 - DEBUG - root - .//portrait_9_r_20.jpeg
2022-02-02 12:42:10,474 - DEBUG - root - .//nautre_8.jpeg
2022-02-02 12:42:10,513 - DEBUG - root - .//nature_1_r_12.jpeg
2022-02-02 12:42:10,555 - DEBUG - root - .//art_4.jpeg
2022-02-02 12:42:10,593 - DEBUG - root - .//portrait_1_r_7.jpeg
2022-02-02 12:42:10,624 - DEBUG - root - .//nature_5_12.jpeg
2022-02-02 12:42:10,656 - DEBUG - root - .//nature_10_r_7.jpeg
2022-02-02 12:42:10,688 - DEBUG - root - .//nature_3_r_20.jpeg
2022-02-02 12:42:10,719 - DEBUG - root - .//portrait_3_20.jpeg
2022-02-02 12:42:10,750 - DEBUG - root - .//nature_3_r.jpeg
2022-02-02 12:42:10,783 - DEBUG - root - .//portrait_1.jpeg
2022-02-02 12:42:10,813 - DEBUG - root - .//art_8_r_20.jpeg
2022-02-02 12:42:10,840 - DEBUG - root - .//nature_6_r_7.jpeg
2022-02-02 12:42:10,868 - DEBUG - root - .//nature_7_r_7.jpeg
2022-02-02 12:42:10,901 - DEBUG - root - .//nautre_9_r_7.jpeg
2022-02-02 12:42:10,937 - DEBUG - root - .//nautre_8_r_7.jpeg
2022-02-02 12:42:10,976 - DEBUG - root - .//nature_2_20.jpeg
2022-02-02 12:42:11,022 - DEBUG - root - .//art_7_r_12.jpeg
2022-02-02 12:42:11,056 - DEBUG - root - .//portrait_4_12.jpeg
2022-02-02 12:42:11,086 - DEBUG - root - .//nature_2_4.jpeg
2022-02-02 12:42:11,116 - DEBUG - root - .//portrait_4_r_20.jpeg
2022-02-02 12:42:11,146 - DEBUG - root - .//nature_7_7.jpeg
2022-02-02 12:42:11,183 - DEBUG - root - .//portrait_10_7.jpeg
2022-02-02 12:42:11,214 - DEBUG - root - .//art_7_20.jpeg
2022-02-02 12:42:11,245 - DEBUG - root - .//art_8.jpeg
2022-02-02 12:42:11,283 - DEBUG - root - .//portrait_6_r_12.jpeg
2022-02-02 12:42:11,323 - DEBUG - root - .//art_9_12.jpeg
2022-02-02 12:42:11,365 - DEBUG - root - .//portrait_10.jpeg
2022-02-02 12:42:11,406 - DEBUG - root - .//art_6_r_7.jpeg
2022-02-02 12:42:11,437 - DEBUG - root - .//art_7_r_7.jpeg
2022-02-02 12:42:11,475 - DEBUG - root - .//portrait_6_r.jpeg
2022-02-02 12:42:11,525 - DEBUG - root - .//art_5_r_20.jpeg
2022-02-02 12:42:11,565 - DEBUG - root - .//nature_5_r_20.jpeg
2022-02-02 12:42:11,599 - DEBUG - root - .//portrait_5_12.jpeg
2022-02-02 12:42:11,632 - DEBUG - root - .//nature_3_20.jpeg
2022-02-02 12:42:11,666 - DEBUG - root - .//art_10_r_12.jpeg
2022-02-02 12:42:11,707 - DEBUG - root - .//nature_5_7.jpeg
2022-02-02 12:42:11,740 - DEBUG - root - .//art_6_20.jpeg
2022-02-02 12:42:11,771 - DEBUG - root - .//nautre_9_r_12.jpeg
2022-02-02 12:42:11,806 - DEBUG - root - .//art_9_r_4.jpeg
2022-02-02 12:42:11,838 - DEBUG - root - .//art_8_12.jpeg
2022-02-02 12:42:11,879 - DEBUG - root - .//art_8_r_4.jpeg
2022-02-02 12:42:11,920 - DEBUG - root - .//art_9.jpeg
2022-02-02 12:42:11,957 - DEBUG - root - .//art_2_r.jpeg
2022-02-02 12:42:11,999 - DEBUG - root - .//portrait_4_r.jpeg
2022-02-02 12:42:12,045 - DEBUG - root - .//portrait_5_r_4.jpeg
2022-02-02 12:42:12,079 - DEBUG - root - .//portrait_4_r_4.jpeg
2022-02-02 12:42:12,110 - DEBUG - root - .//portrait_8_r.jpeg
2022-02-02 12:42:12,141 - DEBUG - root - .//nature_3_r_4.jpeg
2022-02-02 12:42:12,174 - DEBUG - root - .//nature_2_r_4.jpeg
2022-02-02 12:42:12,203 - DEBUG - root - .//nature_7_r_12.jpeg
2022-02-02 12:42:12,244 - DEBUG - root - .//art_10_4.jpeg
2022-02-02 12:42:12,277 - DEBUG - root - .//nature_10_r_20.jpeg
2022-02-02 12:42:12,312 - DEBUG - root - .//art_3_4.jpeg
2022-02-02 12:42:12,344 - DEBUG - root - .//portrait_5_4.jpeg
2022-02-02 12:42:12,374 - DEBUG - root - .//art_6_7.jpeg
2022-02-02 12:42:12,405 - DEBUG - root - .//portrait_9_4.jpeg
2022-02-02 12:42:12,436 - DEBUG - root - .//art_3_r_20.jpeg
2022-02-02 12:42:12,471 - DEBUG - root - .//art_10_r_7.jpeg
2022-02-02 12:42:12,517 - DEBUG - root - .//portrait_2_20.jpeg
2022-02-02 12:42:12,566 - DEBUG - root - .//art_1_r_12.jpeg
2022-02-02 12:42:12,616 - DEBUG - root - .//art_5.jpeg
2022-02-02 12:42:12,662 - DEBUG - root - .//portrait_10_12.jpeg
2022-02-02 12:42:12,698 - DEBUG - root - .//nautre_9_7.jpeg
2022-02-02 12:42:12,735 - DEBUG - root - .//nautre_9.jpeg
2022-02-02 12:42:12,771 - DEBUG - root - .//nature_4_12.jpeg
2022-02-02 12:42:12,818 - DEBUG - root - .//art_1_12.jpeg
2022-02-02 12:42:12,859 - DEBUG - root - .//nature_1_r.jpeg
2022-02-02 12:42:12,909 - DEBUG - root - .//portrait_2_r_20.jpeg
2022-02-02 12:42:12,950 - DEBUG - root - .//nature_10_7.jpeg
2022-02-02 12:42:12,995 - DEBUG - root - .//art_3_r_4.jpeg
2022-02-02 12:42:13,040 - DEBUG - root - .//nature_3.jpeg
2022-02-02 12:42:13,082 - DEBUG - root - .//art_2_r_4.jpeg
2022-02-02 12:42:13,135 - DEBUG - root - read images #300
2022-02-02 12:42:43,902 - DEBUG - root - filenames: 
2022-02-02 12:42:43,905 - DEBUG - root - .//portrait_7_20.jpeg
2022-02-02 12:42:43,956 - DEBUG - root - .//art_10_7.jpeg
2022-02-02 12:42:44,000 - DEBUG - root - .//art_3_7.jpeg
2022-02-02 12:42:44,034 - DEBUG - root - .//portrait_5_7.jpeg
2022-02-02 12:42:44,063 - DEBUG - root - .//nautre_8_20.jpeg
2022-02-02 12:42:44,094 - DEBUG - root - .//portrait_3.jpeg
2022-02-02 12:42:44,122 - DEBUG - root - .//nature_1_12.jpeg
2022-02-02 12:42:44,162 - DEBUG - root - .//portrait_9_7.jpeg
2022-02-02 12:42:44,195 - DEBUG - root - .//art_6_4.jpeg
2022-02-02 12:42:44,223 - DEBUG - root - .//portrait_8_r_12.jpeg
2022-02-02 12:42:44,250 - DEBUG - root - .//art_4_12.jpeg
2022-02-02 12:42:44,285 - DEBUG - root - .//art_10_r_4.jpeg
2022-02-02 12:42:44,319 - DEBUG - root - .//art_6.jpeg
2022-02-02 12:42:44,350 - DEBUG - root - .//nature_2_r_12.jpeg
2022-02-02 12:42:44,382 - DEBUG - root - .//nautre_9_4.jpeg
2022-02-02 12:42:44,413 - DEBUG - root - .//nature_4_r.jpeg
2022-02-02 12:42:44,458 - DEBUG - root - .//art_10_20.jpeg
2022-02-02 12:42:44,500 - DEBUG - root - .//portrait_9_12.jpeg
2022-02-02 12:42:44,541 - DEBUG - root - .//nature_10_4.jpeg
2022-02-02 12:42:44,575 - DEBUG - root - .//art_9_r_12.jpeg
2022-02-02 12:42:44,611 - DEBUG - root - .//art_2_r_7.jpeg
2022-02-02 12:42:44,646 - DEBUG - root - .//art_3_r_7.jpeg
2022-02-02 12:42:44,675 - DEBUG - root - .//nautre_8_r.jpeg
2022-02-02 12:42:44,706 - DEBUG - root - .//art_6_r_20.jpeg
2022-02-02 12:42:44,736 - DEBUG - root - .//nature_5_4.jpeg
2022-02-02 12:42:44,770 - DEBUG - root - .//portrait_5_r_12.jpeg
2022-02-02 12:42:44,801 - DEBUG - root - .//art_8_r_7.jpeg
2022-02-02 12:42:44,832 - DEBUG - root - .//art_9_r_7.jpeg
2022-02-02 12:42:44,868 - DEBUG - root - .//nature_10_20.jpeg
2022-02-02 12:42:44,901 - DEBUG - root - .//portrait_7_r_20.jpeg
2022-02-02 12:42:44,940 - DEBUG - root - .//nature_6_20.jpeg
2022-02-02 12:42:44,974 - DEBUG - root - .//portrait_4_r_7.jpeg
2022-02-02 12:42:45,004 - DEBUG - root - .//portrait_5_r_7.jpeg
2022-02-02 12:42:45,032 - DEBUG - root - .//art_7_r.jpeg
2022-02-02 12:42:45,063 - DEBUG - root - .//portrait_1_r.jpeg
2022-02-02 12:42:45,093 - DEBUG - root - .//art_3_20.jpeg
2022-02-02 12:42:45,131 - DEBUG - root - .//nature_2_r_7.jpeg
2022-02-02 12:42:45,165 - DEBUG - root - .//nature_3_r_7.jpeg
2022-02-02 12:42:45,211 - DEBUG - root - .//art_4_r_12.jpeg
2022-02-02 12:42:45,261 - DEBUG - root - .//nature_4_r_12.jpeg
2022-02-02 12:42:45,434 - DEBUG - root - .//nature_2_7.jpeg
2022-02-02 12:42:45,465 - DEBUG - root - .//nautre_8_r_20.jpeg
2022-02-02 12:42:45,497 - DEBUG - root - .//nature_7_4.jpeg
2022-02-02 12:42:45,528 - DEBUG - root - .//portrait_10_4.jpeg
2022-02-02 12:42:45,556 - DEBUG - root - .//nature_7_20.jpeg
2022-02-02 12:42:45,586 - DEBUG - root - .//art_5_r.jpeg
2022-02-02 12:42:45,623 - DEBUG - root - .//portrait_3_r.jpeg
2022-02-02 12:42:45,651 - DEBUG - root - .//portrait_1_12.jpeg
2022-02-02 12:42:45,681 - DEBUG - root - .//art_7_r_4.jpeg
2022-02-02 12:42:45,714 - DEBUG - root - .//art_6_r_4.jpeg
2022-02-02 12:42:45,746 - DEBUG - root - .//art_9_r.jpeg
2022-02-02 12:42:45,780 - DEBUG - root - .//nature_6_r_20.jpeg
2022-02-02 12:42:45,813 - DEBUG - root - .//art_2_20.jpeg
2022-02-02 12:42:45,853 - DEBUG - root - .//nature_1.jpeg
2022-02-02 12:42:45,898 - DEBUG - root - .//nautre_9_20.jpeg
2022-02-02 12:42:45,935 - DEBUG - root - .//art_4_4.jpeg
2022-02-02 12:42:45,976 - DEBUG - root - .//portrait_2_4.jpeg
2022-02-02 12:42:46,021 - DEBUG - root - .//portrait_6_20.jpeg
2022-02-02 12:42:46,060 - DEBUG - root - .//portrait_1_r_20.jpeg
2022-02-02 12:42:46,101 - DEBUG - root - .//art_8_4.jpeg
2022-02-02 12:42:46,134 - DEBUG - root - .//art_1_7.jpeg
2022-02-02 12:42:46,174 - DEBUG - root - .//portrait_7_7.jpeg
2022-02-02 12:42:46,204 - DEBUG - root - .//art_2_r_12.jpeg
2022-02-02 12:42:46,243 - DEBUG - root - .//art_7.jpeg
2022-02-02 12:42:46,272 - DEBUG - root - .//art_5_12.jpeg
2022-02-02 12:42:46,304 - DEBUG - root - .//nature_10.jpeg
2022-02-02 12:42:46,333 - DEBUG - root - .//portrait_1_r_4.jpeg
2022-02-02 12:42:46,362 - DEBUG - root - .//nature_10_r_4.jpeg
2022-02-02 12:42:46,393 - DEBUG - root - .//art_10.jpeg
2022-02-02 12:42:46,434 - DEBUG - root - .//portrait_10_r_20.jpeg
2022-02-02 12:42:46,468 - DEBUG - root - .//portrait_2.jpeg
2022-02-02 12:42:46,525 - DEBUG - root - .//nature_6_r.jpeg
2022-02-02 12:42:46,567 - DEBUG - root - .//nature_7_r_4.jpeg
2022-02-02 12:42:46,609 - DEBUG - root - .//nature_6_r_4.jpeg
2022-02-02 12:42:46,656 - DEBUG - root - .//portrait_3_r_12.jpeg
2022-02-02 12:42:46,698 - DEBUG - root - .//portrait_8_12.jpeg
2022-02-02 12:42:46,737 - DEBUG - root - .//nautre_8_r_4.jpeg
2022-02-02 12:42:46,781 - DEBUG - root - .//nautre_9_r_4.jpeg
2022-02-02 12:42:46,818 - DEBUG - root - .//portrait_9_r_12.jpeg
2022-02-02 12:42:46,855 - DEBUG - root - .//portrait_9.jpeg
2022-02-02 12:42:46,893 - DEBUG - root - .//nature_1_r_20.jpeg
2022-02-02 12:42:46,940 - DEBUG - root - .//art_1_r.jpeg
2022-02-02 12:42:47,009 - DEBUG - root - .//portrait_7_r.jpeg
2022-02-02 12:42:47,052 - DEBUG - root - .//nature_3_4.jpeg
2022-02-02 12:42:47,093 - DEBUG - root - .//portrait_10_r_4.jpeg
2022-02-02 12:42:47,138 - DEBUG - root - .//art_8_r_12.jpeg
2022-02-02 12:42:47,180 - DEBUG - root - .//nature_5_20.jpeg
2022-02-02 12:42:47,217 - DEBUG - root - .//nature_3_r_12.jpeg
2022-02-02 12:42:47,252 - DEBUG - root - .//nature_6_7.jpeg
2022-02-02 12:42:47,282 - DEBUG - root - .//portrait_3_12.jpeg
2022-02-02 12:42:47,317 - DEBUG - root - .//art_1_r_4.jpeg
2022-02-02 12:42:47,359 - DEBUG - root - .//portrait_4_r_12.jpeg
2022-02-02 12:42:47,393 - DEBUG - root - .//nature_2_r.jpeg
2022-02-02 12:42:47,430 - DEBUG - root - .//art_7_12.jpeg
2022-02-02 12:42:47,464 - DEBUG - root - .//portrait_5.jpeg
2022-02-02 12:42:47,496 - DEBUG - root - .//nature_2_12.jpeg
2022-02-02 12:42:47,529 - DEBUG - root - .//art_7_r_20.jpeg
2022-02-02 12:42:47,560 - DEBUG - root - .//portrait_4_20.jpeg
2022-02-02 12:42:47,589 - DEBUG - root - .//art_5_7.jpeg
2022-02-02 12:42:47,622 - DEBUG - root - .//portrait_3_7.jpeg
2022-02-02 12:42:47,650 - DEBUG - root - .//portrait_6_r_4.jpeg
2022-02-02 12:42:47,677 - DEBUG - root - .//portrait_7_r_4.jpeg
2022-02-02 12:42:47,709 - DEBUG - root - .//art_5_r_12.jpeg
2022-02-02 12:42:47,748 - DEBUG - root - .//nature_1_r_4.jpeg
2022-02-02 12:42:47,788 - DEBUG - root - .//portrait_6_r_20.jpeg
2022-02-02 12:42:47,822 - DEBUG - root - .//art_9_20.jpeg
2022-02-02 12:42:47,856 - DEBUG - root - .//nature_6.jpeg
2022-02-02 12:42:47,885 - DEBUG - root - .//art_9_7.jpeg
2022-02-02 12:42:47,917 - DEBUG - root - .//portrait_6_4.jpeg
2022-02-02 12:42:47,946 - DEBUG - root - .//art_6_12.jpeg
2022-02-02 12:42:47,979 - DEBUG - root - .//nature_7.jpeg
2022-02-02 12:42:48,015 - DEBUG - root - .//nautre_9_r_20.jpeg
2022-02-02 12:42:48,047 - DEBUG - root - .//nautre_8_7.jpeg
2022-02-02 12:42:48,082 - DEBUG - root - .//portrait_5_20.jpeg
2022-02-02 12:42:48,111 - DEBUG - root - .//nature_5_r_12.jpeg
2022-02-02 12:42:48,145 - DEBUG - root - .//nature_3_12.jpeg
2022-02-02 12:42:48,193 - DEBUG - root - .//art_10_r_20.jpeg
2022-02-02 12:42:48,230 - DEBUG - root - .//art_1.jpeg
2022-02-02 12:42:48,266 - DEBUG - root - .//art_2_4.jpeg
2022-02-02 12:42:48,304 - DEBUG - root - .//portrait_4_4.jpeg
2022-02-02 12:42:48,333 - DEBUG - root - .//nature_7_r_20.jpeg
2022-02-02 12:42:48,367 - DEBUG - root - .//portrait_4.jpeg
2022-02-02 12:42:48,395 - DEBUG - root - .//art_8_20.jpeg
2022-02-02 12:42:48,423 - DEBUG - root - .//art_5_r_7.jpeg
2022-02-02 12:42:48,456 - DEBUG - root - .//art_4_r_7.jpeg
2022-02-02 12:42:48,488 - DEBUG - root - .//portrait_9_r_7.jpeg
2022-02-02 12:42:48,516 - DEBUG - root - .//portrait_8_r_7.jpeg
2022-02-02 12:42:48,541 - DEBUG - root - .//portrait_8_4.jpeg
2022-02-02 12:42:48,567 - DEBUG - root - .//art_7_7.jpeg
2022-02-02 12:42:48,595 - DEBUG - root - .//portrait_1_7.jpeg
2022-02-02 12:42:48,621 - DEBUG - root - .//art_3_r.jpeg
2022-02-02 12:42:48,652 - DEBUG - root - .//art_3_r_12.jpeg
2022-02-02 12:42:48,681 - DEBUG - root - .//portrait_5_r.jpeg
2022-02-02 12:42:48,712 - DEBUG - root - .//art_10_r.jpeg
2022-02-02 12:42:48,745 - DEBUG - root - .//nature_10_r_12.jpeg
2022-02-02 12:42:48,772 - DEBUG - root - .//portrait_9_r.jpeg
2022-02-02 12:42:48,802 - DEBUG - root - .//nature_4_7.jpeg
2022-02-02 12:42:48,833 - DEBUG - root - .//art_1_20.jpeg
2022-02-02 12:42:48,865 - DEBUG - root - .//portrait_3_r_7.jpeg
2022-02-02 12:42:48,892 - DEBUG - root - .//portrait_2_r_7.jpeg
2022-02-02 12:42:48,919 - DEBUG - root - .//portrait_2_r_12.jpeg
2022-02-02 12:42:48,948 - DEBUG - root - .//portrait_2_12.jpeg
2022-02-02 12:42:48,975 - DEBUG - root - .//art_1_r_20.jpeg
2022-02-02 12:42:49,009 - DEBUG - root - .//portrait_8.jpeg
2022-02-02 12:42:49,036 - DEBUG - root - .//portrait_10_20.jpeg
2022-02-02 12:42:49,063 - DEBUG - root - .//nature_1_4.jpeg
2022-02-02 12:42:49,097 - DEBUG - root - .//nature_4_20.jpeg
2022-02-02 12:42:49,130 - DEBUG - root - .//nature_5_r_7.jpeg
2022-02-02 12:42:49,160 - DEBUG - root - .//nature_4_r_7.jpeg
2022-02-02 12:42:49,190 - DEBUG - root - .//art_4_20.jpeg
2022-02-02 12:42:49,221 - DEBUG - root - .//portrait_8_r_20.jpeg
2022-02-02 12:42:49,250 - DEBUG - root - .//portrait_7_12.jpeg
2022-02-02 12:42:49,277 - DEBUG - root - .//nautre_8_12.jpeg
2022-02-02 12:42:49,308 - DEBUG - root - .//nature_1_20.jpeg
2022-02-02 12:42:49,342 - DEBUG - root - .//art_6_r.jpeg
2022-02-02 12:42:49,372 - DEBUG - root - .//nature_4_4.jpeg
2022-02-02 12:42:49,403 - DEBUG - root - .//nautre_9_r.jpeg
2022-02-02 12:42:49,430 - DEBUG - root - .//portrait_9_20.jpeg
2022-02-02 12:42:49,465 - DEBUG - root - .//portrait_2_r_4.jpeg
2022-02-02 12:42:49,495 - DEBUG - root - .//portrait_3_r_4.jpeg
2022-02-02 12:42:49,522 - DEBUG - root - .//art_9_r_20.jpeg
2022-02-02 12:42:49,552 - DEBUG - root - .//nature_10_r.jpeg
2022-02-02 12:42:49,579 - DEBUG - root - .//nature_1_7.jpeg
2022-02-02 12:42:49,615 - DEBUG - root - .//nature_2_r_20.jpeg
2022-02-02 12:42:49,646 - DEBUG - root - .//nature_4_r_4.jpeg
2022-02-02 12:42:49,678 - DEBUG - root - .//nature_5_r_4.jpeg
2022-02-02 12:42:49,804 - DEBUG - root - .//art_10_12.jpeg
2022-02-02 12:42:49,837 - DEBUG - root - .//nature_5_r.jpeg
2022-02-02 12:42:49,866 - DEBUG - root - .//portrait_5_r_20.jpeg
2022-02-02 12:42:49,892 - DEBUG - root - .//nature_4.jpeg
2022-02-02 12:42:49,925 - DEBUG - root - .//nautre_8_4.jpeg
2022-02-02 12:42:49,954 - DEBUG - root - .//art_6_r_12.jpeg
2022-02-02 12:42:49,985 - DEBUG - root - .//art_2.jpeg
2022-02-02 12:42:50,020 - DEBUG - root - .//art_3_12.jpeg
2022-02-02 12:42:50,054 - DEBUG - root - .//art_2_7.jpeg
2022-02-02 12:42:50,094 - DEBUG - root - .//portrait_4_7.jpeg
2022-02-02 12:42:50,130 - DEBUG - root - .//art_4_r_20.jpeg
2022-02-02 12:42:50,168 - DEBUG - root - .//portrait_7.jpeg
2022-02-02 12:42:50,201 - DEBUG - root - .//nature_10_12.jpeg
2022-02-02 12:42:50,236 - DEBUG - root - .//portrait_7_r_12.jpeg
2022-02-02 12:42:50,266 - DEBUG - root - .//art_4_r_4.jpeg
2022-02-02 12:42:50,299 - DEBUG - root - .//art_5_r_4.jpeg
2022-02-02 12:42:50,336 - DEBUG - root - .//portrait_8_r_4.jpeg
2022-02-02 12:42:50,364 - DEBUG - root - .//portrait_9_r_4.jpeg
2022-02-02 12:42:50,398 - DEBUG - root - .//art_7_4.jpeg
2022-02-02 12:42:50,430 - DEBUG - root - .//portrait_1_4.jpeg
2022-02-02 12:42:50,461 - DEBUG - root - .//portrait_8_7.jpeg
2022-02-02 12:42:50,493 - DEBUG - root - .//nature_6_12.jpeg
2022-02-02 12:42:50,527 - DEBUG - root - .//nautre_8_r_12.jpeg
2022-02-02 12:42:50,565 - DEBUG - root - .//portrait_6.jpeg
2022-02-02 12:42:50,600 - DEBUG - root - .//nature_4_r_20.jpeg
2022-02-02 12:42:50,636 - DEBUG - root - .//portrait_10_r.jpeg
2022-02-02 12:42:50,669 - DEBUG - root - .//nature_7_r.jpeg
2022-02-02 12:42:50,699 - DEBUG - root - .//art_3.jpeg
2022-02-02 12:42:50,730 - DEBUG - root - .//nature_6_r_12.jpeg
2022-02-02 12:42:50,755 - DEBUG - root - .//art_5_4.jpeg
2022-02-02 12:42:50,787 - DEBUG - root - .//portrait_3_4.jpeg
2022-02-02 12:42:50,813 - DEBUG - root - .//portrait_7_r_7.jpeg
2022-02-02 12:42:50,839 - DEBUG - root - .//portrait_6_r_7.jpeg
2022-02-02 12:42:50,865 - DEBUG - root - .//art_2_12.jpeg
2022-02-02 12:42:50,899 - DEBUG - root - .//nature_1_r_7.jpeg
2022-02-02 12:42:50,934 - DEBUG - root - .//nature_7_12.jpeg
2022-02-02 12:42:50,965 - DEBUG - root - .//portrait_1_20.jpeg
2022-02-02 12:42:50,996 - DEBUG - root - .//portrait_6_7.jpeg
2022-02-02 12:42:51,025 - DEBUG - root - .//art_9_4.jpeg
2022-02-02 12:42:51,056 - DEBUG - root - .//nature_5.jpeg
2022-02-02 12:42:51,088 - DEBUG - root - .//art_2_r_20.jpeg
2022-02-02 12:42:51,124 - DEBUG - root - .//art_4_r.jpeg
2022-02-02 12:42:51,159 - DEBUG - root - .//portrait_2_r.jpeg
2022-02-02 12:42:51,189 - DEBUG - root - .//art_5_20.jpeg
2022-02-02 12:42:51,227 - DEBUG - root - .//nautre_9_12.jpeg
2022-02-02 12:42:51,259 - DEBUG - root - .//art_8_r.jpeg
2022-02-02 12:42:51,290 - DEBUG - root - .//portrait_1_r_12.jpeg
2022-02-02 12:42:51,320 - DEBUG - root - .//portrait_6_12.jpeg
2022-02-02 12:42:51,351 - DEBUG - root - .//portrait_10_r_12.jpeg
2022-02-02 12:42:51,380 - DEBUG - root - .//nature_3_7.jpeg
2022-02-02 12:42:51,413 - DEBUG - root - .//portrait_10_r_7.jpeg
2022-02-02 12:42:51,439 - DEBUG - root - .//portrait_3_r_20.jpeg
2022-02-02 12:42:51,467 - DEBUG - root - .//portrait_8_20.jpeg
2022-02-02 12:42:51,494 - DEBUG - root - .//art_1_r_7.jpeg
2022-02-02 12:42:51,530 - DEBUG - root - .//nature_6_4.jpeg
2022-02-02 12:42:51,558 - DEBUG - root - .//nature_2.jpeg
2022-02-02 12:42:51,585 - DEBUG - root - .//art_4_7.jpeg
2022-02-02 12:42:51,620 - DEBUG - root - .//portrait_2_7.jpeg
2022-02-02 12:42:51,656 - DEBUG - root - .//art_1_4.jpeg
2022-02-02 12:42:51,688 - DEBUG - root - .//portrait_7_4.jpeg
2022-02-02 12:42:51,714 - DEBUG - root - .//art_8_7.jpeg
2022-02-02 12:42:51,742 - DEBUG - root - .//portrait_9_r_20.jpeg
2022-02-02 12:42:51,774 - DEBUG - root - .//nautre_8.jpeg
2022-02-02 12:42:51,804 - DEBUG - root - .//nature_1_r_12.jpeg
2022-02-02 12:42:51,837 - DEBUG - root - .//art_4.jpeg
2022-02-02 12:42:51,871 - DEBUG - root - .//portrait_1_r_7.jpeg
2022-02-02 12:42:51,898 - DEBUG - root - .//nature_5_12.jpeg
2022-02-02 12:42:51,928 - DEBUG - root - .//nature_10_r_7.jpeg
2022-02-02 12:42:51,956 - DEBUG - root - .//nature_3_r_20.jpeg
2022-02-02 12:42:51,988 - DEBUG - root - .//portrait_3_20.jpeg
2022-02-02 12:42:52,020 - DEBUG - root - .//nature_3_r.jpeg
2022-02-02 12:42:52,054 - DEBUG - root - .//portrait_1.jpeg
2022-02-02 12:42:52,085 - DEBUG - root - .//art_8_r_20.jpeg
2022-02-02 12:42:52,116 - DEBUG - root - .//nature_6_r_7.jpeg
2022-02-02 12:42:52,151 - DEBUG - root - .//nature_7_r_7.jpeg
2022-02-02 12:42:52,190 - DEBUG - root - .//nautre_9_r_7.jpeg
2022-02-02 12:42:52,224 - DEBUG - root - .//nautre_8_r_7.jpeg
2022-02-02 12:42:52,257 - DEBUG - root - .//nature_2_20.jpeg
2022-02-02 12:42:52,286 - DEBUG - root - .//art_7_r_12.jpeg
2022-02-02 12:42:52,313 - DEBUG - root - .//portrait_4_12.jpeg
2022-02-02 12:42:52,339 - DEBUG - root - .//nature_2_4.jpeg
2022-02-02 12:42:52,369 - DEBUG - root - .//portrait_4_r_20.jpeg
2022-02-02 12:42:52,396 - DEBUG - root - .//nature_7_7.jpeg
2022-02-02 12:42:52,426 - DEBUG - root - .//portrait_10_7.jpeg
2022-02-02 12:42:52,454 - DEBUG - root - .//art_7_20.jpeg
2022-02-02 12:42:52,482 - DEBUG - root - .//art_8.jpeg
2022-02-02 12:42:52,508 - DEBUG - root - .//portrait_6_r_12.jpeg
2022-02-02 12:42:52,540 - DEBUG - root - .//art_9_12.jpeg
2022-02-02 12:42:52,573 - DEBUG - root - .//portrait_10.jpeg
2022-02-02 12:42:52,602 - DEBUG - root - .//art_6_r_7.jpeg
2022-02-02 12:42:52,631 - DEBUG - root - .//art_7_r_7.jpeg
2022-02-02 12:42:52,663 - DEBUG - root - .//portrait_6_r.jpeg
2022-02-02 12:42:52,697 - DEBUG - root - .//art_5_r_20.jpeg
2022-02-02 12:42:52,736 - DEBUG - root - .//nature_5_r_20.jpeg
2022-02-02 12:42:52,772 - DEBUG - root - .//portrait_5_12.jpeg
2022-02-02 12:42:52,813 - DEBUG - root - .//nature_3_20.jpeg
2022-02-02 12:42:52,870 - DEBUG - root - .//art_10_r_12.jpeg
2022-02-02 12:42:52,922 - DEBUG - root - .//nature_5_7.jpeg
2022-02-02 12:42:52,956 - DEBUG - root - .//art_6_20.jpeg
2022-02-02 12:42:52,986 - DEBUG - root - .//nautre_9_r_12.jpeg
2022-02-02 12:42:53,019 - DEBUG - root - .//art_9_r_4.jpeg
2022-02-02 12:42:53,053 - DEBUG - root - .//art_8_12.jpeg
2022-02-02 12:42:53,093 - DEBUG - root - .//art_8_r_4.jpeg
2022-02-02 12:42:53,136 - DEBUG - root - .//art_9.jpeg
2022-02-02 12:42:53,194 - DEBUG - root - .//art_2_r.jpeg
2022-02-02 12:42:53,243 - DEBUG - root - .//portrait_4_r.jpeg
2022-02-02 12:42:53,279 - DEBUG - root - .//portrait_5_r_4.jpeg
2022-02-02 12:42:53,318 - DEBUG - root - .//portrait_4_r_4.jpeg
2022-02-02 12:42:53,357 - DEBUG - root - .//portrait_8_r.jpeg
2022-02-02 12:42:53,448 - DEBUG - root - .//nature_3_r_4.jpeg
2022-02-02 12:42:53,503 - DEBUG - root - .//nature_2_r_4.jpeg
2022-02-02 12:42:53,546 - DEBUG - root - .//nature_7_r_12.jpeg
2022-02-02 12:42:53,603 - DEBUG - root - .//art_10_4.jpeg
2022-02-02 12:42:53,639 - DEBUG - root - .//nature_10_r_20.jpeg
2022-02-02 12:42:53,774 - DEBUG - root - .//art_3_4.jpeg
2022-02-02 12:42:53,878 - DEBUG - root - .//portrait_5_4.jpeg
2022-02-02 12:42:53,928 - DEBUG - root - .//art_6_7.jpeg
2022-02-02 12:42:54,010 - DEBUG - root - .//portrait_9_4.jpeg
2022-02-02 12:42:54,182 - DEBUG - root - .//art_3_r_20.jpeg
2022-02-02 12:42:54,254 - DEBUG - root - .//art_10_r_7.jpeg
2022-02-02 12:42:54,301 - DEBUG - root - .//portrait_2_20.jpeg
2022-02-02 12:42:54,368 - DEBUG - root - .//art_1_r_12.jpeg
2022-02-02 12:42:54,433 - DEBUG - root - .//art_5.jpeg
2022-02-02 12:42:54,516 - DEBUG - root - .//portrait_10_12.jpeg
2022-02-02 12:42:54,572 - DEBUG - root - .//nautre_9_7.jpeg
2022-02-02 12:42:54,621 - DEBUG - root - .//nautre_9.jpeg
2022-02-02 12:42:54,675 - DEBUG - root - .//nature_4_12.jpeg
2022-02-02 12:42:54,834 - DEBUG - root - .//art_1_12.jpeg
2022-02-02 12:42:54,875 - DEBUG - root - .//nature_1_r.jpeg
2022-02-02 12:42:54,919 - DEBUG - root - .//portrait_2_r_20.jpeg
2022-02-02 12:42:54,956 - DEBUG - root - .//nature_10_7.jpeg
2022-02-02 12:42:55,004 - DEBUG - root - .//art_3_r_4.jpeg
2022-02-02 12:42:55,041 - DEBUG - root - .//nature_3.jpeg
2022-02-02 12:42:55,072 - DEBUG - root - .//art_2_r_4.jpeg
2022-02-02 12:42:55,104 - DEBUG - root - read images #300
2022-02-02 12:43:13,552 - DEBUG - root - filenames: 
2022-02-02 12:43:13,554 - DEBUG - root - ./portrait_7_20.jpeg
2022-02-02 12:43:13,600 - DEBUG - root - ./art_10_7.jpeg
2022-02-02 12:43:13,636 - DEBUG - root - ./art_3_7.jpeg
2022-02-02 12:43:13,667 - DEBUG - root - ./portrait_5_7.jpeg
2022-02-02 12:43:13,695 - DEBUG - root - ./nautre_8_20.jpeg
2022-02-02 12:43:13,730 - DEBUG - root - ./portrait_3.jpeg
2022-02-02 12:43:13,762 - DEBUG - root - ./nature_1_12.jpeg
2022-02-02 12:43:13,805 - DEBUG - root - ./portrait_9_7.jpeg
2022-02-02 12:43:13,849 - DEBUG - root - ./art_6_4.jpeg
2022-02-02 12:43:13,883 - DEBUG - root - ./portrait_8_r_12.jpeg
2022-02-02 12:43:13,916 - DEBUG - root - ./art_4_12.jpeg
2022-02-02 12:43:13,956 - DEBUG - root - ./art_10_r_4.jpeg
2022-02-02 12:43:13,996 - DEBUG - root - ./art_6.jpeg
2022-02-02 12:43:14,031 - DEBUG - root - ./nature_2_r_12.jpeg
2022-02-02 12:43:14,065 - DEBUG - root - ./nautre_9_4.jpeg
2022-02-02 12:43:14,102 - DEBUG - root - ./nature_4_r.jpeg
2022-02-02 12:43:14,142 - DEBUG - root - ./art_10_20.jpeg
2022-02-02 12:43:14,181 - DEBUG - root - ./portrait_9_12.jpeg
2022-02-02 12:43:14,217 - DEBUG - root - ./nature_10_4.jpeg
2022-02-02 12:43:14,252 - DEBUG - root - ./art_9_r_12.jpeg
2022-02-02 12:43:14,290 - DEBUG - root - ./art_2_r_7.jpeg
2022-02-02 12:43:14,329 - DEBUG - root - ./art_3_r_7.jpeg
2022-02-02 12:43:14,362 - DEBUG - root - ./nautre_8_r.jpeg
2022-02-02 12:43:14,406 - DEBUG - root - ./art_6_r_20.jpeg
2022-02-02 12:43:14,438 - DEBUG - root - ./nature_5_4.jpeg
2022-02-02 12:43:14,471 - DEBUG - root - ./portrait_5_r_12.jpeg
2022-02-02 12:43:14,535 - DEBUG - root - ./art_8_r_7.jpeg
2022-02-02 12:43:14,599 - DEBUG - root - ./art_9_r_7.jpeg
2022-02-02 12:43:14,634 - DEBUG - root - ./nature_10_20.jpeg
2022-02-02 12:43:14,667 - DEBUG - root - ./portrait_7_r_20.jpeg
2022-02-02 12:43:14,701 - DEBUG - root - ./nature_6_20.jpeg
2022-02-02 12:43:14,733 - DEBUG - root - ./portrait_4_r_7.jpeg
2022-02-02 12:43:14,767 - DEBUG - root - ./portrait_5_r_7.jpeg
2022-02-02 12:43:14,804 - DEBUG - root - ./art_7_r.jpeg
2022-02-02 12:43:14,838 - DEBUG - root - ./portrait_1_r.jpeg
2022-02-02 12:43:14,871 - DEBUG - root - ./art_3_20.jpeg
2022-02-02 12:43:14,905 - DEBUG - root - ./nature_2_r_7.jpeg
2022-02-02 12:43:14,936 - DEBUG - root - ./nature_3_r_7.jpeg
2022-02-02 12:43:14,970 - DEBUG - root - ./art_4_r_12.jpeg
2022-02-02 12:43:15,006 - DEBUG - root - ./nature_4_r_12.jpeg
2022-02-02 12:43:15,042 - DEBUG - root - ./nature_2_7.jpeg
2022-02-02 12:43:15,070 - DEBUG - root - ./nautre_8_r_20.jpeg
2022-02-02 12:43:15,101 - DEBUG - root - ./nature_7_4.jpeg
2022-02-02 12:43:15,131 - DEBUG - root - ./portrait_10_4.jpeg
2022-02-02 12:43:15,159 - DEBUG - root - ./nature_7_20.jpeg
2022-02-02 12:43:15,188 - DEBUG - root - ./art_5_r.jpeg
2022-02-02 12:43:15,223 - DEBUG - root - ./portrait_3_r.jpeg
2022-02-02 12:43:15,251 - DEBUG - root - ./portrait_1_12.jpeg
2022-02-02 12:43:15,278 - DEBUG - root - ./art_7_r_4.jpeg
2022-02-02 12:43:15,307 - DEBUG - root - ./art_6_r_4.jpeg
2022-02-02 12:43:15,335 - DEBUG - root - ./art_9_r.jpeg
2022-02-02 12:43:15,366 - DEBUG - root - ./nature_6_r_20.jpeg
2022-02-02 12:43:15,394 - DEBUG - root - ./art_2_20.jpeg
2022-02-02 12:43:15,428 - DEBUG - root - ./nature_1.jpeg
2022-02-02 12:43:15,464 - DEBUG - root - ./nautre_9_20.jpeg
2022-02-02 12:43:15,495 - DEBUG - root - ./art_4_4.jpeg
2022-02-02 12:43:15,527 - DEBUG - root - ./portrait_2_4.jpeg
2022-02-02 12:43:15,556 - DEBUG - root - ./portrait_6_20.jpeg
2022-02-02 12:43:15,586 - DEBUG - root - ./portrait_1_r_20.jpeg
2022-02-02 12:43:15,615 - DEBUG - root - ./art_8_4.jpeg
2022-02-02 12:43:15,643 - DEBUG - root - ./art_1_7.jpeg
2022-02-02 12:43:15,676 - DEBUG - root - ./portrait_7_7.jpeg
2022-02-02 12:43:15,703 - DEBUG - root - ./art_2_r_12.jpeg
2022-02-02 12:43:15,737 - DEBUG - root - ./art_7.jpeg
2022-02-02 12:43:15,766 - DEBUG - root - ./art_5_12.jpeg
2022-02-02 12:43:15,800 - DEBUG - root - ./nature_10.jpeg
2022-02-02 12:43:15,832 - DEBUG - root - ./portrait_1_r_4.jpeg
2022-02-02 12:43:15,865 - DEBUG - root - ./nature_10_r_4.jpeg
2022-02-02 12:43:15,898 - DEBUG - root - ./art_10.jpeg
2022-02-02 12:43:15,935 - DEBUG - root - ./portrait_10_r_20.jpeg
2022-02-02 12:43:15,967 - DEBUG - root - ./portrait_2.jpeg
2022-02-02 12:43:15,999 - DEBUG - root - ./nature_6_r.jpeg
2022-02-02 12:43:16,030 - DEBUG - root - ./nature_7_r_4.jpeg
2022-02-02 12:43:16,065 - DEBUG - root - ./nature_6_r_4.jpeg
2022-02-02 12:43:16,115 - DEBUG - root - ./portrait_3_r_12.jpeg
2022-02-02 12:43:16,147 - DEBUG - root - ./portrait_8_12.jpeg
2022-02-02 12:43:16,178 - DEBUG - root - ./nautre_8_r_4.jpeg
2022-02-02 12:43:16,213 - DEBUG - root - ./nautre_9_r_4.jpeg
2022-02-02 12:43:16,244 - DEBUG - root - ./portrait_9_r_12.jpeg
2022-02-02 12:43:16,280 - DEBUG - root - ./portrait_9.jpeg
2022-02-02 12:43:16,315 - DEBUG - root - ./nature_1_r_20.jpeg
2022-02-02 12:43:16,352 - DEBUG - root - ./art_1_r.jpeg
2022-02-02 12:43:16,388 - DEBUG - root - ./portrait_7_r.jpeg
2022-02-02 12:43:16,416 - DEBUG - root - ./nature_3_4.jpeg
2022-02-02 12:43:16,448 - DEBUG - root - ./portrait_10_r_4.jpeg
2022-02-02 12:43:16,477 - DEBUG - root - ./art_8_r_12.jpeg
2022-02-02 12:43:16,506 - DEBUG - root - ./nature_5_20.jpeg
2022-02-02 12:43:16,537 - DEBUG - root - ./nature_3_r_12.jpeg
2022-02-02 12:43:16,573 - DEBUG - root - ./nature_6_7.jpeg
2022-02-02 12:43:16,603 - DEBUG - root - ./portrait_3_12.jpeg
2022-02-02 12:43:16,706 - DEBUG - root - ./art_1_r_4.jpeg
2022-02-02 12:43:16,742 - DEBUG - root - ./portrait_4_r_12.jpeg
2022-02-02 12:43:16,769 - DEBUG - root - ./nature_2_r.jpeg
2022-02-02 12:43:16,799 - DEBUG - root - ./art_7_12.jpeg
2022-02-02 12:43:16,829 - DEBUG - root - ./portrait_5.jpeg
2022-02-02 12:43:16,856 - DEBUG - root - ./nature_2_12.jpeg
2022-02-02 12:43:16,887 - DEBUG - root - ./art_7_r_20.jpeg
2022-02-02 12:43:16,916 - DEBUG - root - ./portrait_4_20.jpeg
2022-02-02 12:43:16,943 - DEBUG - root - ./art_5_7.jpeg
2022-02-02 12:43:16,977 - DEBUG - root - ./portrait_3_7.jpeg
2022-02-02 12:43:17,009 - DEBUG - root - ./portrait_6_r_4.jpeg
2022-02-02 12:43:17,037 - DEBUG - root - ./portrait_7_r_4.jpeg
2022-02-02 12:43:17,067 - DEBUG - root - ./art_5_r_12.jpeg
2022-02-02 12:43:17,103 - DEBUG - root - ./nature_1_r_4.jpeg
2022-02-02 12:43:17,138 - DEBUG - root - ./portrait_6_r_20.jpeg
2022-02-02 12:43:17,170 - DEBUG - root - ./art_9_20.jpeg
2022-02-02 12:43:17,202 - DEBUG - root - ./nature_6.jpeg
2022-02-02 12:43:17,231 - DEBUG - root - ./art_9_7.jpeg
2022-02-02 12:43:17,263 - DEBUG - root - ./portrait_6_4.jpeg
2022-02-02 12:43:17,291 - DEBUG - root - ./art_6_12.jpeg
2022-02-02 12:43:17,322 - DEBUG - root - ./nature_7.jpeg
2022-02-02 12:43:17,354 - DEBUG - root - ./nautre_9_r_20.jpeg
2022-02-02 12:43:17,385 - DEBUG - root - ./nautre_8_7.jpeg
2022-02-02 12:43:17,416 - DEBUG - root - ./portrait_5_20.jpeg
2022-02-02 12:43:17,443 - DEBUG - root - ./nature_5_r_12.jpeg
2022-02-02 12:43:17,475 - DEBUG - root - ./nature_3_12.jpeg
2022-02-02 12:43:17,506 - DEBUG - root - ./art_10_r_20.jpeg
2022-02-02 12:43:17,539 - DEBUG - root - ./art_1.jpeg
2022-02-02 12:43:17,572 - DEBUG - root - ./art_2_4.jpeg
2022-02-02 12:43:17,604 - DEBUG - root - ./portrait_4_4.jpeg
2022-02-02 12:43:17,630 - DEBUG - root - ./nature_7_r_20.jpeg
2022-02-02 12:43:17,660 - DEBUG - root - ./portrait_4.jpeg
2022-02-02 12:43:17,687 - DEBUG - root - ./art_8_20.jpeg
2022-02-02 12:43:17,717 - DEBUG - root - ./art_5_r_7.jpeg
2022-02-02 12:43:17,751 - DEBUG - root - ./art_4_r_7.jpeg
2022-02-02 12:43:17,785 - DEBUG - root - ./portrait_9_r_7.jpeg
2022-02-02 12:43:17,816 - DEBUG - root - ./portrait_8_r_7.jpeg
2022-02-02 12:43:17,846 - DEBUG - root - ./portrait_8_4.jpeg
2022-02-02 12:43:17,873 - DEBUG - root - ./art_7_7.jpeg
2022-02-02 12:43:17,903 - DEBUG - root - ./portrait_1_7.jpeg
2022-02-02 12:43:17,932 - DEBUG - root - ./art_3_r.jpeg
2022-02-02 12:43:17,967 - DEBUG - root - ./art_3_r_12.jpeg
2022-02-02 12:43:18,003 - DEBUG - root - ./portrait_5_r.jpeg
2022-02-02 12:43:18,033 - DEBUG - root - ./art_10_r.jpeg
2022-02-02 12:43:18,072 - DEBUG - root - ./nature_10_r_12.jpeg
2022-02-02 12:43:18,104 - DEBUG - root - ./portrait_9_r.jpeg
2022-02-02 12:43:18,143 - DEBUG - root - ./nature_4_7.jpeg
2022-02-02 12:43:18,179 - DEBUG - root - ./art_1_20.jpeg
2022-02-02 12:43:18,215 - DEBUG - root - ./portrait_3_r_7.jpeg
2022-02-02 12:43:18,244 - DEBUG - root - ./portrait_2_r_7.jpeg
2022-02-02 12:43:18,275 - DEBUG - root - ./portrait_2_r_12.jpeg
2022-02-02 12:43:18,305 - DEBUG - root - ./portrait_2_12.jpeg
2022-02-02 12:43:18,338 - DEBUG - root - ./art_1_r_20.jpeg
2022-02-02 12:43:18,377 - DEBUG - root - ./portrait_8.jpeg
2022-02-02 12:43:18,405 - DEBUG - root - ./portrait_10_20.jpeg
2022-02-02 12:43:18,434 - DEBUG - root - ./nature_1_4.jpeg
2022-02-02 12:43:18,469 - DEBUG - root - ./nature_4_20.jpeg
2022-02-02 12:43:18,504 - DEBUG - root - ./nature_5_r_7.jpeg
2022-02-02 12:43:18,535 - DEBUG - root - ./nature_4_r_7.jpeg
2022-02-02 12:43:18,568 - DEBUG - root - ./art_4_20.jpeg
2022-02-02 12:43:18,600 - DEBUG - root - ./portrait_8_r_20.jpeg
2022-02-02 12:43:18,626 - DEBUG - root - ./portrait_7_12.jpeg
2022-02-02 12:43:18,654 - DEBUG - root - ./nautre_8_12.jpeg
2022-02-02 12:43:18,683 - DEBUG - root - ./nature_1_20.jpeg
2022-02-02 12:43:18,718 - DEBUG - root - ./art_6_r.jpeg
2022-02-02 12:43:18,748 - DEBUG - root - ./nature_4_4.jpeg
2022-02-02 12:43:18,780 - DEBUG - root - ./nautre_9_r.jpeg
2022-02-02 12:43:18,807 - DEBUG - root - ./portrait_9_20.jpeg
2022-02-02 12:43:18,839 - DEBUG - root - ./portrait_2_r_4.jpeg
2022-02-02 12:43:18,867 - DEBUG - root - ./portrait_3_r_4.jpeg
2022-02-02 12:43:18,893 - DEBUG - root - ./art_9_r_20.jpeg
2022-02-02 12:43:18,923 - DEBUG - root - ./nature_10_r.jpeg
2022-02-02 12:43:18,956 - DEBUG - root - ./nature_1_7.jpeg
2022-02-02 12:43:18,994 - DEBUG - root - ./nature_2_r_20.jpeg
2022-02-02 12:43:19,025 - DEBUG - root - ./nature_4_r_4.jpeg
2022-02-02 12:43:19,059 - DEBUG - root - ./nature_5_r_4.jpeg
2022-02-02 12:43:19,088 - DEBUG - root - ./art_10_12.jpeg
2022-02-02 12:43:19,118 - DEBUG - root - ./nature_5_r.jpeg
2022-02-02 12:43:19,145 - DEBUG - root - ./portrait_5_r_20.jpeg
2022-02-02 12:43:19,171 - DEBUG - root - ./nature_4.jpeg
2022-02-02 12:43:19,201 - DEBUG - root - ./nautre_8_4.jpeg
2022-02-02 12:43:19,230 - DEBUG - root - ./art_6_r_12.jpeg
2022-02-02 12:43:19,255 - DEBUG - root - ./art_2.jpeg
2022-02-02 12:43:19,285 - DEBUG - root - ./art_3_12.jpeg
2022-02-02 12:43:19,311 - DEBUG - root - ./art_2_7.jpeg
2022-02-02 12:43:19,339 - DEBUG - root - ./portrait_4_7.jpeg
2022-02-02 12:43:19,363 - DEBUG - root - ./art_4_r_20.jpeg
2022-02-02 12:43:19,391 - DEBUG - root - ./portrait_7.jpeg
2022-02-02 12:43:19,416 - DEBUG - root - ./nature_10_12.jpeg
2022-02-02 12:43:19,442 - DEBUG - root - ./portrait_7_r_12.jpeg
2022-02-02 12:43:19,468 - DEBUG - root - ./art_4_r_4.jpeg
2022-02-02 12:43:19,495 - DEBUG - root - ./art_5_r_4.jpeg
2022-02-02 12:43:19,524 - DEBUG - root - ./portrait_8_r_4.jpeg
2022-02-02 12:43:19,549 - DEBUG - root - ./portrait_9_r_4.jpeg
2022-02-02 12:43:19,575 - DEBUG - root - ./art_7_4.jpeg
2022-02-02 12:43:19,601 - DEBUG - root - ./portrait_1_4.jpeg
2022-02-02 12:43:19,628 - DEBUG - root - ./portrait_8_7.jpeg
2022-02-02 12:43:19,653 - DEBUG - root - ./nature_6_12.jpeg
2022-02-02 12:43:19,679 - DEBUG - root - ./nautre_8_r_12.jpeg
2022-02-02 12:43:19,708 - DEBUG - root - ./portrait_6.jpeg
2022-02-02 12:43:19,735 - DEBUG - root - ./nature_4_r_20.jpeg
2022-02-02 12:43:19,764 - DEBUG - root - ./portrait_10_r.jpeg
2022-02-02 12:43:19,790 - DEBUG - root - ./nature_7_r.jpeg
2022-02-02 12:43:19,817 - DEBUG - root - ./art_3.jpeg
2022-02-02 12:43:19,843 - DEBUG - root - ./nature_6_r_12.jpeg
2022-02-02 12:43:19,869 - DEBUG - root - ./art_5_4.jpeg
2022-02-02 12:43:19,899 - DEBUG - root - ./portrait_3_4.jpeg
2022-02-02 12:43:19,925 - DEBUG - root - ./portrait_7_r_7.jpeg
2022-02-02 12:43:19,951 - DEBUG - root - ./portrait_6_r_7.jpeg
2022-02-02 12:43:19,978 - DEBUG - root - ./art_2_12.jpeg
2022-02-02 12:43:20,011 - DEBUG - root - ./nature_1_r_7.jpeg
2022-02-02 12:43:20,044 - DEBUG - root - ./nature_7_12.jpeg
2022-02-02 12:43:20,076 - DEBUG - root - ./portrait_1_20.jpeg
2022-02-02 12:43:20,103 - DEBUG - root - ./portrait_6_7.jpeg
2022-02-02 12:43:20,128 - DEBUG - root - ./art_9_4.jpeg
2022-02-02 12:43:20,152 - DEBUG - root - ./nature_5.jpeg
2022-02-02 12:43:20,179 - DEBUG - root - ./art_2_r_20.jpeg
2022-02-02 12:43:20,207 - DEBUG - root - ./art_4_r.jpeg
2022-02-02 12:43:20,236 - DEBUG - root - ./portrait_2_r.jpeg
2022-02-02 12:43:20,262 - DEBUG - root - ./art_5_20.jpeg
2022-02-02 12:43:20,292 - DEBUG - root - ./nautre_9_12.jpeg
2022-02-02 12:43:20,319 - DEBUG - root - ./art_8_r.jpeg
2022-02-02 12:43:20,343 - DEBUG - root - ./portrait_1_r_12.jpeg
2022-02-02 12:43:20,369 - DEBUG - root - ./portrait_6_12.jpeg
2022-02-02 12:43:20,395 - DEBUG - root - ./portrait_10_r_12.jpeg
2022-02-02 12:43:20,421 - DEBUG - root - ./nature_3_7.jpeg
2022-02-02 12:43:20,449 - DEBUG - root - ./portrait_10_r_7.jpeg
2022-02-02 12:43:20,475 - DEBUG - root - ./portrait_3_r_20.jpeg
2022-02-02 12:43:20,601 - DEBUG - root - ./portrait_8_20.jpeg
2022-02-02 12:43:20,628 - DEBUG - root - ./art_1_r_7.jpeg
2022-02-02 12:43:20,658 - DEBUG - root - ./nature_6_4.jpeg
2022-02-02 12:43:20,683 - DEBUG - root - ./nature_2.jpeg
2022-02-02 12:43:20,708 - DEBUG - root - ./art_4_7.jpeg
2022-02-02 12:43:20,736 - DEBUG - root - ./portrait_2_7.jpeg
2022-02-02 12:43:20,761 - DEBUG - root - ./art_1_4.jpeg
2022-02-02 12:43:20,790 - DEBUG - root - ./portrait_7_4.jpeg
2022-02-02 12:43:20,815 - DEBUG - root - ./art_8_7.jpeg
2022-02-02 12:43:20,838 - DEBUG - root - ./portrait_9_r_20.jpeg
2022-02-02 12:43:20,865 - DEBUG - root - ./nautre_8.jpeg
2022-02-02 12:43:20,894 - DEBUG - root - ./nature_1_r_12.jpeg
2022-02-02 12:43:20,924 - DEBUG - root - ./art_4.jpeg
2022-02-02 12:43:20,955 - DEBUG - root - ./portrait_1_r_7.jpeg
2022-02-02 12:43:20,980 - DEBUG - root - ./nature_5_12.jpeg
2022-02-02 12:43:21,008 - DEBUG - root - ./nature_10_r_7.jpeg
2022-02-02 12:43:21,034 - DEBUG - root - ./nature_3_r_20.jpeg
2022-02-02 12:43:21,063 - DEBUG - root - ./portrait_3_20.jpeg
2022-02-02 12:43:21,092 - DEBUG - root - ./nature_3_r.jpeg
2022-02-02 12:43:21,119 - DEBUG - root - ./portrait_1.jpeg
2022-02-02 12:43:21,145 - DEBUG - root - ./art_8_r_20.jpeg
2022-02-02 12:43:21,169 - DEBUG - root - ./nature_6_r_7.jpeg
2022-02-02 12:43:21,194 - DEBUG - root - ./nature_7_r_7.jpeg
2022-02-02 12:43:21,222 - DEBUG - root - ./nautre_9_r_7.jpeg
2022-02-02 12:43:21,249 - DEBUG - root - ./nautre_8_r_7.jpeg
2022-02-02 12:43:21,278 - DEBUG - root - ./nature_2_20.jpeg
2022-02-02 12:43:21,303 - DEBUG - root - ./art_7_r_12.jpeg
2022-02-02 12:43:21,328 - DEBUG - root - ./portrait_4_12.jpeg
2022-02-02 12:43:21,352 - DEBUG - root - ./nature_2_4.jpeg
2022-02-02 12:43:21,376 - DEBUG - root - ./portrait_4_r_20.jpeg
2022-02-02 12:43:21,400 - DEBUG - root - ./nature_7_7.jpeg
2022-02-02 12:43:21,428 - DEBUG - root - ./portrait_10_7.jpeg
2022-02-02 12:43:21,453 - DEBUG - root - ./art_7_20.jpeg
2022-02-02 12:43:21,478 - DEBUG - root - ./art_8.jpeg
2022-02-02 12:43:21,502 - DEBUG - root - ./portrait_6_r_12.jpeg
2022-02-02 12:43:21,528 - DEBUG - root - ./art_9_12.jpeg
2022-02-02 12:43:21,555 - DEBUG - root - ./portrait_10.jpeg
2022-02-02 12:43:21,581 - DEBUG - root - ./art_6_r_7.jpeg
2022-02-02 12:43:21,606 - DEBUG - root - ./art_7_r_7.jpeg
2022-02-02 12:43:21,630 - DEBUG - root - ./portrait_6_r.jpeg
2022-02-02 12:43:21,657 - DEBUG - root - ./art_5_r_20.jpeg
2022-02-02 12:43:21,686 - DEBUG - root - ./nature_5_r_20.jpeg
2022-02-02 12:43:21,712 - DEBUG - root - ./portrait_5_12.jpeg
2022-02-02 12:43:21,737 - DEBUG - root - ./nature_3_20.jpeg
2022-02-02 12:43:21,764 - DEBUG - root - ./art_10_r_12.jpeg
2022-02-02 12:43:21,792 - DEBUG - root - ./nature_5_7.jpeg
2022-02-02 12:43:21,820 - DEBUG - root - ./art_6_20.jpeg
2022-02-02 12:43:21,848 - DEBUG - root - ./nautre_9_r_12.jpeg
2022-02-02 12:43:21,875 - DEBUG - root - ./art_9_r_4.jpeg
2022-02-02 12:43:21,898 - DEBUG - root - ./art_8_12.jpeg
2022-02-02 12:43:21,922 - DEBUG - root - ./art_8_r_4.jpeg
2022-02-02 12:43:21,945 - DEBUG - root - ./art_9.jpeg
2022-02-02 12:43:21,972 - DEBUG - root - ./art_2_r.jpeg
2022-02-02 12:43:22,004 - DEBUG - root - ./portrait_4_r.jpeg
2022-02-02 12:43:22,031 - DEBUG - root - ./portrait_5_r_4.jpeg
2022-02-02 12:43:22,060 - DEBUG - root - ./portrait_4_r_4.jpeg
2022-02-02 12:43:22,084 - DEBUG - root - ./portrait_8_r.jpeg
2022-02-02 12:43:22,109 - DEBUG - root - ./nature_3_r_4.jpeg
2022-02-02 12:43:22,137 - DEBUG - root - ./nature_2_r_4.jpeg
2022-02-02 12:43:22,162 - DEBUG - root - ./nature_7_r_12.jpeg
2022-02-02 12:43:22,191 - DEBUG - root - ./art_10_4.jpeg
2022-02-02 12:43:22,218 - DEBUG - root - ./nature_10_r_20.jpeg
2022-02-02 12:43:22,244 - DEBUG - root - ./art_3_4.jpeg
2022-02-02 12:43:22,269 - DEBUG - root - ./portrait_5_4.jpeg
2022-02-02 12:43:22,294 - DEBUG - root - ./art_6_7.jpeg
2022-02-02 12:43:22,319 - DEBUG - root - ./portrait_9_4.jpeg
2022-02-02 12:43:22,345 - DEBUG - root - ./art_3_r_20.jpeg
2022-02-02 12:43:22,371 - DEBUG - root - ./art_10_r_7.jpeg
2022-02-02 12:43:22,402 - DEBUG - root - ./portrait_2_20.jpeg
2022-02-02 12:43:22,432 - DEBUG - root - ./art_1_r_12.jpeg
2022-02-02 12:43:22,463 - DEBUG - root - ./art_5.jpeg
2022-02-02 12:43:22,500 - DEBUG - root - ./portrait_10_12.jpeg
2022-02-02 12:43:22,535 - DEBUG - root - ./nautre_9_7.jpeg
2022-02-02 12:43:22,567 - DEBUG - root - ./nautre_9.jpeg
2022-02-02 12:43:22,600 - DEBUG - root - ./nature_4_12.jpeg
2022-02-02 12:43:22,638 - DEBUG - root - ./art_1_12.jpeg
2022-02-02 12:43:22,674 - DEBUG - root - ./nature_1_r.jpeg
2022-02-02 12:43:22,718 - DEBUG - root - ./portrait_2_r_20.jpeg
2022-02-02 12:43:22,752 - DEBUG - root - ./nature_10_7.jpeg
2022-02-02 12:43:22,786 - DEBUG - root - ./art_3_r_4.jpeg
2022-02-02 12:43:22,818 - DEBUG - root - ./nature_3.jpeg
2022-02-02 12:43:22,853 - DEBUG - root - ./art_2_r_4.jpeg
2022-02-02 12:43:22,887 - DEBUG - root - read images #300
2022-02-02 12:45:33,626 - DEBUG - matplotlib.font_manager - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2022-02-02 12:45:33,628 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-02-02 12:45:33,628 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,628 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,628 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,628 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,629 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2022-02-02 12:45:33,629 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,629 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,629 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,629 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,629 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-02-02 12:45:33,629 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2022-02-02 12:45:33,629 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,630 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-02-02 12:45:33,630 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-02-02 12:45:33,630 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-02-02 12:45:33,630 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2022-02-02 12:45:33,630 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,630 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,630 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2022-02-02 12:45:33,631 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2022-02-02 12:45:33,631 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2022-02-02 12:45:33,631 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2022-02-02 12:45:33,631 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2022-02-02 12:45:33,631 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,632 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2022-02-02 12:45:33,632 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,632 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,632 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2022-02-02 12:45:33,633 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2022-02-02 12:45:33,633 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,633 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,633 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,633 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-02-02 12:45:33,633 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,634 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-02-02 12:45:33,634 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2022-02-02 12:45:33,634 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2022-02-02 12:45:33,635 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,636 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,636 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
2022-02-02 12:45:33,636 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,636 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,637 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,637 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,637 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,667 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 600 normal>) = 10.24
2022-02-02 12:45:33,668 - DEBUG - matplotlib.font_manager - findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal 900 normal>) = 10.525
2022-02-02 12:45:33,669 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,669 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,670 - DEBUG - matplotlib.font_manager - findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal 295 normal>) = 11.14975
2022-02-02 12:45:33,670 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,670 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,670 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,670 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.335
2022-02-02 12:45:33,670 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,670 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,670 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,670 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,670 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal 700 normal>) = 10.335
2022-02-02 12:45:33,671 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.335
2022-02-02 12:45:33,671 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,671 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,671 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 7.322727272727273
2022-02-02 12:45:33,671 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,671 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,671 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,671 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,671 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.535
2022-02-02 12:45:33,671 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,672 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,672 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,672 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,672 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,672 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,672 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,672 - DEBUG - matplotlib.font_manager - findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 100 normal>) = 10.335
2022-02-02 12:45:33,672 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,672 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Charter' (Charter.ttc) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,673 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 500 normal>) = 10.145
2022-02-02 12:45:33,673 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,673 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.335
2022-02-02 12:45:33,673 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,673 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,673 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
2022-02-02 12:45:33,673 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,673 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,674 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,674 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,674 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 6.413636363636363
2022-02-02 12:45:33,674 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,674 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,674 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,674 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal 400 normal>) = 11.05
2022-02-02 12:45:33,675 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,675 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,675 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.335
2022-02-02 12:45:33,675 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,675 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,675 - DEBUG - matplotlib.font_manager - findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 1000 normal>) = 11.62
2022-02-02 12:45:33,675 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,675 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,676 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal 900 normal>) = 10.525
2022-02-02 12:45:33,676 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 200 normal>) = 10.24
2022-02-02 12:45:33,676 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,676 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,676 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 10.335
2022-02-02 12:45:33,676 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,676 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,677 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,677 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,677 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,677 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal 900 normal>) = 10.525
2022-02-02 12:45:33,677 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,677 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Sana' (Sana.ttc) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,677 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,677 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 7.413636363636363
2022-02-02 12:45:33,678 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,678 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,678 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,678 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,678 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
2022-02-02 12:45:33,678 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,678 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,678 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,679 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,679 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,679 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,679 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,679 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 500 normal>) = 10.145
2022-02-02 12:45:33,679 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
2022-02-02 12:45:33,679 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 900 normal>) = 10.525
2022-02-02 12:45:33,679 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.335
2022-02-02 12:45:33,679 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,679 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.335
2022-02-02 12:45:33,679 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-02-02 12:45:33,680 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,680 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,680 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal 900 normal>) = 10.525
2022-02-02 12:45:33,680 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.535
2022-02-02 12:45:33,680 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,680 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 0 normal>) = 10.43
2022-02-02 12:45:33,680 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,680 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,681 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,681 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,681 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,681 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,681 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,681 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,681 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,681 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,681 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,681 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,681 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,681 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,682 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,682 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,682 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,682 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal 500 normal>) = 10.145
2022-02-02 12:45:33,682 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,682 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,682 - DEBUG - matplotlib.font_manager - findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,682 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal 400 normal>) = 11.05
2022-02-02 12:45:33,682 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,682 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 11.335
2022-02-02 12:45:33,682 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.335
2022-02-02 12:45:33,683 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,683 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,683 - DEBUG - matplotlib.font_manager - findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 300 normal>) = 10.145
2022-02-02 12:45:33,683 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,683 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
2022-02-02 12:45:33,683 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,683 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Muna' (Muna.ttc) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,683 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,683 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,683 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,683 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,683 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,684 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,684 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,684 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,684 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,684 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,684 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal 900 normal>) = 10.525
2022-02-02 12:45:33,684 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,684 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 7.698636363636363
2022-02-02 12:45:33,684 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,684 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,684 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Skia' (Skia.ttf) normal normal 5 normal>) = 10.42525
2022-02-02 12:45:33,685 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,685 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,685 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,685 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,685 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,685 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Times' (Times.ttc) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,685 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.335
2022-02-02 12:45:33,685 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,685 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,685 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 11.335
2022-02-02 12:45:33,685 - DEBUG - matplotlib.font_manager - findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 1000 normal>) = 10.62
2022-02-02 12:45:33,685 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,686 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,686 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-02-02 12:45:33,686 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal 700 normal>) = 10.335
2022-02-02 12:45:33,686 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,686 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,686 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,686 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,686 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,686 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,686 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,686 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,686 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,687 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,687 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,687 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Marion' (Marion.ttc) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,687 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,687 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,687 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,687 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,687 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
2022-02-02 12:45:33,687 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,687 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,687 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 6.698636363636363
2022-02-02 12:45:33,687 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,688 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 100 normal>) = 10.335
2022-02-02 12:45:33,688 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,688 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,688 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,688 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,688 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal 300 normal>) = 10.145
2022-02-02 12:45:33,688 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 10.335
2022-02-02 12:45:33,688 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.335
2022-02-02 12:45:33,688 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,688 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-02-02 12:45:33,688 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.335
2022-02-02 12:45:33,688 - DEBUG - matplotlib.font_manager - findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.05
2022-02-02 12:45:33,689 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal 900 normal>) = 10.525
2022-02-02 12:45:33,689 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,689 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,689 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,689 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal 400 normal>) = 11.05
2022-02-02 12:45:33,689 - DEBUG - matplotlib.font_manager - findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal 295 normal>) = 10.14975
2022-02-02 12:45:33,689 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,689 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,690 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,690 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,690 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,690 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,690 - DEBUG - matplotlib.font_manager - findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,690 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,690 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.535
2022-02-02 12:45:33,690 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,690 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Farah' (Farah.ttc) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,690 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,690 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,690 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 250 normal>) = 10.1925
2022-02-02 12:45:33,691 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,691 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,691 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2022-02-02 12:45:33,691 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,691 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,691 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.335
2022-02-02 12:45:33,691 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,691 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
2022-02-02 12:45:33,691 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,691 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,691 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,691 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,692 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,692 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,692 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,692 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,692 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,692 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,692 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,692 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.335
2022-02-02 12:45:33,692 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,693 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,693 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,693 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,693 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,693 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,693 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,693 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,694 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,694 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 300 normal>) = 10.145
2022-02-02 12:45:33,694 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,694 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Optima' (Optima.ttc) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,694 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,694 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,694 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,695 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,695 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,695 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,695 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,695 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,695 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,696 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,696 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,696 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 800 normal>) = 10.43
2022-02-02 12:45:33,696 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.335
2022-02-02 12:45:33,696 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,696 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,697 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 500 normal>) = 2.872272727272727
2022-02-02 12:45:33,697 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 3.9713636363636367
2022-02-02 12:45:33,697 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,697 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,697 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.335
2022-02-02 12:45:33,697 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,698 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,698 - DEBUG - matplotlib.font_manager - findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,698 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.335
2022-02-02 12:45:33,698 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,698 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,698 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,699 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,699 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,699 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,699 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,699 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,699 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.335
2022-02-02 12:45:33,699 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,699 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 4.971363636363637
2022-02-02 12:45:33,700 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,700 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,700 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.535
2022-02-02 12:45:33,700 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,700 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,700 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,701 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
2022-02-02 12:45:33,701 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,701 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,701 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,701 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-02-02 12:45:33,701 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,702 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal 900 normal>) = 10.525
2022-02-02 12:45:33,702 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,702 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal 700 normal>) = 10.335
2022-02-02 12:45:33,702 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,702 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,702 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,702 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,703 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
2022-02-02 12:45:33,703 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,703 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.335
2022-02-02 12:45:33,703 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,703 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,703 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,703 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 500 normal>) = 10.145
2022-02-02 12:45:33,703 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Futura' (Futura.ttc) normal normal 500 normal>) = 10.145
2022-02-02 12:45:33,704 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,704 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,704 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
2022-02-02 12:45:33,704 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,704 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,704 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,705 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,705 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,705 - DEBUG - matplotlib.font_manager - findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,705 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,705 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,705 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.335
2022-02-02 12:45:33,705 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,706 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,706 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,706 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal 300 normal>) = 10.145
2022-02-02 12:45:33,706 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 500 normal>) = 10.145
2022-02-02 12:45:33,706 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,706 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.335
2022-02-02 12:45:33,706 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,706 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,707 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,707 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,707 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,707 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,707 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 300 normal>) = 10.145
2022-02-02 12:45:33,707 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,707 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,707 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 250 normal>) = 10.1925
2022-02-02 12:45:33,708 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 300 normal>) = 10.145
2022-02-02 12:45:33,708 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 4.6863636363636365
2022-02-02 12:45:33,708 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,708 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,708 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-02 12:45:33,708 - DEBUG - matplotlib.font_manager - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/Users/johann/PycharmProjects/PiQ/env/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2022-02-03 10:28:35,367 - DEBUG - root - filenames: 
2022-02-03 10:28:35,374 - DEBUG - root - ./portrait_7_20.jpeg
2022-02-03 10:28:35,435 - DEBUG - root - ./art_10_7.jpeg
2022-02-03 10:28:35,472 - DEBUG - root - ./art_3_7.jpeg
2022-02-03 10:28:35,507 - DEBUG - root - ./portrait_5_7.jpeg
2022-02-03 10:28:35,539 - DEBUG - root - ./nautre_8_20.jpeg
2022-02-03 10:28:35,578 - DEBUG - root - ./portrait_3.jpeg
2022-02-03 10:28:35,609 - DEBUG - root - ./nature_1_12.jpeg
2022-02-03 10:28:35,651 - DEBUG - root - ./portrait_9_7.jpeg
2022-02-03 10:28:35,686 - DEBUG - root - ./art_6_4.jpeg
2022-02-03 10:28:35,716 - DEBUG - root - ./portrait_8_r_12.jpeg
2022-02-03 10:28:35,748 - DEBUG - root - ./art_4_12.jpeg
2022-02-03 10:28:35,784 - DEBUG - root - ./art_10_r_4.jpeg
2022-02-03 10:28:35,819 - DEBUG - root - ./art_6.jpeg
2022-02-03 10:28:35,849 - DEBUG - root - ./nature_2_r_12.jpeg
2022-02-03 10:28:35,880 - DEBUG - root - ./nautre_9_4.jpeg
2022-02-03 10:28:35,914 - DEBUG - root - ./nature_4_r.jpeg
2022-02-03 10:28:35,956 - DEBUG - root - ./art_10_20.jpeg
2022-02-03 10:28:36,002 - DEBUG - root - ./portrait_9_12.jpeg
2022-02-03 10:28:36,045 - DEBUG - root - ./nature_10_4.jpeg
2022-02-03 10:28:36,080 - DEBUG - root - ./art_9_r_12.jpeg
2022-02-03 10:28:36,116 - DEBUG - root - ./art_2_r_7.jpeg
2022-02-03 10:28:36,152 - DEBUG - root - ./art_3_r_7.jpeg
2022-02-03 10:28:36,186 - DEBUG - root - ./nautre_8_r.jpeg
2022-02-03 10:28:36,221 - DEBUG - root - ./art_6_r_20.jpeg
2022-02-03 10:28:36,250 - DEBUG - root - ./nature_5_4.jpeg
2022-02-03 10:28:36,287 - DEBUG - root - ./portrait_5_r_12.jpeg
2022-02-03 10:28:36,317 - DEBUG - root - ./art_8_r_7.jpeg
2022-02-03 10:28:36,348 - DEBUG - root - ./art_9_r_7.jpeg
2022-02-03 10:28:36,379 - DEBUG - root - ./nature_10_20.jpeg
2022-02-03 10:28:36,418 - DEBUG - root - ./portrait_7_r_20.jpeg
2022-02-03 10:28:36,452 - DEBUG - root - ./nature_6_20.jpeg
2022-02-03 10:28:36,483 - DEBUG - root - ./portrait_4_r_7.jpeg
2022-02-03 10:28:36,512 - DEBUG - root - ./portrait_5_r_7.jpeg
2022-02-03 10:28:36,544 - DEBUG - root - ./art_7_r.jpeg
2022-02-03 10:28:36,577 - DEBUG - root - ./portrait_1_r.jpeg
2022-02-03 10:28:36,632 - DEBUG - root - ./art_3_20.jpeg
2022-02-03 10:28:36,668 - DEBUG - root - ./nature_2_r_7.jpeg
2022-02-03 10:28:36,731 - DEBUG - root - ./nature_3_r_7.jpeg
2022-02-03 10:28:36,765 - DEBUG - root - ./art_4_r_12.jpeg
2022-02-03 10:28:36,805 - DEBUG - root - ./nature_4_r_12.jpeg
2022-02-03 10:28:36,840 - DEBUG - root - ./nature_2_7.jpeg
2022-02-03 10:28:36,868 - DEBUG - root - ./nautre_8_r_20.jpeg
2022-02-03 10:28:36,904 - DEBUG - root - ./nature_7_4.jpeg
2022-02-03 10:28:36,937 - DEBUG - root - ./portrait_10_4.jpeg
2022-02-03 10:28:36,970 - DEBUG - root - ./nature_7_20.jpeg
2022-02-03 10:28:37,004 - DEBUG - root - ./art_5_r.jpeg
2022-02-03 10:28:37,041 - DEBUG - root - ./portrait_3_r.jpeg
2022-02-03 10:28:37,075 - DEBUG - root - ./portrait_1_12.jpeg
2022-02-03 10:28:37,107 - DEBUG - root - ./art_7_r_4.jpeg
2022-02-03 10:28:37,138 - DEBUG - root - ./art_6_r_4.jpeg
2022-02-03 10:28:37,170 - DEBUG - root - ./art_9_r.jpeg
2022-02-03 10:28:37,206 - DEBUG - root - ./nature_6_r_20.jpeg
2022-02-03 10:28:37,242 - DEBUG - root - ./art_2_20.jpeg
2022-02-03 10:28:37,287 - DEBUG - root - ./nature_1.jpeg
2022-02-03 10:28:37,339 - DEBUG - root - ./nautre_9_20.jpeg
2022-02-03 10:28:37,387 - DEBUG - root - ./art_4_4.jpeg
2022-02-03 10:28:37,430 - DEBUG - root - ./portrait_2_4.jpeg
2022-02-03 10:28:37,471 - DEBUG - root - ./portrait_6_20.jpeg
2022-02-03 10:28:37,515 - DEBUG - root - ./portrait_1_r_20.jpeg
2022-02-03 10:28:37,552 - DEBUG - root - ./art_8_4.jpeg
2022-02-03 10:28:37,583 - DEBUG - root - ./art_1_7.jpeg
2022-02-03 10:28:37,620 - DEBUG - root - ./portrait_7_7.jpeg
2022-02-03 10:28:37,654 - DEBUG - root - ./art_2_r_12.jpeg
2022-02-03 10:28:37,693 - DEBUG - root - ./art_7.jpeg
2022-02-03 10:28:37,727 - DEBUG - root - ./art_5_12.jpeg
2022-02-03 10:28:37,767 - DEBUG - root - ./nature_10.jpeg
2022-02-03 10:28:37,802 - DEBUG - root - ./portrait_1_r_4.jpeg
2022-02-03 10:28:37,836 - DEBUG - root - ./nature_10_r_4.jpeg
2022-02-03 10:28:37,872 - DEBUG - root - ./art_10.jpeg
2022-02-03 10:28:37,907 - DEBUG - root - ./portrait_10_r_20.jpeg
2022-02-03 10:28:37,938 - DEBUG - root - ./portrait_2.jpeg
2022-02-03 10:28:37,971 - DEBUG - root - ./nature_6_r.jpeg
2022-02-03 10:28:38,001 - DEBUG - root - ./nature_7_r_4.jpeg
2022-02-03 10:28:38,035 - DEBUG - root - ./nature_6_r_4.jpeg
2022-02-03 10:28:38,066 - DEBUG - root - ./portrait_3_r_12.jpeg
2022-02-03 10:28:38,102 - DEBUG - root - ./portrait_8_12.jpeg
2022-02-03 10:28:38,138 - DEBUG - root - ./nautre_8_r_4.jpeg
2022-02-03 10:28:38,180 - DEBUG - root - ./nautre_9_r_4.jpeg
2022-02-03 10:28:38,217 - DEBUG - root - ./portrait_9_r_12.jpeg
2022-02-03 10:28:38,253 - DEBUG - root - ./portrait_9.jpeg
2022-02-03 10:28:38,290 - DEBUG - root - ./nature_1_r_20.jpeg
2022-02-03 10:28:38,331 - DEBUG - root - ./art_1_r.jpeg
2022-02-03 10:28:38,368 - DEBUG - root - ./portrait_7_r.jpeg
2022-02-03 10:28:38,400 - DEBUG - root - ./nature_3_4.jpeg
2022-02-03 10:28:38,432 - DEBUG - root - ./portrait_10_r_4.jpeg
2022-02-03 10:28:38,462 - DEBUG - root - ./art_8_r_12.jpeg
2022-02-03 10:28:38,489 - DEBUG - root - ./nature_5_20.jpeg
2022-02-03 10:28:38,521 - DEBUG - root - ./nature_3_r_12.jpeg
2022-02-03 10:28:38,553 - DEBUG - root - ./nature_6_7.jpeg
2022-02-03 10:28:38,583 - DEBUG - root - ./portrait_3_12.jpeg
2022-02-03 10:28:38,614 - DEBUG - root - ./art_1_r_4.jpeg
2022-02-03 10:28:38,647 - DEBUG - root - ./portrait_4_r_12.jpeg
2022-02-03 10:28:38,675 - DEBUG - root - ./nature_2_r.jpeg
2022-02-03 10:28:38,705 - DEBUG - root - ./art_7_12.jpeg
2022-02-03 10:28:38,734 - DEBUG - root - ./portrait_5.jpeg
2022-02-03 10:28:38,764 - DEBUG - root - ./nature_2_12.jpeg
2022-02-03 10:28:38,793 - DEBUG - root - ./art_7_r_20.jpeg
2022-02-03 10:28:38,822 - DEBUG - root - ./portrait_4_20.jpeg
2022-02-03 10:28:38,851 - DEBUG - root - ./art_5_7.jpeg
2022-02-03 10:28:38,885 - DEBUG - root - ./portrait_3_7.jpeg
2022-02-03 10:28:38,914 - DEBUG - root - ./portrait_6_r_4.jpeg
2022-02-03 10:28:38,943 - DEBUG - root - ./portrait_7_r_4.jpeg
2022-02-03 10:28:38,974 - DEBUG - root - ./art_5_r_12.jpeg
2022-02-03 10:28:39,008 - DEBUG - root - ./nature_1_r_4.jpeg
2022-02-03 10:28:39,045 - DEBUG - root - ./portrait_6_r_20.jpeg
2022-02-03 10:28:39,080 - DEBUG - root - ./art_9_20.jpeg
2022-02-03 10:28:39,110 - DEBUG - root - ./nature_6.jpeg
2022-02-03 10:28:39,139 - DEBUG - root - ./art_9_7.jpeg
2022-02-03 10:28:39,169 - DEBUG - root - ./portrait_6_4.jpeg
2022-02-03 10:28:39,195 - DEBUG - root - ./art_6_12.jpeg
2022-02-03 10:28:39,223 - DEBUG - root - ./nature_7.jpeg
2022-02-03 10:28:39,254 - DEBUG - root - ./nautre_9_r_20.jpeg
2022-02-03 10:28:39,285 - DEBUG - root - ./nautre_8_7.jpeg
2022-02-03 10:28:39,317 - DEBUG - root - ./portrait_5_20.jpeg
2022-02-03 10:28:39,349 - DEBUG - root - ./nature_5_r_12.jpeg
2022-02-03 10:28:39,383 - DEBUG - root - ./nature_3_12.jpeg
2022-02-03 10:28:39,419 - DEBUG - root - ./art_10_r_20.jpeg
2022-02-03 10:28:39,461 - DEBUG - root - ./art_1.jpeg
2022-02-03 10:28:39,505 - DEBUG - root - ./art_2_4.jpeg
2022-02-03 10:28:39,549 - DEBUG - root - ./portrait_4_4.jpeg
2022-02-03 10:28:39,585 - DEBUG - root - ./nature_7_r_20.jpeg
2022-02-03 10:28:39,627 - DEBUG - root - ./portrait_4.jpeg
2022-02-03 10:28:39,663 - DEBUG - root - ./art_8_20.jpeg
2022-02-03 10:28:39,697 - DEBUG - root - ./art_5_r_7.jpeg
2022-02-03 10:28:39,735 - DEBUG - root - ./art_4_r_7.jpeg
2022-02-03 10:28:39,768 - DEBUG - root - ./portrait_9_r_7.jpeg
2022-02-03 10:28:39,799 - DEBUG - root - ./portrait_8_r_7.jpeg
2022-02-03 10:28:39,830 - DEBUG - root - ./portrait_8_4.jpeg
2022-02-03 10:28:39,859 - DEBUG - root - ./art_7_7.jpeg
2022-02-03 10:28:39,890 - DEBUG - root - ./portrait_1_7.jpeg
2022-02-03 10:28:39,928 - DEBUG - root - ./art_3_r.jpeg
2022-02-03 10:28:39,969 - DEBUG - root - ./art_3_r_12.jpeg
2022-02-03 10:28:40,009 - DEBUG - root - ./portrait_5_r.jpeg
2022-02-03 10:28:40,048 - DEBUG - root - ./art_10_r.jpeg
2022-02-03 10:28:40,092 - DEBUG - root - ./nature_10_r_12.jpeg
2022-02-03 10:28:40,126 - DEBUG - root - ./portrait_9_r.jpeg
2022-02-03 10:28:40,159 - DEBUG - root - ./nature_4_7.jpeg
2022-02-03 10:28:40,194 - DEBUG - root - ./art_1_20.jpeg
2022-02-03 10:28:40,232 - DEBUG - root - ./portrait_3_r_7.jpeg
2022-02-03 10:28:40,261 - DEBUG - root - ./portrait_2_r_7.jpeg
2022-02-03 10:28:40,293 - DEBUG - root - ./portrait_2_r_12.jpeg
2022-02-03 10:28:40,327 - DEBUG - root - ./portrait_2_12.jpeg
2022-02-03 10:28:40,359 - DEBUG - root - ./art_1_r_20.jpeg
2022-02-03 10:28:40,394 - DEBUG - root - ./portrait_8.jpeg
2022-02-03 10:28:40,520 - DEBUG - root - ./portrait_10_20.jpeg
2022-02-03 10:28:40,552 - DEBUG - root - ./nature_1_4.jpeg
2022-02-03 10:28:40,587 - DEBUG - root - ./nature_4_20.jpeg
2022-02-03 10:28:40,622 - DEBUG - root - ./nature_5_r_7.jpeg
2022-02-03 10:28:40,655 - DEBUG - root - ./nature_4_r_7.jpeg
2022-02-03 10:28:40,692 - DEBUG - root - ./art_4_20.jpeg
2022-02-03 10:28:40,729 - DEBUG - root - ./portrait_8_r_20.jpeg
2022-02-03 10:28:40,759 - DEBUG - root - ./portrait_7_12.jpeg
2022-02-03 10:28:40,793 - DEBUG - root - ./nautre_8_12.jpeg
2022-02-03 10:28:40,834 - DEBUG - root - ./nature_1_20.jpeg
2022-02-03 10:28:40,875 - DEBUG - root - ./art_6_r.jpeg
2022-02-03 10:28:40,910 - DEBUG - root - ./nature_4_4.jpeg
2022-02-03 10:28:40,949 - DEBUG - root - ./nautre_9_r.jpeg
2022-02-03 10:28:40,983 - DEBUG - root - ./portrait_9_20.jpeg
2022-02-03 10:28:41,015 - DEBUG - root - ./portrait_2_r_4.jpeg
2022-02-03 10:28:41,047 - DEBUG - root - ./portrait_3_r_4.jpeg
2022-02-03 10:28:41,078 - DEBUG - root - ./art_9_r_20.jpeg
2022-02-03 10:28:41,111 - DEBUG - root - ./nature_10_r.jpeg
2022-02-03 10:28:41,142 - DEBUG - root - ./nature_1_7.jpeg
2022-02-03 10:28:41,179 - DEBUG - root - ./nature_2_r_20.jpeg
2022-02-03 10:28:41,210 - DEBUG - root - ./nature_4_r_4.jpeg
2022-02-03 10:28:41,242 - DEBUG - root - ./nature_5_r_4.jpeg
2022-02-03 10:28:41,273 - DEBUG - root - ./art_10_12.jpeg
2022-02-03 10:28:41,307 - DEBUG - root - ./nature_5_r.jpeg
2022-02-03 10:28:41,339 - DEBUG - root - ./portrait_5_r_20.jpeg
2022-02-03 10:28:41,371 - DEBUG - root - ./nature_4.jpeg
2022-02-03 10:28:41,407 - DEBUG - root - ./nautre_8_4.jpeg
2022-02-03 10:28:41,441 - DEBUG - root - ./art_6_r_12.jpeg
2022-02-03 10:28:41,471 - DEBUG - root - ./art_2.jpeg
2022-02-03 10:28:41,506 - DEBUG - root - ./art_3_12.jpeg
2022-02-03 10:28:41,539 - DEBUG - root - ./art_2_7.jpeg
2022-02-03 10:28:41,573 - DEBUG - root - ./portrait_4_7.jpeg
2022-02-03 10:28:41,602 - DEBUG - root - ./art_4_r_20.jpeg
2022-02-03 10:28:41,638 - DEBUG - root - ./portrait_7.jpeg
2022-02-03 10:28:41,671 - DEBUG - root - ./nature_10_12.jpeg
2022-02-03 10:28:41,704 - DEBUG - root - ./portrait_7_r_12.jpeg
2022-02-03 10:28:41,734 - DEBUG - root - ./art_4_r_4.jpeg
2022-02-03 10:28:41,765 - DEBUG - root - ./art_5_r_4.jpeg
2022-02-03 10:28:41,802 - DEBUG - root - ./portrait_8_r_4.jpeg
2022-02-03 10:28:41,831 - DEBUG - root - ./portrait_9_r_4.jpeg
2022-02-03 10:28:41,861 - DEBUG - root - ./art_7_4.jpeg
2022-02-03 10:28:41,891 - DEBUG - root - ./portrait_1_4.jpeg
2022-02-03 10:28:41,923 - DEBUG - root - ./portrait_8_7.jpeg
2022-02-03 10:28:41,953 - DEBUG - root - ./nature_6_12.jpeg
2022-02-03 10:28:41,984 - DEBUG - root - ./nautre_8_r_12.jpeg
2022-02-03 10:28:42,018 - DEBUG - root - ./portrait_6.jpeg
2022-02-03 10:28:42,052 - DEBUG - root - ./nature_4_r_20.jpeg
2022-02-03 10:28:42,086 - DEBUG - root - ./portrait_10_r.jpeg
2022-02-03 10:28:42,119 - DEBUG - root - ./nature_7_r.jpeg
2022-02-03 10:28:42,151 - DEBUG - root - ./art_3.jpeg
2022-02-03 10:28:42,181 - DEBUG - root - ./nature_6_r_12.jpeg
2022-02-03 10:28:42,211 - DEBUG - root - ./art_5_4.jpeg
2022-02-03 10:28:42,246 - DEBUG - root - ./portrait_3_4.jpeg
2022-02-03 10:28:42,276 - DEBUG - root - ./portrait_7_r_7.jpeg
2022-02-03 10:28:42,307 - DEBUG - root - ./portrait_6_r_7.jpeg
2022-02-03 10:28:42,337 - DEBUG - root - ./art_2_12.jpeg
2022-02-03 10:28:42,372 - DEBUG - root - ./nature_1_r_7.jpeg
2022-02-03 10:28:42,410 - DEBUG - root - ./nature_7_12.jpeg
2022-02-03 10:28:42,444 - DEBUG - root - ./portrait_1_20.jpeg
2022-02-03 10:28:42,474 - DEBUG - root - ./portrait_6_7.jpeg
2022-02-03 10:28:42,501 - DEBUG - root - ./art_9_4.jpeg
2022-02-03 10:28:42,530 - DEBUG - root - ./nature_5.jpeg
2022-02-03 10:28:42,562 - DEBUG - root - ./art_2_r_20.jpeg
2022-02-03 10:28:42,596 - DEBUG - root - ./art_4_r.jpeg
2022-02-03 10:28:42,630 - DEBUG - root - ./portrait_2_r.jpeg
2022-02-03 10:28:42,660 - DEBUG - root - ./art_5_20.jpeg
2022-02-03 10:28:42,696 - DEBUG - root - ./nautre_9_12.jpeg
2022-02-03 10:28:42,729 - DEBUG - root - ./art_8_r.jpeg
2022-02-03 10:28:42,758 - DEBUG - root - ./portrait_1_r_12.jpeg
2022-02-03 10:28:42,789 - DEBUG - root - ./portrait_6_12.jpeg
2022-02-03 10:28:42,821 - DEBUG - root - ./portrait_10_r_12.jpeg
2022-02-03 10:28:42,854 - DEBUG - root - ./nature_3_7.jpeg
2022-02-03 10:28:42,886 - DEBUG - root - ./portrait_10_r_7.jpeg
2022-02-03 10:28:42,917 - DEBUG - root - ./portrait_3_r_20.jpeg
2022-02-03 10:28:42,951 - DEBUG - root - ./portrait_8_20.jpeg
2022-02-03 10:28:42,983 - DEBUG - root - ./art_1_r_7.jpeg
2022-02-03 10:28:43,018 - DEBUG - root - ./nature_6_4.jpeg
2022-02-03 10:28:43,047 - DEBUG - root - ./nature_2.jpeg
2022-02-03 10:28:43,077 - DEBUG - root - ./art_4_7.jpeg
2022-02-03 10:28:43,112 - DEBUG - root - ./portrait_2_7.jpeg
2022-02-03 10:28:43,144 - DEBUG - root - ./art_1_4.jpeg
2022-02-03 10:28:43,180 - DEBUG - root - ./portrait_7_4.jpeg
2022-02-03 10:28:43,210 - DEBUG - root - ./art_8_7.jpeg
2022-02-03 10:28:43,239 - DEBUG - root - ./portrait_9_r_20.jpeg
2022-02-03 10:28:43,274 - DEBUG - root - ./nautre_8.jpeg
2022-02-03 10:28:43,311 - DEBUG - root - ./nature_1_r_12.jpeg
2022-02-03 10:28:43,351 - DEBUG - root - ./art_4.jpeg
2022-02-03 10:28:43,390 - DEBUG - root - ./portrait_1_r_7.jpeg
2022-02-03 10:28:43,420 - DEBUG - root - ./nature_5_12.jpeg
2022-02-03 10:28:43,452 - DEBUG - root - ./nature_10_r_7.jpeg
2022-02-03 10:28:43,484 - DEBUG - root - ./nature_3_r_20.jpeg
2022-02-03 10:28:43,517 - DEBUG - root - ./portrait_3_20.jpeg
2022-02-03 10:28:43,551 - DEBUG - root - ./nature_3_r.jpeg
2022-02-03 10:28:43,584 - DEBUG - root - ./portrait_1.jpeg
2022-02-03 10:28:43,616 - DEBUG - root - ./art_8_r_20.jpeg
2022-02-03 10:28:43,646 - DEBUG - root - ./nature_6_r_7.jpeg
2022-02-03 10:28:43,676 - DEBUG - root - ./nature_7_r_7.jpeg
2022-02-03 10:28:43,709 - DEBUG - root - ./nautre_9_r_7.jpeg
2022-02-03 10:28:43,741 - DEBUG - root - ./nautre_8_r_7.jpeg
2022-02-03 10:28:43,780 - DEBUG - root - ./nature_2_20.jpeg
2022-02-03 10:28:43,817 - DEBUG - root - ./art_7_r_12.jpeg
2022-02-03 10:28:43,850 - DEBUG - root - ./portrait_4_12.jpeg
2022-02-03 10:28:43,883 - DEBUG - root - ./nature_2_4.jpeg
2022-02-03 10:28:43,914 - DEBUG - root - ./portrait_4_r_20.jpeg
2022-02-03 10:28:43,946 - DEBUG - root - ./nature_7_7.jpeg
2022-02-03 10:28:43,982 - DEBUG - root - ./portrait_10_7.jpeg
2022-02-03 10:28:44,012 - DEBUG - root - ./art_7_20.jpeg
2022-02-03 10:28:44,042 - DEBUG - root - ./art_8.jpeg
2022-02-03 10:28:44,070 - DEBUG - root - ./portrait_6_r_12.jpeg
2022-02-03 10:28:44,103 - DEBUG - root - ./art_9_12.jpeg
2022-02-03 10:28:44,138 - DEBUG - root - ./portrait_10.jpeg
2022-02-03 10:28:44,169 - DEBUG - root - ./art_6_r_7.jpeg
2022-02-03 10:28:44,199 - DEBUG - root - ./art_7_r_7.jpeg
2022-02-03 10:28:44,229 - DEBUG - root - ./portrait_6_r.jpeg
2022-02-03 10:28:44,263 - DEBUG - root - ./art_5_r_20.jpeg
2022-02-03 10:28:44,301 - DEBUG - root - ./nature_5_r_20.jpeg
2022-02-03 10:28:44,335 - DEBUG - root - ./portrait_5_12.jpeg
2022-02-03 10:28:44,366 - DEBUG - root - ./nature_3_20.jpeg
2022-02-03 10:28:44,399 - DEBUG - root - ./art_10_r_12.jpeg
2022-02-03 10:28:44,436 - DEBUG - root - ./nature_5_7.jpeg
2022-02-03 10:28:44,469 - DEBUG - root - ./art_6_20.jpeg
2022-02-03 10:28:44,500 - DEBUG - root - ./nautre_9_r_12.jpeg
2022-02-03 10:28:44,532 - DEBUG - root - ./art_9_r_4.jpeg
2022-02-03 10:28:44,666 - DEBUG - root - ./art_8_12.jpeg
2022-02-03 10:28:44,697 - DEBUG - root - ./art_8_r_4.jpeg
2022-02-03 10:28:44,727 - DEBUG - root - ./art_9.jpeg
2022-02-03 10:28:44,761 - DEBUG - root - ./art_2_r.jpeg
2022-02-03 10:28:44,799 - DEBUG - root - ./portrait_4_r.jpeg
2022-02-03 10:28:44,830 - DEBUG - root - ./portrait_5_r_4.jpeg
2022-02-03 10:28:44,860 - DEBUG - root - ./portrait_4_r_4.jpeg
2022-02-03 10:28:44,891 - DEBUG - root - ./portrait_8_r.jpeg
2022-02-03 10:28:44,922 - DEBUG - root - ./nature_3_r_4.jpeg
2022-02-03 10:28:44,955 - DEBUG - root - ./nature_2_r_4.jpeg
2022-02-03 10:28:44,982 - DEBUG - root - ./nature_7_r_12.jpeg
2022-02-03 10:28:45,014 - DEBUG - root - ./art_10_4.jpeg
2022-02-03 10:28:45,046 - DEBUG - root - ./nature_10_r_20.jpeg
2022-02-03 10:28:45,077 - DEBUG - root - ./art_3_4.jpeg
2022-02-03 10:28:45,107 - DEBUG - root - ./portrait_5_4.jpeg
2022-02-03 10:28:45,137 - DEBUG - root - ./art_6_7.jpeg
2022-02-03 10:28:45,167 - DEBUG - root - ./portrait_9_4.jpeg
2022-02-03 10:28:45,196 - DEBUG - root - ./art_3_r_20.jpeg
2022-02-03 10:28:45,227 - DEBUG - root - ./art_10_r_7.jpeg
2022-02-03 10:28:45,263 - DEBUG - root - ./portrait_2_20.jpeg
2022-02-03 10:28:45,294 - DEBUG - root - ./art_1_r_12.jpeg
2022-02-03 10:28:45,332 - DEBUG - root - ./art_5.jpeg
2022-02-03 10:28:45,370 - DEBUG - root - ./portrait_10_12.jpeg
2022-02-03 10:28:45,400 - DEBUG - root - ./nautre_9_7.jpeg
2022-02-03 10:28:45,430 - DEBUG - root - ./nautre_9.jpeg
2022-02-03 10:28:45,462 - DEBUG - root - ./nature_4_12.jpeg
2022-02-03 10:28:45,496 - DEBUG - root - ./art_1_12.jpeg
2022-02-03 10:28:45,531 - DEBUG - root - ./nature_1_r.jpeg
2022-02-03 10:28:45,572 - DEBUG - root - ./portrait_2_r_20.jpeg
2022-02-03 10:28:45,608 - DEBUG - root - ./nature_10_7.jpeg
2022-02-03 10:28:45,640 - DEBUG - root - ./art_3_r_4.jpeg
2022-02-03 10:28:45,671 - DEBUG - root - ./nature_3.jpeg
2022-02-03 10:28:45,703 - DEBUG - root - ./art_2_r_4.jpeg
2022-02-03 10:28:45,742 - DEBUG - root - read images #300
2022-02-03 10:52:14,599 - DEBUG - matplotlib.font_manager - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2022-02-03 10:52:14,601 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-02-03 10:52:14,601 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,601 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,602 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,602 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,602 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2022-02-03 10:52:14,602 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,602 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,602 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,602 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,602 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-02-03 10:52:14,602 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2022-02-03 10:52:14,602 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,602 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-02-03 10:52:14,603 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-02-03 10:52:14,603 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-02-03 10:52:14,603 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2022-02-03 10:52:14,603 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,603 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,603 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2022-02-03 10:52:14,603 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2022-02-03 10:52:14,603 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2022-02-03 10:52:14,603 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2022-02-03 10:52:14,603 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2022-02-03 10:52:14,603 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,603 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2022-02-03 10:52:14,604 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,604 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,604 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2022-02-03 10:52:14,604 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2022-02-03 10:52:14,604 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,604 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,604 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,604 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-02-03 10:52:14,604 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,604 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-02-03 10:52:14,604 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2022-02-03 10:52:14,604 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2022-02-03 10:52:14,604 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,605 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,605 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
2022-02-03 10:52:14,605 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,605 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,606 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,606 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,606 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,606 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 600 normal>) = 10.24
2022-02-03 10:52:14,606 - DEBUG - matplotlib.font_manager - findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal 900 normal>) = 10.525
2022-02-03 10:52:14,607 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,607 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,607 - DEBUG - matplotlib.font_manager - findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal 295 normal>) = 11.14975
2022-02-03 10:52:14,607 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,607 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,608 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,608 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.335
2022-02-03 10:52:14,608 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,608 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,608 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,608 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,608 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal 700 normal>) = 10.335
2022-02-03 10:52:14,608 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.335
2022-02-03 10:52:14,608 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,609 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,609 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 7.322727272727273
2022-02-03 10:52:14,609 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,609 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,609 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,609 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,609 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.535
2022-02-03 10:52:14,609 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,609 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,609 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,609 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,609 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,609 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,610 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,610 - DEBUG - matplotlib.font_manager - findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 100 normal>) = 10.335
2022-02-03 10:52:14,610 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,610 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Charter' (Charter.ttc) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,610 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 500 normal>) = 10.145
2022-02-03 10:52:14,610 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,610 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.335
2022-02-03 10:52:14,610 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,610 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,610 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
2022-02-03 10:52:14,611 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,611 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,611 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,611 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,611 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 6.413636363636363
2022-02-03 10:52:14,611 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,611 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,611 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,611 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal 400 normal>) = 11.05
2022-02-03 10:52:14,612 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,612 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,612 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.335
2022-02-03 10:52:14,612 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,612 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,612 - DEBUG - matplotlib.font_manager - findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 1000 normal>) = 11.62
2022-02-03 10:52:14,612 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,612 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,612 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal 900 normal>) = 10.525
2022-02-03 10:52:14,612 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 200 normal>) = 10.24
2022-02-03 10:52:14,613 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,613 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,613 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 10.335
2022-02-03 10:52:14,613 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,613 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,614 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,614 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,614 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,614 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal 900 normal>) = 10.525
2022-02-03 10:52:14,614 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,614 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Sana' (Sana.ttc) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,614 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,615 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 7.413636363636363
2022-02-03 10:52:14,615 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,615 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,615 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,615 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,615 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
2022-02-03 10:52:14,616 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,616 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,616 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,616 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,616 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,617 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,617 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,617 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 500 normal>) = 10.145
2022-02-03 10:52:14,617 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
2022-02-03 10:52:14,617 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 900 normal>) = 10.525
2022-02-03 10:52:14,617 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.335
2022-02-03 10:52:14,617 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,617 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.335
2022-02-03 10:52:14,617 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-02-03 10:52:14,617 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,618 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,618 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal 900 normal>) = 10.525
2022-02-03 10:52:14,618 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.535
2022-02-03 10:52:14,618 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,618 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 0 normal>) = 10.43
2022-02-03 10:52:14,618 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,618 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,618 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,618 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,618 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,618 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,618 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,619 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,619 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,619 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,619 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,619 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,619 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,619 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,619 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,619 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,619 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,619 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal 500 normal>) = 10.145
2022-02-03 10:52:14,619 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,619 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,620 - DEBUG - matplotlib.font_manager - findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,620 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal 400 normal>) = 11.05
2022-02-03 10:52:14,620 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,620 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 11.335
2022-02-03 10:52:14,620 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.335
2022-02-03 10:52:14,620 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,620 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,620 - DEBUG - matplotlib.font_manager - findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 300 normal>) = 10.145
2022-02-03 10:52:14,620 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,620 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
2022-02-03 10:52:14,620 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,620 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Muna' (Muna.ttc) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,620 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,621 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,621 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,621 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,621 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,622 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,622 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,622 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,622 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,623 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,623 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal 900 normal>) = 10.525
2022-02-03 10:52:14,623 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,623 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 7.698636363636363
2022-02-03 10:52:14,623 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,623 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,623 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Skia' (Skia.ttf) normal normal 5 normal>) = 10.42525
2022-02-03 10:52:14,623 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,623 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,624 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,624 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,624 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,624 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Times' (Times.ttc) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,624 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.335
2022-02-03 10:52:14,624 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,624 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,624 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 11.335
2022-02-03 10:52:14,625 - DEBUG - matplotlib.font_manager - findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 1000 normal>) = 10.62
2022-02-03 10:52:14,625 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,625 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,625 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-02-03 10:52:14,626 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal 700 normal>) = 10.335
2022-02-03 10:52:14,626 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,626 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,626 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,626 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,627 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,627 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,627 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,627 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,627 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,627 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,628 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,628 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Marion' (Marion.ttc) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,628 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,628 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,628 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,628 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,629 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
2022-02-03 10:52:14,629 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,629 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,629 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 6.698636363636363
2022-02-03 10:52:14,629 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,629 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 100 normal>) = 10.335
2022-02-03 10:52:14,629 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,630 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,631 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,631 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,631 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal 300 normal>) = 10.145
2022-02-03 10:52:14,631 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 10.335
2022-02-03 10:52:14,631 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.335
2022-02-03 10:52:14,631 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,632 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-02-03 10:52:14,632 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.335
2022-02-03 10:52:14,632 - DEBUG - matplotlib.font_manager - findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.05
2022-02-03 10:52:14,632 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal 900 normal>) = 10.525
2022-02-03 10:52:14,632 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,632 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,633 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,633 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal 400 normal>) = 11.05
2022-02-03 10:52:14,633 - DEBUG - matplotlib.font_manager - findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal 295 normal>) = 10.14975
2022-02-03 10:52:14,633 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,633 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,633 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,633 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,633 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,633 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,634 - DEBUG - matplotlib.font_manager - findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,634 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,634 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.535
2022-02-03 10:52:14,634 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,634 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Farah' (Farah.ttc) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,634 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,634 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,635 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 250 normal>) = 10.1925
2022-02-03 10:52:14,635 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,635 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,635 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2022-02-03 10:52:14,635 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,635 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,635 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.335
2022-02-03 10:52:14,635 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,635 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
2022-02-03 10:52:14,635 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,635 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,635 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,636 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,636 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,636 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,636 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,636 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,636 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,636 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,636 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,636 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.335
2022-02-03 10:52:14,636 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,636 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,636 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,637 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,637 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,637 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,637 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,637 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,637 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,637 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 300 normal>) = 10.145
2022-02-03 10:52:14,637 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,637 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Optima' (Optima.ttc) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,638 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,638 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,638 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,638 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,639 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,639 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,639 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,640 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,640 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,640 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,640 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,640 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 800 normal>) = 10.43
2022-02-03 10:52:14,640 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.335
2022-02-03 10:52:14,640 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,641 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,641 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 500 normal>) = 2.872272727272727
2022-02-03 10:52:14,641 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 3.9713636363636367
2022-02-03 10:52:14,641 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,641 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,641 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.335
2022-02-03 10:52:14,641 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,641 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,642 - DEBUG - matplotlib.font_manager - findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,642 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.335
2022-02-03 10:52:14,642 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,642 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,642 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,642 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,642 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,642 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,642 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,642 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,642 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.335
2022-02-03 10:52:14,642 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,643 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 4.971363636363637
2022-02-03 10:52:14,643 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,643 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,643 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.535
2022-02-03 10:52:14,643 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,643 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,643 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,643 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
2022-02-03 10:52:14,643 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,643 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,643 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,643 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-02-03 10:52:14,644 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,644 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal 900 normal>) = 10.525
2022-02-03 10:52:14,644 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,644 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal 700 normal>) = 10.335
2022-02-03 10:52:14,644 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,644 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,644 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,644 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,644 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
2022-02-03 10:52:14,645 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,645 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.335
2022-02-03 10:52:14,645 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,645 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,645 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,645 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 500 normal>) = 10.145
2022-02-03 10:52:14,645 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Futura' (Futura.ttc) normal normal 500 normal>) = 10.145
2022-02-03 10:52:14,645 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,645 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,645 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
2022-02-03 10:52:14,645 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,645 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,646 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,646 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,646 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,646 - DEBUG - matplotlib.font_manager - findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,647 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,647 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,647 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.335
2022-02-03 10:52:14,647 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,648 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,648 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,648 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal 300 normal>) = 10.145
2022-02-03 10:52:14,649 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 500 normal>) = 10.145
2022-02-03 10:52:14,649 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,649 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.335
2022-02-03 10:52:14,649 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,649 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,649 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,649 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,650 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,650 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,650 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 300 normal>) = 10.145
2022-02-03 10:52:14,650 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,650 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,650 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 250 normal>) = 10.1925
2022-02-03 10:52:14,650 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 300 normal>) = 10.145
2022-02-03 10:52:14,650 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 4.6863636363636365
2022-02-03 10:52:14,650 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,650 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,651 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 10:52:14,651 - DEBUG - matplotlib.font_manager - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/Users/johann/PycharmProjects/PiQ/env/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2022-02-03 11:02:53,182 - DEBUG - matplotlib.font_manager - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=30.0.
2022-02-03 11:02:53,183 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-02-03 11:02:53,183 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,184 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,184 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,184 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,184 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2022-02-03 11:02:53,184 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,184 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,184 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,184 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,184 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-02-03 11:02:53,184 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2022-02-03 11:02:53,184 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,184 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-02-03 11:02:53,184 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-02-03 11:02:53,185 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-02-03 11:02:53,185 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2022-02-03 11:02:53,185 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,185 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,185 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2022-02-03 11:02:53,185 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2022-02-03 11:02:53,185 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2022-02-03 11:02:53,185 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2022-02-03 11:02:53,185 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2022-02-03 11:02:53,186 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,186 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2022-02-03 11:02:53,186 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,186 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,186 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2022-02-03 11:02:53,186 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2022-02-03 11:02:53,186 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,186 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,187 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,187 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-02-03 11:02:53,187 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,187 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-02-03 11:02:53,187 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2022-02-03 11:02:53,187 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2022-02-03 11:02:53,187 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,187 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,187 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
2022-02-03 11:02:53,188 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,188 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,188 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,188 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,188 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,188 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 600 normal>) = 10.24
2022-02-03 11:02:53,188 - DEBUG - matplotlib.font_manager - findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal 900 normal>) = 10.525
2022-02-03 11:02:53,188 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,188 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,189 - DEBUG - matplotlib.font_manager - findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal 295 normal>) = 11.14975
2022-02-03 11:02:53,189 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,189 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,189 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,189 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.335
2022-02-03 11:02:53,189 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,189 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,189 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,189 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,189 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal 700 normal>) = 10.335
2022-02-03 11:02:53,189 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.335
2022-02-03 11:02:53,190 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,190 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,190 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 7.322727272727273
2022-02-03 11:02:53,190 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,190 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,190 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,190 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,190 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.535
2022-02-03 11:02:53,190 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,191 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,191 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,191 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,191 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,191 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,191 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,191 - DEBUG - matplotlib.font_manager - findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 100 normal>) = 10.335
2022-02-03 11:02:53,192 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,192 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Charter' (Charter.ttc) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,192 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 500 normal>) = 10.145
2022-02-03 11:02:53,192 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,192 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.335
2022-02-03 11:02:53,192 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,192 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,192 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
2022-02-03 11:02:53,192 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,193 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,193 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,193 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,193 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 6.413636363636363
2022-02-03 11:02:53,193 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,193 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,193 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,194 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal 400 normal>) = 11.05
2022-02-03 11:02:53,194 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,194 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,194 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.335
2022-02-03 11:02:53,194 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,194 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,194 - DEBUG - matplotlib.font_manager - findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 1000 normal>) = 11.62
2022-02-03 11:02:53,194 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,194 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,194 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal 900 normal>) = 10.525
2022-02-03 11:02:53,194 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 200 normal>) = 10.24
2022-02-03 11:02:53,195 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,195 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,195 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 10.335
2022-02-03 11:02:53,195 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,195 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,195 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,195 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,195 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,195 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal 900 normal>) = 10.525
2022-02-03 11:02:53,195 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,196 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Sana' (Sana.ttc) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,196 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,196 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 7.413636363636363
2022-02-03 11:02:53,196 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,196 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,196 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,196 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,196 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
2022-02-03 11:02:53,196 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,196 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,197 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,197 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,197 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,197 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,197 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,197 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 500 normal>) = 10.145
2022-02-03 11:02:53,197 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
2022-02-03 11:02:53,197 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 900 normal>) = 10.525
2022-02-03 11:02:53,197 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.335
2022-02-03 11:02:53,197 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,197 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.335
2022-02-03 11:02:53,197 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-02-03 11:02:53,197 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,198 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,198 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal 900 normal>) = 10.525
2022-02-03 11:02:53,198 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.535
2022-02-03 11:02:53,198 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,198 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 0 normal>) = 10.43
2022-02-03 11:02:53,198 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,198 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,198 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,198 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,198 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,198 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,198 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,199 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,199 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,199 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,199 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,199 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,199 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,199 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,199 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,199 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,199 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,199 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal 500 normal>) = 10.145
2022-02-03 11:02:53,199 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,199 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,200 - DEBUG - matplotlib.font_manager - findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,200 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal 400 normal>) = 11.05
2022-02-03 11:02:53,200 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,200 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 11.335
2022-02-03 11:02:53,200 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.335
2022-02-03 11:02:53,200 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,200 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,200 - DEBUG - matplotlib.font_manager - findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 300 normal>) = 10.145
2022-02-03 11:02:53,200 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,200 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
2022-02-03 11:02:53,200 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,200 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Muna' (Muna.ttc) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,200 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,200 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,201 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,201 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,201 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,201 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,201 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,201 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,201 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,201 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,201 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal 900 normal>) = 10.525
2022-02-03 11:02:53,201 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,201 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 7.698636363636363
2022-02-03 11:02:53,201 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,201 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,201 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Skia' (Skia.ttf) normal normal 5 normal>) = 10.42525
2022-02-03 11:02:53,201 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,202 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,202 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,202 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,202 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,202 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Times' (Times.ttc) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,202 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.335
2022-02-03 11:02:53,202 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,202 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,202 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 11.335
2022-02-03 11:02:53,202 - DEBUG - matplotlib.font_manager - findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 1000 normal>) = 10.62
2022-02-03 11:02:53,202 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,202 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,202 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-02-03 11:02:53,202 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal 700 normal>) = 10.335
2022-02-03 11:02:53,203 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,203 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,203 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,203 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,203 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,203 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,203 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,203 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,203 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,203 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,203 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,203 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Marion' (Marion.ttc) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,203 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,203 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,203 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,204 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,204 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
2022-02-03 11:02:53,204 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,204 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,204 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 6.698636363636363
2022-02-03 11:02:53,204 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,204 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 100 normal>) = 10.335
2022-02-03 11:02:53,204 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,204 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,204 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,204 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,204 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal 300 normal>) = 10.145
2022-02-03 11:02:53,204 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 10.335
2022-02-03 11:02:53,204 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.335
2022-02-03 11:02:53,204 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,205 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-02-03 11:02:53,205 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.335
2022-02-03 11:02:53,205 - DEBUG - matplotlib.font_manager - findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.05
2022-02-03 11:02:53,205 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal 900 normal>) = 10.525
2022-02-03 11:02:53,205 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,205 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,205 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,205 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal 400 normal>) = 11.05
2022-02-03 11:02:53,205 - DEBUG - matplotlib.font_manager - findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal 295 normal>) = 10.14975
2022-02-03 11:02:53,205 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,205 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,205 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,205 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,205 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,205 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,206 - DEBUG - matplotlib.font_manager - findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,206 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,206 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.535
2022-02-03 11:02:53,206 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,206 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Farah' (Farah.ttc) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,206 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,206 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,206 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 250 normal>) = 10.1925
2022-02-03 11:02:53,206 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,206 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,206 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2022-02-03 11:02:53,206 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,206 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,206 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.335
2022-02-03 11:02:53,206 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,207 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
2022-02-03 11:02:53,207 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,207 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,207 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,207 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,207 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,207 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,207 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,207 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,208 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,208 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,208 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,208 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.335
2022-02-03 11:02:53,208 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,208 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,208 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,208 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,208 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,208 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,208 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,208 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,208 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,208 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 300 normal>) = 10.145
2022-02-03 11:02:53,209 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,209 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Optima' (Optima.ttc) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,209 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,209 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,209 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,209 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,209 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,209 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,209 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,209 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,209 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,209 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,209 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,209 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 800 normal>) = 10.43
2022-02-03 11:02:53,209 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.335
2022-02-03 11:02:53,210 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,210 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,210 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 500 normal>) = 2.872272727272727
2022-02-03 11:02:53,210 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 3.9713636363636367
2022-02-03 11:02:53,210 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,210 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,210 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.335
2022-02-03 11:02:53,210 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,210 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,210 - DEBUG - matplotlib.font_manager - findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,210 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.335
2022-02-03 11:02:53,210 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,210 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,210 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,211 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,211 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,211 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,211 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,211 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,211 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.335
2022-02-03 11:02:53,211 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,211 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 4.971363636363637
2022-02-03 11:02:53,211 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,211 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,211 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.535
2022-02-03 11:02:53,211 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,211 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,211 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,212 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
2022-02-03 11:02:53,212 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,212 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,212 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,212 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-02-03 11:02:53,212 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,212 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal 900 normal>) = 10.525
2022-02-03 11:02:53,212 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,212 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal 700 normal>) = 10.335
2022-02-03 11:02:53,212 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,212 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,212 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,212 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,212 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
2022-02-03 11:02:53,212 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,213 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.335
2022-02-03 11:02:53,213 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,213 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,213 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,213 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 500 normal>) = 10.145
2022-02-03 11:02:53,213 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Futura' (Futura.ttc) normal normal 500 normal>) = 10.145
2022-02-03 11:02:53,213 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,213 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,213 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
2022-02-03 11:02:53,213 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,213 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,213 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,213 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,213 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,213 - DEBUG - matplotlib.font_manager - findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,213 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,214 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,214 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.335
2022-02-03 11:02:53,214 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,214 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,214 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,214 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal 300 normal>) = 10.145
2022-02-03 11:02:53,214 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 500 normal>) = 10.145
2022-02-03 11:02:53,214 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,214 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.335
2022-02-03 11:02:53,214 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,214 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,214 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,214 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,214 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,214 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,214 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 300 normal>) = 10.145
2022-02-03 11:02:53,215 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,215 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,215 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 250 normal>) = 10.1925
2022-02-03 11:02:53,215 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 300 normal>) = 10.145
2022-02-03 11:02:53,215 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 4.6863636363636365
2022-02-03 11:02:53,215 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,215 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,215 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-03 11:02:53,215 - DEBUG - matplotlib.font_manager - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=30.0 to DejaVu Sans ('/Users/johann/PycharmProjects/PiQ/env/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2022-02-05 14:37:29,475 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:37:29,482 - DEBUG - matplotlib.font_manager - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2022-02-05 14:37:29,483 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-02-05 14:37:29,483 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,483 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,483 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,483 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,483 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2022-02-05 14:37:29,483 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,483 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,484 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,484 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,484 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-02-05 14:37:29,484 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2022-02-05 14:37:29,484 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,484 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-02-05 14:37:29,484 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-02-05 14:37:29,484 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-02-05 14:37:29,484 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2022-02-05 14:37:29,484 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,484 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,484 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2022-02-05 14:37:29,485 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2022-02-05 14:37:29,485 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2022-02-05 14:37:29,485 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2022-02-05 14:37:29,485 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2022-02-05 14:37:29,485 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,485 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2022-02-05 14:37:29,485 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,485 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,485 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2022-02-05 14:37:29,485 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2022-02-05 14:37:29,485 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,485 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,485 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,486 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-02-05 14:37:29,486 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,486 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-02-05 14:37:29,486 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2022-02-05 14:37:29,486 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2022-02-05 14:37:29,486 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,486 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,486 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
2022-02-05 14:37:29,486 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,486 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,486 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,486 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,486 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,486 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 600 normal>) = 10.24
2022-02-05 14:37:29,487 - DEBUG - matplotlib.font_manager - findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal 900 normal>) = 10.525
2022-02-05 14:37:29,487 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,487 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,487 - DEBUG - matplotlib.font_manager - findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal 295 normal>) = 11.14975
2022-02-05 14:37:29,487 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,487 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,487 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,487 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.335
2022-02-05 14:37:29,487 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,487 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,487 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,487 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,487 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal 700 normal>) = 10.335
2022-02-05 14:37:29,488 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.335
2022-02-05 14:37:29,488 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,488 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,488 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 7.322727272727273
2022-02-05 14:37:29,488 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,488 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,488 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,488 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,488 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.535
2022-02-05 14:37:29,488 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,488 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,488 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,489 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,489 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,489 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,489 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,489 - DEBUG - matplotlib.font_manager - findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 100 normal>) = 10.335
2022-02-05 14:37:29,489 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,489 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Charter' (Charter.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,489 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 500 normal>) = 10.145
2022-02-05 14:37:29,489 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,489 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.335
2022-02-05 14:37:29,489 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,489 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,490 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
2022-02-05 14:37:29,490 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,490 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,490 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,490 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,490 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 6.413636363636363
2022-02-05 14:37:29,490 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,490 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,490 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,490 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal 400 normal>) = 11.05
2022-02-05 14:37:29,490 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,490 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,490 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.335
2022-02-05 14:37:29,490 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,491 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,491 - DEBUG - matplotlib.font_manager - findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 1000 normal>) = 11.62
2022-02-05 14:37:29,491 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,491 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,491 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal 900 normal>) = 10.525
2022-02-05 14:37:29,491 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 200 normal>) = 10.24
2022-02-05 14:37:29,491 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,491 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,491 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 10.335
2022-02-05 14:37:29,491 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,491 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,491 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,491 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,492 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,492 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal 900 normal>) = 10.525
2022-02-05 14:37:29,492 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,492 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Sana' (Sana.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,492 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,492 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 7.413636363636363
2022-02-05 14:37:29,492 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,492 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,492 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,492 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,492 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
2022-02-05 14:37:29,492 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,492 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,493 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,493 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,493 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,493 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,493 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,493 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 500 normal>) = 10.145
2022-02-05 14:37:29,493 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
2022-02-05 14:37:29,493 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 900 normal>) = 10.525
2022-02-05 14:37:29,493 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.335
2022-02-05 14:37:29,493 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,493 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.335
2022-02-05 14:37:29,493 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-02-05 14:37:29,493 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,493 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,494 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal 900 normal>) = 10.525
2022-02-05 14:37:29,494 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.535
2022-02-05 14:37:29,494 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,494 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 0 normal>) = 10.43
2022-02-05 14:37:29,494 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,494 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,494 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,494 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,494 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,494 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,494 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,494 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,494 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,494 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,495 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,495 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,495 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,495 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,495 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,495 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,495 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,495 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal 500 normal>) = 10.145
2022-02-05 14:37:29,495 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,495 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,495 - DEBUG - matplotlib.font_manager - findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,495 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal 400 normal>) = 11.05
2022-02-05 14:37:29,495 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,495 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 11.335
2022-02-05 14:37:29,496 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.335
2022-02-05 14:37:29,496 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,496 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,496 - DEBUG - matplotlib.font_manager - findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 300 normal>) = 10.145
2022-02-05 14:37:29,496 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,496 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
2022-02-05 14:37:29,496 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,496 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Muna' (Muna.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,496 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,496 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,496 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,496 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,496 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,496 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,497 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,497 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,497 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,497 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,497 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal 900 normal>) = 10.525
2022-02-05 14:37:29,497 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,497 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 7.698636363636363
2022-02-05 14:37:29,497 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,497 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,497 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Skia' (Skia.ttf) normal normal 5 normal>) = 10.42525
2022-02-05 14:37:29,497 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,497 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,497 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,497 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,498 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,498 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Times' (Times.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,498 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.335
2022-02-05 14:37:29,498 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,498 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,498 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 11.335
2022-02-05 14:37:29,498 - DEBUG - matplotlib.font_manager - findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 1000 normal>) = 10.62
2022-02-05 14:37:29,498 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,498 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,498 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-02-05 14:37:29,498 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal 700 normal>) = 10.335
2022-02-05 14:37:29,498 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,498 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,498 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,498 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,499 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,499 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,499 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,499 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,499 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,499 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,499 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,499 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Marion' (Marion.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,499 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,499 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,499 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,499 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,499 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
2022-02-05 14:37:29,499 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,500 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,500 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 6.698636363636363
2022-02-05 14:37:29,500 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,500 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 100 normal>) = 10.335
2022-02-05 14:37:29,500 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,500 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,500 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,500 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,500 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal 300 normal>) = 10.145
2022-02-05 14:37:29,500 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 10.335
2022-02-05 14:37:29,500 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.335
2022-02-05 14:37:29,500 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,500 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-02-05 14:37:29,500 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.335
2022-02-05 14:37:29,500 - DEBUG - matplotlib.font_manager - findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.05
2022-02-05 14:37:29,501 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal 900 normal>) = 10.525
2022-02-05 14:37:29,501 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,501 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,501 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,501 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal 400 normal>) = 11.05
2022-02-05 14:37:29,501 - DEBUG - matplotlib.font_manager - findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal 295 normal>) = 10.14975
2022-02-05 14:37:29,501 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,501 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,501 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,501 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,501 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,501 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,501 - DEBUG - matplotlib.font_manager - findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,501 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,501 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.535
2022-02-05 14:37:29,502 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,502 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Farah' (Farah.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,502 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,502 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,502 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 250 normal>) = 10.1925
2022-02-05 14:37:29,502 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,502 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,502 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2022-02-05 14:37:29,502 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,502 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,502 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.335
2022-02-05 14:37:29,502 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,502 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
2022-02-05 14:37:29,502 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,503 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,503 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,503 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,503 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,503 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,503 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,503 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,503 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,503 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,503 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,503 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.335
2022-02-05 14:37:29,503 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,503 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,504 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,504 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,504 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,504 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,504 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,504 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,504 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,504 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 300 normal>) = 10.145
2022-02-05 14:37:29,504 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,504 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Optima' (Optima.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,504 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,504 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,504 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,504 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,504 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,505 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,505 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,505 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,505 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,505 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,505 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,505 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 800 normal>) = 10.43
2022-02-05 14:37:29,505 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.335
2022-02-05 14:37:29,505 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,505 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,505 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 500 normal>) = 2.872272727272727
2022-02-05 14:37:29,505 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 3.9713636363636367
2022-02-05 14:37:29,505 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,505 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,506 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.335
2022-02-05 14:37:29,506 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,506 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,506 - DEBUG - matplotlib.font_manager - findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,506 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.335
2022-02-05 14:37:29,506 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,506 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,506 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,506 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,506 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,506 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,506 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,506 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,506 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.335
2022-02-05 14:37:29,506 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,507 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 4.971363636363637
2022-02-05 14:37:29,507 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,507 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,507 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.535
2022-02-05 14:37:29,507 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,507 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,507 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,507 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
2022-02-05 14:37:29,507 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,507 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,507 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,507 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-02-05 14:37:29,507 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,507 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal 900 normal>) = 10.525
2022-02-05 14:37:29,508 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,508 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal 700 normal>) = 10.335
2022-02-05 14:37:29,508 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,508 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,508 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,508 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,508 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
2022-02-05 14:37:29,508 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,508 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.335
2022-02-05 14:37:29,508 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,508 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,508 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,508 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 500 normal>) = 10.145
2022-02-05 14:37:29,508 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Futura' (Futura.ttc) normal normal 500 normal>) = 10.145
2022-02-05 14:37:29,508 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,509 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,509 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
2022-02-05 14:37:29,509 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,509 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,509 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,509 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,509 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,509 - DEBUG - matplotlib.font_manager - findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,509 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,509 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,509 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.335
2022-02-05 14:37:29,509 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,509 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,509 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,509 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal 300 normal>) = 10.145
2022-02-05 14:37:29,509 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 500 normal>) = 10.145
2022-02-05 14:37:29,510 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,510 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.335
2022-02-05 14:37:29,510 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,510 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,510 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,510 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,510 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,510 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,510 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 300 normal>) = 10.145
2022-02-05 14:37:29,510 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,510 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,510 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 250 normal>) = 10.1925
2022-02-05 14:37:29,510 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 300 normal>) = 10.145
2022-02-05 14:37:29,510 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 4.6863636363636365
2022-02-05 14:37:29,510 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,511 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,511 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:37:29,511 - DEBUG - matplotlib.font_manager - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/Users/johann/PycharmProjects/PiQ/env/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2022-02-05 14:37:29,534 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:37:29,545 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:37:29,555 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:37:29,565 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:37:29,575 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:37:29,584 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:37:29,593 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:37:29,602 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:37:29,611 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:37:29,620 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:37:29,630 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:37:29,638 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:37:29,647 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:37:29,656 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:37:29,665 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:37:29,673 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:37:29,682 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:37:29,691 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:37:29,699 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:37:29,787 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:37:29,796 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:37:29,805 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:37:29,813 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:37:29,822 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:37:29,830 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:37:29,839 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:37:29,847 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:37:29,856 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:37:29,865 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:37:29,874 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:37:29,883 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:37:29,892 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:37:29,900 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:37:29,908 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:37:29,917 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:37:29,925 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:37:29,934 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:37:29,942 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:37:29,950 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:37:30,198 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:37:30,207 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:37:30,217 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:37:30,227 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:37:30,236 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:37:30,244 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:37:30,253 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:37:30,261 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:37:30,270 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:37:30,278 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:37:30,287 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:37:30,295 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:37:30,303 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:37:30,311 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:37:30,319 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:37:30,327 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:37:30,335 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:37:30,344 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:37:30,352 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:37:30,361 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:37:30,450 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:37:30,460 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:37:30,469 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:37:30,477 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:37:30,485 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:37:30,494 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:37:30,502 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:37:30,511 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:37:30,519 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:37:30,527 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:37:30,536 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:37:30,545 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:37:30,554 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:37:30,562 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:37:30,570 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:37:30,578 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:37:30,586 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:37:30,594 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:37:30,602 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:37:30,611 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:11,978 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:12,034 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:12,081 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:12,122 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:12,162 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:12,201 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:12,240 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:12,279 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:12,316 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:12,356 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:12,396 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:12,435 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:12,476 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:12,514 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:12,554 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:12,591 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:12,629 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:12,668 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:12,707 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:12,749 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:13,185 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:13,194 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:13,203 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:13,212 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:13,220 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:13,229 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:13,238 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:13,246 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:13,255 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:13,263 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:13,273 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:13,281 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:13,290 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:13,298 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:13,306 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:13,314 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:13,323 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:13,331 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:13,341 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:13,351 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:13,604 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:13,612 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:13,621 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:13,629 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:13,638 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:13,646 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:13,654 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:13,664 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:13,674 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:13,683 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:13,696 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:13,707 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:13,717 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:13,726 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:13,736 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:13,744 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:13,753 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:13,763 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:13,772 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:13,780 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:13,871 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:13,913 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:13,952 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:13,996 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:14,036 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:14,080 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:14,120 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:14,162 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:14,206 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:14,247 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:14,293 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:14,342 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:14,383 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:14,423 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:14,463 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:14,504 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:14,544 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:14,584 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:14,625 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:14,664 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:36,010 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:36,067 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:36,123 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:36,174 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:36,223 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:36,272 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:36,318 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:36,365 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:36,412 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:36,458 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:36,503 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:36,549 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:36,666 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:36,758 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:36,807 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:36,853 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:36,898 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:36,944 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:36,991 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:37,038 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:37,536 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:37,545 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:37,554 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:37,563 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:37,572 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:37,581 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:37,590 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:37,598 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:37,607 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:37,615 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:37,625 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:37,634 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:37,642 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:37,651 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:37,660 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:37,669 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:37,678 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:37,687 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:37,696 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:37,705 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:37,963 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:37,972 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:37,981 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:37,990 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:37,998 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:38,007 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:38,016 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:38,026 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:38,035 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:38,043 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:38,052 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:38,061 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:38,069 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:38,078 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:38,087 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:38,095 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:38,104 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:38,113 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:38,122 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:38,131 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:38,230 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:38,297 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:38,367 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:38,443 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:38,526 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:38,601 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:38,673 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:38,742 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:38,798 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:38,848 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:38,903 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:38,961 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:39,024 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:39,075 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:39,120 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:39,165 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:39,211 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:39,263 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:39,328 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:38:39,408 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:41:41,797 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:41:41,864 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:41:41,914 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:41:41,964 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:41:42,020 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:41:42,074 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:41:42,123 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:41:42,178 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:41:42,236 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:41:42,292 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:41:42,353 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:41:42,410 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:41:42,468 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:41:42,520 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:41:42,588 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:41:42,650 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:41:42,708 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:41:42,776 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:41:42,839 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:41:42,900 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:41:43,559 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:41:43,569 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:41:43,577 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:41:43,586 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:41:43,595 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:41:43,604 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:41:43,613 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:41:43,623 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:41:43,633 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:41:43,647 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:41:43,659 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:41:43,669 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:41:43,679 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:41:43,690 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:41:43,702 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:41:43,712 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:41:43,724 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:41:43,735 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:41:43,747 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:41:43,757 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:41:44,097 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:41:44,105 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:41:44,115 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:41:44,124 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:41:44,133 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:41:44,142 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:41:44,150 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:41:44,158 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:41:44,167 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:41:44,176 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:41:44,185 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:41:44,195 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:41:44,204 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:41:44,214 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:41:44,236 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:41:44,246 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:41:44,257 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:41:44,267 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:41:44,278 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:41:44,288 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:41:44,389 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:41:44,445 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:41:44,504 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:41:44,588 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:41:44,664 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:41:44,749 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:41:44,820 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:41:44,917 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:41:44,992 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:41:45,048 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:41:45,103 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:41:45,161 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:41:45,229 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:41:45,317 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:41:45,382 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:41:45,449 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:41:45,522 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:41:45,609 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:41:45,730 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:41:45,832 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:22,357 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:22,378 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:22,392 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:22,407 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:22,422 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:22,437 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:22,450 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:22,463 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:22,475 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:22,487 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:22,498 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:22,509 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:22,519 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:22,529 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:22,538 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:22,548 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:22,557 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:22,567 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:22,576 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:22,585 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:22,679 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:22,688 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:22,698 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:22,707 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:22,716 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:22,725 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:22,734 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:22,743 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:22,752 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:22,761 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:22,771 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:22,780 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:22,788 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:22,797 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:22,806 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:22,815 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:22,823 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:22,832 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:22,841 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:22,849 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:23,161 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:23,178 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:23,192 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:23,206 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:23,220 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:23,231 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:23,243 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:23,254 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:23,265 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:23,294 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:23,307 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:23,319 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:23,329 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:23,340 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:23,349 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:23,359 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:23,368 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:23,377 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:23,387 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:23,395 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:23,487 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:23,498 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:23,507 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:23,515 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:23,524 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:23,533 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:23,542 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:23,551 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:23,559 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:23,568 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:23,577 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:23,587 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:23,595 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:23,604 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:23,613 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:23,622 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:23,631 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:23,640 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:23,649 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:23,658 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:51,884 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:51,950 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:52,008 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:52,059 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:52,116 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:52,189 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:52,256 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:52,320 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:52,374 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:52,424 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:52,476 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:52,523 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:52,575 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:52,629 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:52,716 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:52,808 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:52,874 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:52,928 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:52,982 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:53,032 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:53,571 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:53,579 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:53,588 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:53,596 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:53,605 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:53,614 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:53,622 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:53,631 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:53,640 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:53,653 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:53,664 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:53,674 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:53,683 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:53,693 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:53,702 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:53,711 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:53,720 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:53,729 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:53,738 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:53,747 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:54,028 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:54,037 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:54,045 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:54,053 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:54,061 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:54,070 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:54,078 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:54,086 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:54,095 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:54,104 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:54,113 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:54,121 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:54,129 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:54,138 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:54,146 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:54,155 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:54,166 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:54,175 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:54,187 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:54,196 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:54,289 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:54,340 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:54,405 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:54,479 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:54,530 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:54,589 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:54,641 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:54,689 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:54,734 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:54,779 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:54,832 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:54,881 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:54,928 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:54,974 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:55,023 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:55,082 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:55,133 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:55,189 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:55,247 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:42:55,300 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:03,755 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:03,771 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:03,785 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:03,798 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:03,812 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:03,826 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:03,838 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:03,849 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:03,861 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:03,873 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:03,884 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:03,896 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:03,908 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:03,921 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:03,933 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:03,946 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:03,959 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:03,972 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:03,986 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:03,999 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:04,118 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:04,128 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:04,138 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:04,150 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:04,162 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:04,179 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:04,196 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:04,211 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:04,227 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:04,240 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:04,255 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:04,269 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:04,281 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:04,297 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:04,316 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:04,331 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:04,343 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:04,356 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:04,368 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:04,379 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:04,740 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:04,750 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:04,759 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:04,768 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:04,777 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:04,786 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:04,795 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:04,804 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:04,816 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:04,827 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:04,838 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:04,849 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:04,860 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:04,871 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:04,881 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:04,893 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:04,904 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:04,915 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:04,927 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:04,938 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:05,073 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:05,090 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:05,102 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:05,114 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:05,126 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:05,137 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:05,148 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:05,159 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:05,173 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:05,185 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:05,199 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:05,214 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:05,226 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:05,238 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:05,248 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:05,259 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:05,270 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:05,281 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:05,292 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:05,302 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:24,216 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:24,283 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:24,336 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:24,385 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:24,436 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:24,483 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:24,529 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:24,580 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:24,629 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:24,678 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:24,735 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:24,798 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:24,874 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:24,957 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:25,041 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:25,127 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:25,210 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:25,281 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:25,369 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:25,451 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:26,101 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:26,114 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:26,126 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:26,139 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:26,152 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:26,169 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:26,185 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:26,201 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:26,216 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:26,235 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:26,259 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:26,280 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:26,299 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:26,314 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:26,326 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:26,338 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:26,348 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:26,359 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:26,369 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:26,380 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:26,877 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:26,887 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:26,896 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:26,907 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:26,926 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:26,944 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:26,959 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:26,971 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:26,985 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:27,000 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:27,015 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:27,030 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:27,044 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:27,058 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:27,070 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:27,084 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:27,099 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:27,114 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:27,129 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:27,147 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:27,370 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:27,449 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:27,507 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:27,556 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:27,605 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:27,654 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:27,700 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:27,748 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:27,809 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:27,924 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:28,010 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:28,101 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:28,216 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:28,302 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:28,363 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:28,441 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:28,517 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:28,581 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:28,639 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:28,691 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:47,432 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:47,490 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:47,539 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:47,586 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:47,630 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:47,677 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:47,734 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:47,780 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:47,829 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:47,882 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:47,937 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:47,994 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:48,048 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:48,103 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:48,156 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:48,211 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:48,259 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:48,314 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:48,362 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:48,416 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:48,970 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:48,983 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:48,997 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:49,011 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:49,025 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:49,038 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:49,051 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:49,066 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:49,080 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:49,092 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:49,106 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:49,118 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:49,129 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:49,139 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:49,150 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:49,163 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:49,178 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:49,189 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:49,200 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:49,210 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:49,546 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:49,555 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:49,565 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:49,575 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:49,584 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:49,594 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:49,604 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:49,614 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:49,625 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:49,636 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:49,648 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:49,660 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:49,670 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:49,682 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:49,694 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:49,706 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:49,718 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:49,729 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:49,739 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:49,750 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:49,852 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:49,905 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:49,953 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:50,001 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:50,052 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:50,107 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:50,159 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:50,214 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:50,266 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:50,316 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:50,364 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:50,411 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:50,457 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:50,503 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:50,551 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:50,607 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:50,667 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:50,723 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:50,774 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:43:50,821 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:44:06,705 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:44:06,796 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:44:06,876 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:44:06,952 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:44:07,029 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:44:07,112 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:44:07,198 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:44:07,282 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:44:07,351 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:44:07,416 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:44:07,481 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:44:07,547 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:44:07,612 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:44:07,677 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:44:07,743 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:44:07,808 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:44:07,874 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:44:07,941 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:44:08,007 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:44:08,072 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:44:08,138 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:44:08,209 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:44:08,282 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:44:08,349 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:44:08,414 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:44:08,808 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:44:08,817 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:44:08,825 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:44:08,833 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:44:08,841 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:44:08,851 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:44:08,859 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:44:08,868 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:44:08,876 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:44:08,884 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:44:08,893 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:44:08,901 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:44:08,909 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:44:08,917 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:44:08,925 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:44:08,934 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:44:08,942 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:44:08,951 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:44:08,959 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:44:08,967 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:44:08,975 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:44:08,984 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:44:08,992 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:44:08,999 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:44:09,008 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:44:09,210 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:44:09,219 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:44:09,229 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:44:09,238 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:44:09,247 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:44:09,256 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:44:09,264 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:44:09,272 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:44:09,280 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:44:09,289 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:44:09,301 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:44:09,312 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:44:09,323 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:44:09,332 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:44:09,341 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:44:09,350 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:44:09,359 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:44:09,367 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:44:09,375 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:44:09,384 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:44:09,392 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:44:09,401 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:44:09,409 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:44:09,416 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:44:09,424 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:44:09,480 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:44:09,550 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:44:09,618 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:44:09,688 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:44:09,759 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:44:09,830 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:44:09,897 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:44:09,962 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:44:10,028 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:44:10,097 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:44:10,240 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:44:10,341 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:44:10,409 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:44:10,474 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:44:10,543 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:44:10,620 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:44:10,697 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:44:10,764 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:44:10,829 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:44:10,894 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:44:10,959 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:44:11,030 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:44:11,095 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:44:11,158 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:44:11,228 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:45:43,262 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:45:43,359 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:45:43,430 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:45:43,498 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:45:43,569 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:45:43,635 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:45:43,702 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:45:43,774 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:45:43,848 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:45:43,916 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:45:43,983 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:45:44,049 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:45:44,114 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:45:44,181 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:45:44,252 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:45:44,317 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:45:44,389 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:45:44,478 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:45:44,569 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:45:44,649 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:45:44,750 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:45:44,828 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:45:44,897 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:45:44,974 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:45:45,053 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:45:45,494 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:45:45,506 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:45:45,517 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:45:45,531 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:45:45,549 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:45:45,566 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:45:45,579 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:45:45,591 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:45:45,603 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:45:45,613 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:45:45,623 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:45:45,632 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:45:45,641 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:45:45,650 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:45:45,660 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:45:45,669 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:45:45,678 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:45:45,687 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:45:45,697 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:45:45,706 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:45:45,716 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:45:45,725 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:45:45,734 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:45:45,743 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:45:45,753 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:45:45,960 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:45:45,968 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:45:45,977 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:45:45,986 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:45:45,994 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:45:46,003 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:45:46,014 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:45:46,023 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:45:46,032 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:45:46,041 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:45:46,051 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:45:46,059 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:45:46,068 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:45:46,077 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:45:46,086 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:45:46,095 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:45:46,104 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:45:46,113 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:45:46,122 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:45:46,132 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:45:46,141 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:45:46,150 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:45:46,159 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:45:46,167 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:45:46,176 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:45:46,237 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:45:46,309 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:45:46,379 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:45:46,465 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:45:46,550 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:45:46,660 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:45:46,802 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:45:46,870 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:45:46,935 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:45:46,999 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:45:47,065 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:45:47,131 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:45:47,197 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:45:47,265 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:45:47,334 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:45:47,399 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:45:47,464 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:45:47,528 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:45:47,592 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:45:47,656 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:45:47,721 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:45:47,788 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:45:47,854 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:45:47,920 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:45:47,985 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:45:57,862 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:45:57,957 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:45:58,033 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:45:58,108 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:45:58,186 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:45:58,268 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:45:58,351 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:45:58,427 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:45:58,504 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:45:58,582 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:45:58,658 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:45:58,726 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:45:58,791 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:45:58,860 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:45:58,929 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:45:58,996 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:45:59,063 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:45:59,131 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:45:59,197 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:45:59,261 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:45:59,326 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:45:59,394 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:45:59,466 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:45:59,533 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:45:59,598 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:45:59,991 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:00,000 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:00,010 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:00,019 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:00,029 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:00,039 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:00,051 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:00,062 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:00,072 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:00,081 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:00,091 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:00,099 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:00,109 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:00,118 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:00,127 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:00,136 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:00,144 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:00,153 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:00,162 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:00,171 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:00,180 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:00,189 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:00,198 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:00,206 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:00,215 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:00,421 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:00,430 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:00,439 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:00,448 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:00,457 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:00,466 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:00,474 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:00,483 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:00,491 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:00,499 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:00,508 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:00,516 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:00,524 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:00,532 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:00,541 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:00,550 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:00,559 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:00,568 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:00,576 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:00,585 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:00,593 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:00,602 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:00,610 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:00,619 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:00,627 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:00,680 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:00,751 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:00,817 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:00,882 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:00,948 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:01,015 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:01,080 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:01,150 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:01,215 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:01,279 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:01,345 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:01,416 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:01,483 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:01,548 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:01,612 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:01,682 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:01,755 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:01,850 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:01,916 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:01,981 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:02,048 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:02,114 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:02,180 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:02,246 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:02,312 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:13,144 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:13,234 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:13,318 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:13,405 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:13,531 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:13,628 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:13,720 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:13,811 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:13,907 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:14,002 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:14,159 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:14,256 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:14,336 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:14,412 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:14,486 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:14,552 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:14,625 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:14,759 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:14,847 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:14,927 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:15,040 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:15,148 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:15,229 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:15,317 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:15,408 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:15,827 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:15,835 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:15,844 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:15,854 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:15,875 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:15,886 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:15,895 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:15,905 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:15,914 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:15,923 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:15,932 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:15,941 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:15,949 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:15,957 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:15,965 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:15,974 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:15,983 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:15,991 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:16,000 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:16,009 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:16,018 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:16,026 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:16,034 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:16,043 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:16,051 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:16,284 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:16,293 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:16,303 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:16,313 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:16,326 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:16,337 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:16,351 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:16,366 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:16,381 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:16,401 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:16,418 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:16,434 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:16,468 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:16,569 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:16,586 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:16,601 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:16,644 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:16,656 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:16,667 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:16,678 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:16,688 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:16,698 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:16,707 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:16,716 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:16,725 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:16,785 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:16,856 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:16,922 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:16,989 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:17,058 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:17,137 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:17,214 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:17,287 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:17,352 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:17,419 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:17,485 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:17,553 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:17,620 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:17,691 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:17,761 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:17,827 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:17,896 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:17,962 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:18,029 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:18,098 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:18,166 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:18,235 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:18,307 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:18,377 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:18,444 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:35,492 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:35,576 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:35,655 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:35,733 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:35,809 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:35,882 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:35,951 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:36,019 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:36,097 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:36,180 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:36,264 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:36,346 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:36,425 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:36,491 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:36,557 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:36,624 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:36,696 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:36,772 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:36,845 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:36,925 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:37,004 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:37,088 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:37,174 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:37,256 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:37,333 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:37,790 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:37,802 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:37,813 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:37,825 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:37,836 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:37,850 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:37,865 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:37,880 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:37,894 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:37,907 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:37,920 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:37,933 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:37,945 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:37,957 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:37,969 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:37,982 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:37,993 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:38,003 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:38,013 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:38,023 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:38,033 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:38,042 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:38,052 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:38,063 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:38,075 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:38,312 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:38,321 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:38,330 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:38,339 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:38,347 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:38,356 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:38,365 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:38,374 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:38,382 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:38,391 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:38,400 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:38,409 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:38,417 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:38,426 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:38,434 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:38,444 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:38,452 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:38,461 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:38,470 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:38,478 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:38,487 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:38,496 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:38,504 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:38,513 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:38,521 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:38,576 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:38,647 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:38,714 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:38,782 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:38,849 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:38,916 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:38,985 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:39,052 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:39,121 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:39,189 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:39,256 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:39,329 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:39,395 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:39,461 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:39,528 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:39,596 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:39,664 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:39,730 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:39,798 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:39,865 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:39,934 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:40,009 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:40,112 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:40,235 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:46:40,324 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:47:45,925 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:47:45,995 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:47:46,063 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:47:46,130 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:47:46,193 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:47:46,254 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:47:46,322 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:47:46,381 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:47:46,441 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:47:46,501 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:47:46,562 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:47:46,622 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:47:46,698 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:47:46,805 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:47:46,902 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:47:46,982 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:47:47,048 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:47:47,117 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:47:47,179 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:47:47,239 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:47:47,300 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:47:47,362 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:47:47,422 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:47:47,485 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:47:47,552 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:47:47,930 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:47:47,934 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:47:47,937 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:47:47,941 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:47:47,945 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:47:47,948 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:47:47,952 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:47:47,956 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:47:47,959 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:47:47,963 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:47:47,968 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:47:47,973 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:47:47,977 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:47:47,980 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:47:47,984 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:47:47,988 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:47:47,992 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:47:47,996 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:47:48,000 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:47:48,003 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:47:48,007 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:47:48,011 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:47:48,014 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:47:48,018 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:47:48,022 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:47:48,108 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:47:48,111 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:47:48,115 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:47:48,118 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:47:48,121 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:47:48,125 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:47:48,128 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:47:48,132 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:47:48,135 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:47:48,138 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:47:48,142 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:47:48,145 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:47:48,148 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:47:48,152 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:47:48,155 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:47:48,160 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:47:48,164 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:47:48,167 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:47:48,171 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:47:48,175 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:47:48,178 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:47:48,182 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:47:48,185 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:47:48,189 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:47:48,193 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:47:48,226 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:47:48,295 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:47:48,356 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:47:48,416 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:47:48,476 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:47:48,536 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:47:48,604 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:47:48,675 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:47:48,785 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:47:48,898 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:47:48,991 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:47:49,077 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:47:49,162 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:47:49,246 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:47:49,330 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:47:49,393 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:47:49,454 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:47:49,514 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:47:49,573 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:47:49,633 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:47:49,692 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:47:49,750 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:47:49,809 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:47:49,871 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:47:50,028 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:28,245 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:28,287 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:28,324 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:28,359 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:28,393 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:28,428 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:28,464 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:28,500 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:28,536 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:28,576 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:28,619 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:28,670 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:28,730 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:28,788 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:28,830 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:28,869 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:28,905 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:28,939 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:28,974 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:29,009 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:29,045 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:29,084 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:29,122 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:29,160 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:29,198 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:29,417 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:29,419 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:29,421 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:29,424 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:29,426 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:29,428 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:29,431 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:29,433 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:29,435 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:29,437 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:29,439 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:29,442 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:29,444 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:29,447 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:29,449 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:29,452 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:29,454 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:29,456 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:29,459 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:29,461 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:29,464 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:29,466 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:29,469 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:29,471 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:29,474 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:29,505 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:29,507 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:29,510 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:29,512 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:29,515 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:29,517 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:29,519 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:29,521 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:29,523 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:29,526 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:29,528 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:29,531 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:29,534 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:29,536 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:29,538 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:29,541 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:29,543 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:29,546 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:29,549 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:29,551 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:29,553 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:29,556 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:29,558 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:29,560 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:29,562 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:29,582 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:29,616 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:29,648 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:29,681 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:29,716 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:29,755 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:29,798 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:29,844 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:29,894 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:29,946 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:29,989 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:30,027 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:30,063 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:30,099 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:30,133 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:30,166 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:30,200 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:30,233 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:30,266 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:30,298 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:30,331 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:30,363 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:30,395 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:30,427 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:30,460 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:37,451 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:37,527 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:37,595 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:37,660 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:37,724 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:37,789 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:37,853 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:37,918 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:37,982 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:38,048 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:38,116 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:38,184 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:38,253 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:38,322 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:38,386 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:38,451 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:38,516 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:38,582 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:38,648 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:38,717 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:38,783 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:38,848 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:38,914 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:38,979 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:39,044 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:39,445 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:39,447 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:39,449 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:39,450 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:39,452 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:39,453 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:39,455 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:39,457 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:39,458 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:39,460 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:39,462 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:39,464 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:39,465 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:39,467 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:39,468 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:39,470 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:39,472 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:39,473 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:39,475 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:39,477 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:39,479 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:39,480 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:39,482 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:39,484 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:39,486 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:39,503 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:39,505 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:39,507 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:39,508 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:39,510 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:39,512 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:39,513 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:39,516 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:39,517 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:39,519 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:39,521 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:39,522 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:39,524 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:39,526 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:39,528 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:39,530 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:39,532 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:39,533 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:39,535 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:39,537 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:39,538 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:39,540 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:39,542 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:39,544 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:39,546 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:39,573 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:39,641 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:39,705 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:39,772 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:39,836 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:39,904 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:39,997 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:40,062 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:40,130 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:40,195 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:40,258 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:40,322 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:40,388 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:40,454 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:40,518 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:40,586 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:40,654 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:40,720 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:40,804 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:40,958 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:41,024 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:41,092 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:41,156 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:41,221 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:48:41,286 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:51:59,381 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:51:59,462 - DEBUG - matplotlib.font_manager - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
2022-02-05 14:51:59,462 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-02-05 14:51:59,462 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,462 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,462 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,462 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,462 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2022-02-05 14:51:59,462 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,463 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,463 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,463 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,463 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-02-05 14:51:59,463 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2022-02-05 14:51:59,463 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,463 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-02-05 14:51:59,463 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-02-05 14:51:59,463 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-02-05 14:51:59,463 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2022-02-05 14:51:59,463 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,463 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,463 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2022-02-05 14:51:59,463 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2022-02-05 14:51:59,464 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2022-02-05 14:51:59,464 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2022-02-05 14:51:59,464 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2022-02-05 14:51:59,464 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,464 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2022-02-05 14:51:59,464 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,464 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,464 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2022-02-05 14:51:59,464 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2022-02-05 14:51:59,464 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,464 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,464 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,465 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-02-05 14:51:59,465 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,465 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-02-05 14:51:59,465 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2022-02-05 14:51:59,465 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2022-02-05 14:51:59,465 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,465 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,465 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
2022-02-05 14:51:59,465 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,465 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,465 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,465 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,465 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,466 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 600 normal>) = 10.24
2022-02-05 14:51:59,466 - DEBUG - matplotlib.font_manager - findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal 900 normal>) = 10.525
2022-02-05 14:51:59,466 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,466 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,466 - DEBUG - matplotlib.font_manager - findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal 295 normal>) = 11.14975
2022-02-05 14:51:59,466 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,466 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,466 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,467 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.335
2022-02-05 14:51:59,467 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,467 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,467 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,467 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,467 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal 700 normal>) = 10.335
2022-02-05 14:51:59,467 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.335
2022-02-05 14:51:59,467 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,467 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,467 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 7.322727272727273
2022-02-05 14:51:59,467 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,467 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,467 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,467 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,467 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.535
2022-02-05 14:51:59,468 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,468 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,468 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,468 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,468 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,468 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,468 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,468 - DEBUG - matplotlib.font_manager - findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 100 normal>) = 10.335
2022-02-05 14:51:59,468 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,468 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Charter' (Charter.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,468 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 500 normal>) = 10.145
2022-02-05 14:51:59,468 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,468 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.335
2022-02-05 14:51:59,468 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,469 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,469 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
2022-02-05 14:51:59,469 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,469 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,469 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,469 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,469 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 6.413636363636363
2022-02-05 14:51:59,469 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,469 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,469 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,469 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal 400 normal>) = 11.05
2022-02-05 14:51:59,469 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,469 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,469 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.335
2022-02-05 14:51:59,470 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,470 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,470 - DEBUG - matplotlib.font_manager - findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 1000 normal>) = 11.62
2022-02-05 14:51:59,470 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,470 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,470 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal 900 normal>) = 10.525
2022-02-05 14:51:59,470 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 200 normal>) = 10.24
2022-02-05 14:51:59,470 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,470 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,470 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 10.335
2022-02-05 14:51:59,470 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,470 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,470 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,470 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,471 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,471 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal 900 normal>) = 10.525
2022-02-05 14:51:59,471 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,471 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Sana' (Sana.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,471 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,471 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 7.413636363636363
2022-02-05 14:51:59,471 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,471 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,471 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,471 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,471 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
2022-02-05 14:51:59,471 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,471 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,471 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,472 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,472 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,472 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,472 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,472 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 500 normal>) = 10.145
2022-02-05 14:51:59,472 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
2022-02-05 14:51:59,472 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 900 normal>) = 10.525
2022-02-05 14:51:59,472 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.335
2022-02-05 14:51:59,472 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,472 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.335
2022-02-05 14:51:59,472 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-02-05 14:51:59,472 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,472 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,472 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal 900 normal>) = 10.525
2022-02-05 14:51:59,472 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.535
2022-02-05 14:51:59,473 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,473 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 0 normal>) = 10.43
2022-02-05 14:51:59,473 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,473 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,473 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,473 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,473 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,473 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,473 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,473 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,473 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,473 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,473 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,473 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,474 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,474 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,474 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,474 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,474 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,474 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal 500 normal>) = 10.145
2022-02-05 14:51:59,474 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,474 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,474 - DEBUG - matplotlib.font_manager - findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,474 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal 400 normal>) = 11.05
2022-02-05 14:51:59,474 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,474 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 11.335
2022-02-05 14:51:59,474 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.335
2022-02-05 14:51:59,474 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,475 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,475 - DEBUG - matplotlib.font_manager - findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 300 normal>) = 10.145
2022-02-05 14:51:59,475 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,475 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
2022-02-05 14:51:59,475 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,475 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Muna' (Muna.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,475 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,475 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,475 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,475 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,475 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,475 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,475 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,475 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,475 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,476 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,476 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal 900 normal>) = 10.525
2022-02-05 14:51:59,476 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,476 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 7.698636363636363
2022-02-05 14:51:59,476 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,476 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,476 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Skia' (Skia.ttf) normal normal 5 normal>) = 10.42525
2022-02-05 14:51:59,476 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,476 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,476 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,476 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,476 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,476 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Times' (Times.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,476 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.335
2022-02-05 14:51:59,477 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,477 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,477 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 11.335
2022-02-05 14:51:59,477 - DEBUG - matplotlib.font_manager - findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 1000 normal>) = 10.62
2022-02-05 14:51:59,477 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,477 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,477 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-02-05 14:51:59,477 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal 700 normal>) = 10.335
2022-02-05 14:51:59,477 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,477 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,477 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,477 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,477 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,477 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,477 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,478 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,478 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,478 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,478 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,478 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Marion' (Marion.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,478 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,478 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,478 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,478 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,478 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
2022-02-05 14:51:59,478 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,478 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,478 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 6.698636363636363
2022-02-05 14:51:59,479 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,479 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 100 normal>) = 10.335
2022-02-05 14:51:59,479 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,479 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,479 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,479 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,479 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal 300 normal>) = 10.145
2022-02-05 14:51:59,479 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 10.335
2022-02-05 14:51:59,479 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.335
2022-02-05 14:51:59,479 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,479 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-02-05 14:51:59,479 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.335
2022-02-05 14:51:59,480 - DEBUG - matplotlib.font_manager - findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.05
2022-02-05 14:51:59,480 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal 900 normal>) = 10.525
2022-02-05 14:51:59,480 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,480 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,480 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,480 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal 400 normal>) = 11.05
2022-02-05 14:51:59,480 - DEBUG - matplotlib.font_manager - findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal 295 normal>) = 10.14975
2022-02-05 14:51:59,480 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,480 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,480 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,480 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,480 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,480 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,480 - DEBUG - matplotlib.font_manager - findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,480 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,481 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.535
2022-02-05 14:51:59,481 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,481 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Farah' (Farah.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,481 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,481 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,481 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 250 normal>) = 10.1925
2022-02-05 14:51:59,481 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,481 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,481 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2022-02-05 14:51:59,481 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,481 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,481 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.335
2022-02-05 14:51:59,481 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,481 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
2022-02-05 14:51:59,481 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,482 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,482 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,482 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,482 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,482 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,482 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,482 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,482 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,482 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,482 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,482 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.335
2022-02-05 14:51:59,482 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,482 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,483 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,483 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,483 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,483 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,483 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,483 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,483 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,483 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 300 normal>) = 10.145
2022-02-05 14:51:59,483 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,484 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Optima' (Optima.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,484 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,484 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,484 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,484 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,484 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,484 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,484 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,484 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,484 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,484 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,484 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,484 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 800 normal>) = 10.43
2022-02-05 14:51:59,484 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.335
2022-02-05 14:51:59,484 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,485 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,485 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 500 normal>) = 2.872272727272727
2022-02-05 14:51:59,485 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 3.9713636363636367
2022-02-05 14:51:59,485 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,485 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,485 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.335
2022-02-05 14:51:59,485 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,485 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,485 - DEBUG - matplotlib.font_manager - findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,485 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.335
2022-02-05 14:51:59,485 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,485 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,485 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,485 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,485 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,485 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,485 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,485 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,486 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.335
2022-02-05 14:51:59,486 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,486 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 4.971363636363637
2022-02-05 14:51:59,486 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,486 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,486 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.535
2022-02-05 14:51:59,486 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,486 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,486 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,486 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
2022-02-05 14:51:59,486 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,486 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,486 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,486 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-02-05 14:51:59,486 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,486 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal 900 normal>) = 10.525
2022-02-05 14:51:59,486 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,486 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal 700 normal>) = 10.335
2022-02-05 14:51:59,487 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,487 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,487 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,487 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,487 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
2022-02-05 14:51:59,487 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,487 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.335
2022-02-05 14:51:59,487 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,487 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,487 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,487 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 500 normal>) = 10.145
2022-02-05 14:51:59,487 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Futura' (Futura.ttc) normal normal 500 normal>) = 10.145
2022-02-05 14:51:59,487 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,487 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,487 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
2022-02-05 14:51:59,488 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,495 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,495 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,495 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,495 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,495 - DEBUG - matplotlib.font_manager - findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,496 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,496 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,496 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.335
2022-02-05 14:51:59,496 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,496 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,496 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,496 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal 300 normal>) = 10.145
2022-02-05 14:51:59,496 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 500 normal>) = 10.145
2022-02-05 14:51:59,496 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,496 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.335
2022-02-05 14:51:59,496 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,496 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,496 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,496 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,496 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,496 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,497 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 300 normal>) = 10.145
2022-02-05 14:51:59,497 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,497 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,497 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 250 normal>) = 10.1925
2022-02-05 14:51:59,497 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 300 normal>) = 10.145
2022-02-05 14:51:59,497 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 4.6863636363636365
2022-02-05 14:51:59,497 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,497 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,497 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 14:51:59,497 - DEBUG - matplotlib.font_manager - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to DejaVu Sans ('/Users/johann/PycharmProjects/PiQ/env/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2022-02-05 14:51:59,500 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:51:59,565 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:51:59,631 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:51:59,696 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:51:59,761 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:51:59,826 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:51:59,891 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:51:59,960 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:52:00,035 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:52:00,145 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:52:00,237 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:52:00,343 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:52:00,442 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:52:00,545 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:52:00,696 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:52:00,819 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:52:00,922 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:52:00,991 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:52:01,059 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:52:01,129 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:52:01,193 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:52:01,260 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:52:01,336 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:52:01,421 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:52:01,875 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:52:01,877 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:52:01,879 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:52:01,880 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:52:01,882 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:52:01,884 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:52:01,886 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:52:01,888 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:52:01,889 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:52:01,891 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:52:01,893 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:52:01,895 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:52:01,897 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:52:01,899 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:52:01,901 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:52:01,903 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:52:01,905 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:52:01,907 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:52:01,909 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:52:01,911 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:52:01,913 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:52:01,915 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:52:01,916 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:52:01,918 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:52:01,920 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:52:01,940 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:52:01,942 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:52:01,944 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:52:01,946 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:52:01,948 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:52:01,950 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:52:01,951 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:52:01,953 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:52:01,955 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:52:01,957 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:52:01,959 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:52:01,961 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:52:01,963 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:52:01,964 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:52:01,966 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:52:01,968 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:52:01,971 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:52:01,973 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:52:01,975 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:52:01,977 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:52:01,980 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:52:01,982 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:52:01,984 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:52:01,987 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:52:01,989 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:52:02,020 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:52:02,107 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:52:02,202 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:52:02,285 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:52:02,364 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:52:02,440 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:52:02,515 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:52:02,592 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:52:02,667 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:52:02,742 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:52:02,809 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:52:02,906 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:52:03,077 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:52:03,150 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:52:03,216 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:52:03,284 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:52:03,354 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:52:03,431 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:52:03,504 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:52:03,569 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:52:03,632 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:52:03,697 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:52:03,763 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:52:03,832 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:52:03,907 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:53:49,018 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:53:49,096 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:53:49,170 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:53:49,290 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:53:49,368 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:53:49,442 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:53:49,521 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:53:49,595 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:53:49,667 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:53:49,739 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:53:49,813 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:53:49,884 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:53:49,962 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:53:50,035 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:53:50,106 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:53:50,176 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:53:50,246 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:53:50,315 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:53:50,397 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:53:50,489 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:53:50,563 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:53:50,635 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:53:50,708 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:53:50,780 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:53:50,849 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:53:51,430 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:53:51,432 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:53:51,435 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:53:51,439 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:53:51,442 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:53:51,447 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:53:51,451 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:53:51,456 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:53:51,458 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:53:51,464 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:53:51,467 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:53:51,471 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:53:51,473 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:53:51,477 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:53:51,481 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:53:51,485 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:53:51,488 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:53:51,491 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:53:51,496 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:53:51,500 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:53:51,503 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:53:51,505 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:53:51,508 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:53:51,512 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:53:51,515 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:53:51,545 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:53:51,547 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:53:51,550 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:53:51,553 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:53:51,555 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:53:51,558 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:53:51,562 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:53:51,564 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:53:51,568 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:53:51,570 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:53:51,573 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:53:51,576 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:53:51,579 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:53:51,582 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:53:51,586 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:53:51,588 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:53:51,591 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:53:51,595 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:53:51,599 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:53:51,603 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:53:51,605 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:53:51,609 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:53:51,614 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:53:51,618 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:53:51,621 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:53:51,669 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:53:51,767 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:53:51,846 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:53:51,918 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:53:52,019 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:53:52,110 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:53:52,193 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:53:52,268 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:53:52,349 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:53:52,419 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:53:52,485 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:53:52,709 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:53:52,780 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:53:52,845 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:53:52,911 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:53:53,032 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:53:53,144 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:53:53,345 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:53:53,816 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:53:54,066 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:53:54,301 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:53:54,436 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:53:54,525 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:53:54,604 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:53:54,681 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:54:40,255 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:54:40,334 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:54:40,402 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:54:40,467 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:54:40,530 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:54:40,595 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:54:40,659 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:54:40,724 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:54:40,788 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:54:40,853 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:54:40,918 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:54:40,986 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:54:41,056 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:54:41,128 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:54:41,199 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:54:41,272 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:54:41,337 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:54:41,402 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:54:41,467 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:54:41,533 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:54:41,600 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:54:41,667 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:54:41,743 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:54:41,826 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:54:41,904 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:54:42,379 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:54:42,381 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:54:42,383 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:54:42,385 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:54:42,387 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:54:42,389 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:54:42,391 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:54:42,393 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:54:42,395 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:54:42,396 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:54:42,398 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:54:42,400 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:54:42,402 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:54:42,404 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:54:42,406 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:54:42,408 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:54:42,410 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:54:42,411 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:54:42,413 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:54:42,416 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:54:42,418 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:54:42,420 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:54:42,421 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:54:42,423 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:54:42,425 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:54:42,444 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:54:42,446 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:54:42,448 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:54:42,450 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:54:42,452 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:54:42,454 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:54:42,456 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:54:42,457 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:54:42,459 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:54:42,461 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:54:42,462 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:54:42,464 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:54:42,467 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:54:42,468 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:54:42,470 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:54:42,472 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:54:42,474 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:54:42,476 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:54:42,477 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:54:42,479 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:54:42,481 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:54:42,483 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:54:42,485 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:54:42,487 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:54:42,489 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:54:42,519 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:54:42,590 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:54:42,655 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:54:42,728 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:54:42,795 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:54:42,864 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:54:42,945 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:54:43,029 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:54:43,135 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:54:43,429 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:54:43,545 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:54:43,633 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:54:43,747 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:54:43,860 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:54:43,999 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:54:44,277 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:54:44,417 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:54:44,519 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:54:44,588 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:54:44,662 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:54:44,743 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:54:44,812 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:54:44,899 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:54:45,001 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:54:45,097 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:56:29,881 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:56:29,961 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:56:30,027 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:56:30,092 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:56:30,157 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:56:30,226 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:56:30,291 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:56:30,360 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:56:30,427 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:56:30,496 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:56:30,561 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:56:30,627 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:56:30,696 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:56:30,763 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:56:30,828 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:56:30,895 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:56:30,965 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:56:31,035 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:56:31,100 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:56:31,166 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:56:31,262 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:56:31,330 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:56:31,397 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:56:31,472 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:56:31,539 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:56:32,063 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:56:32,065 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:56:32,067 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:56:32,069 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:56:32,071 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:56:32,073 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:56:32,075 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:56:32,076 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:56:32,078 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:56:32,080 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:56:32,082 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:56:32,083 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:56:32,086 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:56:32,087 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:56:32,089 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:56:32,091 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:56:32,093 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:56:32,095 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:56:32,096 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:56:32,099 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:56:32,102 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:56:32,104 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:56:32,106 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:56:32,107 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:56:32,109 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:56:32,129 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:56:32,131 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:56:32,133 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:56:32,135 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:56:32,137 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:56:32,139 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:56:32,140 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:56:32,142 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:56:32,144 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:56:32,146 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:56:32,147 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:56:32,149 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:56:32,151 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:56:32,153 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:56:32,155 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:56:32,157 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:56:32,158 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:56:32,160 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:56:32,162 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:56:32,164 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:56:32,165 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:56:32,167 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:56:32,170 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:56:32,172 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:56:32,174 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:56:32,202 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:56:32,275 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:56:32,350 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:56:32,416 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:56:32,485 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:56:32,551 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:56:32,617 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:56:32,683 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:56:32,748 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:56:32,815 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:56:32,879 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:56:32,947 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:56:33,013 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:56:33,080 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:56:33,146 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:56:33,215 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:56:33,282 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:56:33,351 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:56:33,420 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:56:33,489 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:56:33,556 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:56:33,621 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:56:33,686 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:56:33,754 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:56:33,822 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:29,688 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:29,766 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:29,834 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:29,899 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:29,965 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:30,029 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:30,094 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:30,158 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:30,223 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:30,287 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:30,353 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:30,418 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:30,487 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:30,554 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:30,620 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:30,686 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:30,752 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:30,818 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:30,885 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:30,950 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:31,016 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:31,083 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:31,151 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:31,289 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:31,390 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:31,790 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:31,792 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:31,794 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:31,795 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:31,797 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:31,799 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:31,801 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:31,803 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:31,805 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:31,806 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:31,808 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:31,810 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:31,812 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:31,814 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:31,816 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:31,817 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:31,819 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:31,821 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:31,823 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:31,825 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:31,826 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:31,828 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:31,830 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:31,832 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:31,834 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:31,853 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:31,855 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:31,857 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:31,858 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:31,860 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:31,862 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:31,864 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:31,866 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:31,868 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:31,869 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:31,871 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:31,873 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:31,875 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:31,876 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:31,878 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:31,880 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:31,882 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:31,884 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:31,886 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:31,887 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:31,889 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:31,891 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:31,892 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:31,894 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:31,896 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:31,922 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:31,989 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:32,054 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:32,123 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:32,189 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:32,255 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:32,321 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:32,386 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:32,453 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:32,520 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:32,589 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:32,655 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:32,720 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:32,786 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:32,852 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:32,918 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:32,985 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:33,050 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:33,120 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:33,190 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:33,257 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:33,324 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:33,389 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:33,457 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:33,524 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:45,407 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:45,489 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:45,557 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:45,625 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:45,696 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:45,775 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:45,867 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:45,939 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:46,005 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:46,071 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:46,140 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:46,211 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:46,285 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:46,361 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:46,435 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:46,514 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:46,594 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:46,676 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:46,753 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:46,823 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:46,892 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:46,960 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:47,028 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:47,097 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:47,179 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:47,669 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:47,673 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:47,675 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:47,677 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:47,680 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:47,682 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:47,685 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:47,688 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:47,691 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:47,693 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:47,696 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:47,699 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:47,701 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:47,705 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:47,707 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:47,710 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:47,714 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:47,716 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:47,719 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:47,723 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:47,725 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:47,728 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:47,731 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:47,733 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:47,736 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:47,761 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:47,763 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:47,765 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:47,767 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:47,771 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:47,774 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:47,776 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:47,779 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:47,781 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:47,783 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:47,785 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:47,787 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:47,789 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:47,791 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:47,794 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:47,796 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:47,798 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:47,800 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:47,802 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:47,803 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:47,805 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:47,807 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:47,809 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:47,811 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:47,813 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:47,843 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:47,914 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:47,981 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:48,048 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:48,115 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:48,323 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:48,438 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:48,538 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:48,611 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:48,682 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:48,755 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:48,840 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:48,927 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:49,004 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:49,077 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:49,163 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:49,249 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:49,329 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:49,398 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:49,470 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:49,538 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:49,616 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:49,703 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:49,785 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:57:49,855 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:06,962 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:07,042 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:07,119 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:07,209 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:07,287 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:07,357 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:07,427 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:07,495 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:07,567 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:07,636 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:07,706 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:07,782 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:07,859 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:07,930 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:08,005 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:08,081 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:08,171 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:08,275 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:08,366 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:08,441 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:08,508 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:08,588 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:08,668 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:08,745 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:08,826 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:09,325 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:09,328 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:09,330 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:09,332 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:09,335 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:09,337 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:09,339 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:09,342 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:09,344 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:09,346 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:09,348 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:09,351 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:09,353 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:09,355 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:09,357 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:09,359 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:09,362 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:09,364 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:09,366 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:09,368 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:09,370 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:09,372 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:09,374 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:09,376 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:09,378 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:09,399 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:09,401 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:09,403 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:09,405 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:09,407 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:09,409 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:09,410 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:09,412 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:09,414 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:09,416 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:09,418 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:09,420 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:09,422 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:09,423 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:09,425 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:09,427 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:09,429 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:09,431 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:09,433 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:09,435 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:09,437 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:09,438 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:09,440 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:09,442 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:09,444 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:09,472 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:09,546 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:09,620 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:09,691 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:09,763 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:09,834 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:09,909 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:09,982 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:10,054 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:10,124 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:10,198 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:10,344 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:10,434 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:10,510 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:10,611 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:10,681 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:10,755 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:10,826 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:10,896 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:10,969 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:11,041 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:11,113 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:11,188 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:11,261 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:11,338 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:19,592 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:19,672 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:19,748 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:19,823 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:19,903 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:19,983 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:20,061 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:20,222 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:20,372 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:20,451 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:20,536 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:20,624 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:20,702 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:20,780 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:20,861 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:20,941 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:21,037 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:21,123 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:21,202 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:21,278 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:21,353 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:21,430 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:21,509 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:21,595 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:21,681 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:22,173 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:22,175 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:22,177 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:22,179 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:22,182 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:22,184 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:22,186 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:22,187 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:22,190 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:22,191 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:22,193 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:22,195 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:22,198 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:22,200 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:22,202 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:22,204 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:22,207 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:22,209 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:22,211 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:22,214 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:22,216 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:22,218 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:22,220 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:22,223 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:22,225 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:22,247 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:22,249 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:22,251 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:22,254 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:22,256 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:22,258 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:22,260 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:22,262 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:22,265 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:22,267 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:22,269 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:22,271 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:22,273 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:22,275 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:22,276 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:22,280 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:22,282 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:22,284 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:22,286 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:22,288 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:22,290 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:22,292 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:22,294 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:22,297 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:22,299 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:22,329 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:22,404 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:22,477 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:22,566 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:22,651 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:22,747 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:22,859 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:22,953 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:23,041 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:23,124 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:23,211 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:23,302 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:23,397 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:23,486 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:23,564 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:23,646 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:23,728 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:23,811 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:23,888 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:23,968 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:24,049 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:24,139 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:24,231 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:24,318 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:58:24,402 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:10,751 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:10,831 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:10,898 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:10,965 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:11,035 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:11,104 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:11,171 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:11,246 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:11,312 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:11,378 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:11,449 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:11,519 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:11,592 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:11,661 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:11,727 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:11,794 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:11,862 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:11,929 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:11,996 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:12,065 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:12,132 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:12,200 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:12,273 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:12,357 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:12,447 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:12,905 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:12,907 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:12,910 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:12,912 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:12,915 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:12,917 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:12,919 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:12,923 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:12,925 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:12,927 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:12,930 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:12,933 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:12,935 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:12,938 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:12,941 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:12,943 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:12,946 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:12,949 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:12,951 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:12,955 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:12,958 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:12,960 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:12,964 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:12,966 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:12,968 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:12,998 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:13,000 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:13,002 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:13,006 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:13,008 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:13,011 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:13,014 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:13,016 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:13,019 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:13,022 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:13,024 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:13,028 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:13,030 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:13,033 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:13,036 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:13,039 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:13,041 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:13,045 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:13,047 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:13,050 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:13,053 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:13,056 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:13,058 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:13,062 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:13,065 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:13,103 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:13,186 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:13,260 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:13,337 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:13,410 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:13,488 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:13,588 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:13,668 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:13,737 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:13,802 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:13,869 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:13,936 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:14,005 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:14,072 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:14,138 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:14,206 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:14,274 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:14,340 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:14,410 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:14,481 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:14,553 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:14,626 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:14,709 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:14,785 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:14,854 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:57,026 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:57,109 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:57,194 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:57,275 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:57,359 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:57,445 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:57,559 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:57,643 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:57,751 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:57,840 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:57,911 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:57,972 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:58,032 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:58,094 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:58,162 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:58,251 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:58,329 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:58,398 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:58,464 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:58,531 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:58,599 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:58,660 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:58,720 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:58,781 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:58,840 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:59,199 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:59,201 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:59,202 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:59,204 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:59,206 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:59,208 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:59,210 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:59,212 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:59,214 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:59,215 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:59,217 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:59,219 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:59,221 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:59,223 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:59,225 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:59,227 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:59,229 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:59,230 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:59,232 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:59,234 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:59,236 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:59,238 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:59,240 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:59,242 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:59,243 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:59,264 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:59,266 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:59,268 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:59,269 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:59,271 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:59,273 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:59,275 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:59,277 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:59,279 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:59,281 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:59,283 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:59,284 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:59,286 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:59,288 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:59,290 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:59,292 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:59,294 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:59,296 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:59,297 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:59,299 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:59,301 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:59,303 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:59,305 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:59,307 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:59,310 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:59,342 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:59,406 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:59,466 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:59,530 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:59,592 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:59,652 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:59,714 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:59,791 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 14:59:59,884 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:00:00,160 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:00:00,271 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:00:00,336 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:00:00,396 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:00:00,458 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:00:00,524 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:00:00,602 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:00:00,674 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:00:00,743 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:00:00,806 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:00:00,869 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:00:00,933 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:00:01,012 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:00:01,087 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:00:01,150 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:00:01,213 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:00:16,006 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:00:16,084 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:00:16,147 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:00:16,209 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:00:16,273 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:00:16,336 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:00:16,399 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:00:16,462 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:00:16,524 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:00:16,589 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:00:16,653 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:00:16,725 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:00:16,797 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:00:16,871 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:00:16,935 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:00:17,002 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:00:17,137 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:00:17,259 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:00:17,328 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:00:17,391 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:00:17,453 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:00:17,516 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:00:17,584 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:00:17,645 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:00:17,707 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:00:18,087 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:00:18,091 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:00:18,094 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:00:18,098 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:00:18,101 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:00:18,105 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:00:18,108 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:00:18,112 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:00:18,115 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:00:18,118 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:00:18,122 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:00:18,126 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:00:18,129 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:00:18,133 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:00:18,136 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:00:18,140 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:00:18,143 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:00:18,147 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:00:18,150 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:00:18,154 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:00:18,158 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:00:18,162 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:00:18,165 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:00:18,168 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:00:18,172 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:00:18,252 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:00:18,255 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:00:18,259 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:00:18,262 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:00:18,265 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:00:18,269 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:00:18,272 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:00:18,276 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:00:18,279 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:00:18,283 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:00:18,286 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:00:18,290 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:00:18,293 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:00:18,297 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:00:18,300 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:00:18,304 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:00:18,307 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:00:18,312 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:00:18,315 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:00:18,319 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:00:18,323 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:00:18,327 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:00:18,330 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:00:18,334 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:00:18,338 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:00:18,378 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:00:18,442 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:00:18,504 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:00:18,569 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:00:18,635 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:00:18,700 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:00:18,768 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:00:18,832 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:00:18,894 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:00:18,960 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:00:19,023 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:00:19,087 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:00:19,156 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:00:19,221 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:00:19,282 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:00:19,348 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:00:19,416 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:00:19,477 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:00:19,542 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:00:19,605 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:00:19,668 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:00:19,733 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:00:19,800 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:00:19,861 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:00:19,922 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:02:51,336 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:02:51,419 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:02:51,510 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:02:51,601 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:02:51,681 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:02:51,774 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:02:51,873 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:02:51,949 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:02:52,021 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:02:52,092 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:02:52,158 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:02:52,223 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:02:52,303 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:02:52,388 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:02:52,458 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:02:52,520 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:02:52,585 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:02:52,662 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:02:52,747 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:02:52,829 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:02:52,906 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:02:52,969 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:02:53,034 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:02:53,107 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:02:53,183 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:02:53,596 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:02:53,601 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:02:53,605 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:02:53,611 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:02:53,615 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:02:53,620 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:02:53,626 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:02:53,630 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:02:53,635 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:02:53,639 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:02:53,644 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:02:53,649 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:02:53,652 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:02:53,656 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:02:53,661 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:02:53,666 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:02:53,671 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:02:53,676 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:02:53,683 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:02:53,690 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:02:53,697 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:02:53,702 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:02:53,707 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:02:53,712 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:02:53,717 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:02:53,802 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:02:53,805 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:02:53,809 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:02:53,812 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:02:53,816 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:02:53,819 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:02:53,822 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:02:53,826 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:02:53,829 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:02:53,833 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:02:53,836 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:02:53,839 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:02:53,843 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:02:53,846 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:02:53,849 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:02:53,853 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:02:53,856 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:02:53,860 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:02:53,864 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:02:53,868 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:02:53,873 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:02:53,878 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:02:53,883 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:02:53,887 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:02:53,890 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:02:53,933 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:02:53,995 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:02:54,056 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:02:54,128 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:02:54,189 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:02:54,249 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:02:54,309 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:02:54,378 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:02:54,439 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:02:54,507 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:02:54,569 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:02:54,632 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:02:54,693 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:02:54,753 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:02:54,819 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:02:54,885 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:02:54,947 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:02:55,006 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:02:55,066 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:02:55,133 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:02:55,194 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:02:55,253 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:02:55,315 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:02:55,376 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:02:55,437 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:00,372 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:00,447 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:00,509 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:00,573 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:00,639 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:00,708 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:00,774 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:00,842 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:00,910 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:00,971 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:01,031 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:01,092 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:01,153 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:01,216 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:01,280 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:01,366 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:01,474 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:01,543 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:01,610 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:01,679 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:01,759 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:01,846 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:01,927 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:01,993 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:02,058 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:02,455 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:02,460 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:02,465 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:02,469 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:02,473 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:02,478 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:02,484 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:02,488 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:02,493 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:02,499 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:02,503 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:02,509 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:02,515 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:02,519 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:02,526 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:02,533 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:02,537 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:02,544 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:02,551 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:02,558 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:02,566 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:02,571 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:02,579 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:02,585 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:02,592 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:02,741 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:02,747 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:02,752 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:02,758 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:02,764 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:02,769 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:02,774 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:02,781 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:02,785 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:02,792 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:02,798 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:02,802 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:02,809 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:02,815 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:02,820 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:02,827 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:02,832 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:02,837 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:02,845 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:02,850 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:02,858 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:02,865 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:02,874 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:02,881 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:02,885 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:02,958 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:03,050 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:03,134 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:03,220 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:03,302 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:03,369 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:03,436 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:03,496 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:03,557 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:03,628 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:03,708 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:03,789 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:03,868 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:03,939 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:04,004 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:04,065 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:04,128 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:04,206 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:04,312 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:04,402 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:04,470 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:04,532 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:04,593 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:04,657 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:04,723 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:46,608 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:46,695 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:46,757 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:46,820 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:46,884 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:46,950 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:47,011 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:47,073 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:47,134 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:47,196 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:47,262 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:47,334 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:47,407 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:47,481 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:47,559 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:47,637 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:47,711 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:47,785 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:48,006 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:48,094 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:48,158 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:48,222 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:48,299 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:48,375 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:48,448 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:48,900 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:48,907 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:48,913 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:48,920 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:48,927 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:48,934 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:48,941 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:48,946 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:48,954 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:48,960 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:48,967 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:48,973 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:48,978 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:48,985 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:48,992 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:48,998 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:49,004 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:49,010 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:49,017 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:49,023 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:49,028 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:49,035 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:49,042 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:49,047 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:49,053 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:49,181 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:49,188 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:49,193 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:49,198 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:49,204 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:49,209 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:49,214 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:49,220 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:49,224 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:49,229 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:49,236 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:49,244 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:49,249 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:49,256 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:49,262 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:49,270 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:49,276 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:49,281 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:49,291 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:49,296 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:49,305 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:49,313 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:49,319 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:49,325 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:49,330 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:49,395 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:49,465 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:49,527 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:49,589 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:49,656 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:49,718 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:49,782 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:49,846 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:49,912 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:49,975 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:50,038 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:50,110 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:50,186 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:50,267 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:50,560 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:50,696 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:50,789 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:50,875 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:51,116 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:51,285 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:51,371 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:51,441 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:51,505 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:51,567 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:03:51,639 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:04:07,748 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:04:07,828 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:04:07,892 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:04:07,954 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:04:08,017 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:04:08,080 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:04:08,146 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:04:08,208 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:04:08,274 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:04:08,341 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:04:08,405 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:04:08,468 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:04:08,531 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:04:08,605 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:04:08,702 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:04:08,779 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:04:08,860 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:04:08,944 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:04:09,011 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:04:09,077 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:04:09,146 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:04:09,223 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:04:09,291 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:04:09,357 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:04:09,420 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:04:09,836 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:04:09,840 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:04:09,844 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:04:09,848 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:04:09,851 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:04:09,856 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:04:09,860 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:04:09,865 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:04:09,870 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:04:09,874 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:04:09,879 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:04:09,884 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:04:09,889 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:04:09,893 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:04:09,897 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:04:09,901 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:04:09,905 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:04:09,909 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:04:09,913 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:04:09,917 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:04:09,921 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:04:09,925 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:04:09,928 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:04:09,932 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:04:09,936 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:04:10,013 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:04:10,016 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:04:10,020 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:04:10,023 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:04:10,027 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:04:10,030 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:04:10,033 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:04:10,037 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:04:10,041 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:04:10,044 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:04:10,048 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:04:10,051 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:04:10,055 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:04:10,059 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:04:10,063 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:04:10,067 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:04:10,071 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:04:10,075 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:04:10,079 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:04:10,082 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:04:10,087 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:04:10,091 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:04:10,095 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:04:10,099 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:04:10,104 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:04:10,150 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:04:10,228 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:04:10,311 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:04:10,382 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:04:10,447 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:04:10,512 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:04:10,575 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:04:10,638 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:04:10,701 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:04:10,764 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:04:10,828 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:04:10,903 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:04:10,988 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:04:11,070 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:04:11,142 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:04:11,204 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:04:11,270 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:04:11,333 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:04:11,397 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:04:11,461 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:04:11,527 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:04:11,595 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:04:11,676 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:04:11,757 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:04:11,833 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:30,212 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:30,287 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:30,352 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:30,433 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:30,519 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:30,591 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:30,652 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:30,720 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:30,793 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:30,866 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:30,926 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:30,987 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:31,051 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:31,112 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:31,176 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:31,268 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:31,353 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:31,416 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:31,477 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:31,543 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:31,615 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:31,688 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:31,762 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:31,834 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:31,904 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:32,338 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:32,344 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:32,351 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:32,357 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:32,365 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:32,371 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:32,378 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:32,385 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:32,394 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:32,403 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:32,414 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:32,424 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:32,433 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:32,440 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:32,450 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:32,458 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:32,465 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:32,471 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:32,481 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:32,488 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:32,498 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:32,504 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:32,514 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:32,520 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:32,526 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:32,630 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:32,636 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:32,640 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:32,644 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:32,648 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:32,651 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:32,655 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:32,659 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:32,663 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:32,667 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:32,670 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:32,674 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:32,678 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:32,683 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:32,687 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:32,691 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:32,695 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:32,700 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:32,704 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:32,708 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:32,713 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:32,717 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:32,721 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:32,725 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:32,730 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:32,776 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:32,853 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:32,925 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:32,987 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:33,056 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:33,138 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:33,223 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:33,296 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:33,363 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:33,423 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:33,495 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:33,586 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:33,672 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:33,753 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:33,852 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:33,951 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:34,059 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:34,133 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:34,199 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:34,280 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:34,364 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:34,439 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:34,518 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:34,617 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:34,688 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:42,664 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:42,744 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:42,877 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:42,944 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:43,005 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:43,069 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:43,131 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:43,207 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:43,301 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:43,379 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:43,466 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:43,559 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:43,636 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:43,700 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:43,764 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:43,828 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:43,893 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:43,967 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:44,055 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:44,138 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:44,205 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:44,276 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:44,357 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:44,436 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:44,501 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:45,152 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:45,157 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:45,164 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:45,170 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:45,176 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:45,183 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:45,190 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:45,199 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:45,205 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:45,213 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:45,220 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:45,225 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:45,232 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:45,238 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:45,246 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:45,251 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:45,256 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:45,263 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:45,268 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:45,273 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:45,278 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:45,282 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:45,287 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:45,290 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:45,295 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:45,385 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:45,390 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:45,395 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:45,401 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:45,408 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:45,415 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:45,419 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:45,425 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:45,432 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:45,437 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:45,444 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:45,451 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:45,457 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:45,463 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:45,468 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:45,474 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:45,481 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:45,486 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:45,491 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:45,499 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:45,505 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:45,510 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:45,516 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:45,522 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:45,529 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:45,596 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:45,687 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:45,770 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:45,865 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:45,954 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:46,058 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:46,133 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:46,194 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:46,265 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:46,372 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:46,513 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:46,606 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:46,681 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:46,773 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:46,901 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:47,007 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:47,104 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:47,205 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:47,310 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:47,403 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:47,474 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:47,560 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:47,628 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:47,687 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:06:47,748 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:07:56,386 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:07:56,460 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:07:56,519 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:07:56,581 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:07:56,642 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:07:56,702 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:07:56,763 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:07:56,826 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:07:56,887 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:07:56,951 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:07:57,023 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:07:57,118 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:07:57,205 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:07:57,280 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:07:57,345 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:07:57,413 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:07:57,480 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:07:57,543 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:07:57,608 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:07:57,673 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:07:57,739 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:07:57,808 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:07:57,872 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:07:57,934 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:07:57,996 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:07:58,427 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:07:58,435 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:07:58,441 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:07:58,447 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:07:58,453 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:07:58,459 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:07:58,466 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:07:58,473 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:07:58,480 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:07:58,489 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:07:58,496 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:07:58,505 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:07:58,513 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:07:58,522 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:07:58,529 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:07:58,540 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:07:58,547 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:07:58,556 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:07:58,564 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:07:58,573 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:07:58,580 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:07:58,589 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:07:58,596 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:07:58,606 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:07:58,614 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:07:58,777 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:07:58,784 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:07:58,790 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:07:58,797 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:07:58,803 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:07:58,809 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:07:58,817 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:07:58,824 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:07:58,830 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:07:58,837 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:07:58,842 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:07:58,847 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:07:58,854 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:07:58,858 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:07:58,864 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:07:58,869 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:07:58,873 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:07:58,879 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:07:58,883 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:07:58,888 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:07:58,892 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:07:58,897 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:07:58,902 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:07:58,906 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:07:58,911 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:07:58,960 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:07:59,025 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:07:59,093 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:07:59,158 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:07:59,226 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:07:59,314 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:07:59,402 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:07:59,475 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:07:59,539 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:07:59,602 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:07:59,664 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:07:59,725 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:07:59,786 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:07:59,852 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:07:59,919 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:07:59,984 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:08:00,055 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:08:00,131 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:08:00,199 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:08:00,259 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:08:00,320 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:08:00,382 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:08:00,443 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:08:00,505 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:08:00,568 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:08:22,155 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:08:22,231 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:08:22,305 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:08:22,376 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:08:22,453 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:08:22,518 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:08:22,579 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:08:22,641 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:08:22,702 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:08:22,764 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:08:22,826 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:08:22,897 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:08:22,960 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:08:23,084 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:08:23,163 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:08:23,228 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:08:23,290 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:08:23,352 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:08:23,415 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:08:23,482 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:08:23,546 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:08:23,612 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:08:23,678 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:08:23,740 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:08:23,807 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:08:24,206 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:08:24,210 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:08:24,214 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:08:24,217 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:08:24,221 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:08:24,224 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:08:24,228 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:08:24,232 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:08:24,235 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:08:24,239 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:08:24,243 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:08:24,247 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:08:24,251 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:08:24,254 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:08:24,258 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:08:24,262 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:08:24,266 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:08:24,270 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:08:24,275 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:08:24,280 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:08:24,286 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:08:24,292 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:08:24,298 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:08:24,303 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:08:24,308 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:08:24,393 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:08:24,396 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:08:24,400 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:08:24,405 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:08:24,409 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:08:24,414 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:08:24,418 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:08:24,422 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:08:24,425 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:08:24,429 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:08:24,435 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:08:24,444 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:08:24,451 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:08:24,455 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:08:24,460 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:08:24,465 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:08:24,470 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:08:24,475 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:08:24,479 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:08:24,484 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:08:24,488 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:08:24,492 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:08:24,496 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:08:24,501 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:08:24,505 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:08:24,551 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:08:24,618 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:08:24,683 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:08:24,745 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:08:24,808 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:08:24,877 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:08:24,939 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:08:25,006 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:08:25,081 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:08:25,148 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:08:25,210 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:08:25,272 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:08:25,336 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:08:25,400 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:08:25,470 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:08:25,533 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:08:25,597 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:08:25,665 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:08:25,735 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:08:25,797 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:08:25,861 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:08:25,923 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:08:25,984 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:08:26,070 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:08:26,216 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:08:58,053 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:08:58,153 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:08:58,238 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:08:58,315 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:08:58,383 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:08:58,450 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:08:58,514 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:08:58,583 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:08:58,660 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:08:58,741 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:08:58,814 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:08:58,885 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:08:58,956 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:08:59,031 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:08:59,107 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:08:59,180 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:08:59,256 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:08:59,330 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:08:59,409 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:08:59,486 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:08:59,566 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:08:59,643 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:08:59,712 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:08:59,788 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:08:59,876 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:09:00,315 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:09:00,320 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:09:00,324 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:09:00,329 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:09:00,336 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:09:00,341 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:09:00,349 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:09:00,355 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:09:00,360 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:09:00,369 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:09:00,374 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:09:00,382 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:09:00,388 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:09:00,396 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:09:00,403 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:09:00,410 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:09:00,417 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:09:00,422 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:09:00,431 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:09:00,440 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:09:00,448 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:09:00,453 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:09:00,459 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:09:00,465 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:09:00,470 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:09:00,579 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:09:00,584 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:09:00,588 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:09:00,591 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:09:00,595 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:09:00,599 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:09:00,602 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:09:00,606 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:09:00,610 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:09:00,613 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:09:00,617 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:09:00,622 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:09:00,625 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:09:00,630 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:09:00,634 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:09:00,639 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:09:00,643 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:09:00,647 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:09:00,651 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:09:00,656 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:09:00,660 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:09:00,665 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:09:00,669 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:09:00,674 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:09:00,678 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:09:00,729 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:09:00,812 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:09:00,897 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:09:00,971 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:09:01,051 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:09:01,132 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:09:01,199 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:09:01,265 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:09:01,328 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:09:01,391 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:09:01,454 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:09:01,515 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:09:01,577 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:09:01,638 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:09:01,704 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:09:01,777 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:09:01,846 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:09:01,919 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:09:01,982 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:09:02,043 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:09:02,105 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:09:02,167 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:09:02,229 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:09:02,293 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:09:02,354 - DEBUG - matplotlib.axes._base - top of axes not in the figure, so title not moved
2022-02-05 15:18:51,932 - DEBUG - matplotlib.font_manager - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=14.399999999999999.
2022-02-05 15:18:51,935 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-02-05 15:18:51,935 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,935 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,935 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,935 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,935 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2022-02-05 15:18:51,935 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,935 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,936 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,936 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,936 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-02-05 15:18:51,936 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2022-02-05 15:18:51,936 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,936 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-02-05 15:18:51,936 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-02-05 15:18:51,936 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-02-05 15:18:51,936 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2022-02-05 15:18:51,936 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,936 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,937 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2022-02-05 15:18:51,937 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2022-02-05 15:18:51,937 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2022-02-05 15:18:51,937 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2022-02-05 15:18:51,937 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2022-02-05 15:18:51,937 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,937 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2022-02-05 15:18:51,937 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,937 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,937 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2022-02-05 15:18:51,937 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2022-02-05 15:18:51,937 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,938 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,938 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,938 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-02-05 15:18:51,938 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,938 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-02-05 15:18:51,938 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2022-02-05 15:18:51,938 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2022-02-05 15:18:51,938 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,938 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,938 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
2022-02-05 15:18:51,938 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,938 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,939 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,939 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,939 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,939 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 600 normal>) = 10.24
2022-02-05 15:18:51,939 - DEBUG - matplotlib.font_manager - findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal 900 normal>) = 10.525
2022-02-05 15:18:51,939 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,939 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,939 - DEBUG - matplotlib.font_manager - findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal 295 normal>) = 11.14975
2022-02-05 15:18:51,939 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,939 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,939 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,939 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.335
2022-02-05 15:18:51,940 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,940 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,940 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,940 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,940 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal 700 normal>) = 10.335
2022-02-05 15:18:51,940 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.335
2022-02-05 15:18:51,940 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,940 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,940 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 7.322727272727273
2022-02-05 15:18:51,940 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,940 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,940 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,941 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,941 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.535
2022-02-05 15:18:51,941 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,941 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,941 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,941 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,941 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,941 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,941 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,941 - DEBUG - matplotlib.font_manager - findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 100 normal>) = 10.335
2022-02-05 15:18:51,941 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,941 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Charter' (Charter.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,941 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 500 normal>) = 10.145
2022-02-05 15:18:51,942 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,942 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.335
2022-02-05 15:18:51,942 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,942 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,942 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
2022-02-05 15:18:51,942 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,942 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,942 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,942 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,942 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 6.413636363636363
2022-02-05 15:18:51,942 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,943 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,943 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,943 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal 400 normal>) = 11.05
2022-02-05 15:18:51,943 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,943 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,943 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.335
2022-02-05 15:18:51,943 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,943 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,943 - DEBUG - matplotlib.font_manager - findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 1000 normal>) = 11.62
2022-02-05 15:18:51,943 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,943 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,943 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal 900 normal>) = 10.525
2022-02-05 15:18:51,944 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 200 normal>) = 10.24
2022-02-05 15:18:51,944 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,944 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,944 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 10.335
2022-02-05 15:18:51,944 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,944 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,944 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,944 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,944 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,944 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal 900 normal>) = 10.525
2022-02-05 15:18:51,944 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,944 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Sana' (Sana.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,944 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,945 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 7.413636363636363
2022-02-05 15:18:51,945 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,945 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,945 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,945 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,945 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
2022-02-05 15:18:51,945 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,945 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,945 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,945 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,945 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,945 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,946 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,946 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 500 normal>) = 10.145
2022-02-05 15:18:51,946 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
2022-02-05 15:18:51,946 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 900 normal>) = 10.525
2022-02-05 15:18:51,946 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.335
2022-02-05 15:18:51,946 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,946 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.335
2022-02-05 15:18:51,946 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-02-05 15:18:51,946 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,946 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,946 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal 900 normal>) = 10.525
2022-02-05 15:18:51,946 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.535
2022-02-05 15:18:51,946 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,947 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 0 normal>) = 10.43
2022-02-05 15:18:51,947 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,947 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,947 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,947 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,947 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,947 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,947 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,947 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,947 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,947 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,947 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,947 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,948 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,948 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,948 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,948 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,948 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,948 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal 500 normal>) = 10.145
2022-02-05 15:18:51,948 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,948 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,948 - DEBUG - matplotlib.font_manager - findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,948 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal 400 normal>) = 11.05
2022-02-05 15:18:51,948 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,948 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 11.335
2022-02-05 15:18:51,948 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.335
2022-02-05 15:18:51,948 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,949 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,949 - DEBUG - matplotlib.font_manager - findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 300 normal>) = 10.145
2022-02-05 15:18:51,949 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,949 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
2022-02-05 15:18:51,949 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,949 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Muna' (Muna.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,949 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,949 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,949 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,949 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,949 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,949 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,949 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,949 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,950 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,950 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,950 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal 900 normal>) = 10.525
2022-02-05 15:18:51,950 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,950 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 7.698636363636363
2022-02-05 15:18:51,950 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,950 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,950 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Skia' (Skia.ttf) normal normal 5 normal>) = 10.42525
2022-02-05 15:18:51,950 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,950 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,950 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,950 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,950 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,950 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Times' (Times.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,951 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.335
2022-02-05 15:18:51,951 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,951 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,951 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 11.335
2022-02-05 15:18:51,951 - DEBUG - matplotlib.font_manager - findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 1000 normal>) = 10.62
2022-02-05 15:18:51,951 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,951 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,951 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-02-05 15:18:51,951 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal 700 normal>) = 10.335
2022-02-05 15:18:51,951 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,951 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,951 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,952 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,952 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,952 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,952 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,952 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,952 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,952 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,952 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,952 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Marion' (Marion.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,952 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,952 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,952 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,952 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,952 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
2022-02-05 15:18:51,953 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,953 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,953 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 6.698636363636363
2022-02-05 15:18:51,953 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,953 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 100 normal>) = 10.335
2022-02-05 15:18:51,953 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,953 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,953 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,953 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,953 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal 300 normal>) = 10.145
2022-02-05 15:18:51,953 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 10.335
2022-02-05 15:18:51,953 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.335
2022-02-05 15:18:51,953 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,953 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-02-05 15:18:51,954 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.335
2022-02-05 15:18:51,954 - DEBUG - matplotlib.font_manager - findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.05
2022-02-05 15:18:51,954 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal 900 normal>) = 10.525
2022-02-05 15:18:51,954 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,954 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,954 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,954 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal 400 normal>) = 11.05
2022-02-05 15:18:51,954 - DEBUG - matplotlib.font_manager - findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal 295 normal>) = 10.14975
2022-02-05 15:18:51,954 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,954 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,954 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,954 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,954 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,954 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,954 - DEBUG - matplotlib.font_manager - findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,955 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,955 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.535
2022-02-05 15:18:51,955 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,955 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Farah' (Farah.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,955 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,955 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,955 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 250 normal>) = 10.1925
2022-02-05 15:18:51,955 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,955 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,955 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2022-02-05 15:18:51,955 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,955 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,955 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.335
2022-02-05 15:18:51,955 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,955 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
2022-02-05 15:18:51,956 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,956 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,956 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,956 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,956 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,956 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,956 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,956 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,956 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,956 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,956 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,956 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.335
2022-02-05 15:18:51,956 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,956 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,956 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,957 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,957 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,957 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,957 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,957 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,957 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,957 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 300 normal>) = 10.145
2022-02-05 15:18:51,957 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,957 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Optima' (Optima.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,957 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,957 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,957 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,957 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,957 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,957 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,958 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,958 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,958 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,958 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,958 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,958 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 800 normal>) = 10.43
2022-02-05 15:18:51,958 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.335
2022-02-05 15:18:51,958 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,958 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,958 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 500 normal>) = 2.872272727272727
2022-02-05 15:18:51,958 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 3.9713636363636367
2022-02-05 15:18:51,958 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,958 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,958 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.335
2022-02-05 15:18:51,958 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,958 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,959 - DEBUG - matplotlib.font_manager - findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,959 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.335
2022-02-05 15:18:51,959 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,959 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,959 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,959 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,959 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,959 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,959 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,959 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,959 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.335
2022-02-05 15:18:51,959 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,959 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 4.971363636363637
2022-02-05 15:18:51,959 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,959 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,960 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.535
2022-02-05 15:18:51,960 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,960 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,960 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,960 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
2022-02-05 15:18:51,960 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,960 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,960 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,960 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-02-05 15:18:51,960 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,960 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal 900 normal>) = 10.525
2022-02-05 15:18:51,960 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,960 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal 700 normal>) = 10.335
2022-02-05 15:18:51,960 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,960 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,961 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,961 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,961 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
2022-02-05 15:18:51,961 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,961 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.335
2022-02-05 15:18:51,961 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,961 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,961 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,961 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 500 normal>) = 10.145
2022-02-05 15:18:51,961 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Futura' (Futura.ttc) normal normal 500 normal>) = 10.145
2022-02-05 15:18:51,961 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,961 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,961 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
2022-02-05 15:18:51,961 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,961 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,961 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,962 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,962 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,962 - DEBUG - matplotlib.font_manager - findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,962 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,962 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,962 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.335
2022-02-05 15:18:51,962 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,962 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,962 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,962 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal 300 normal>) = 10.145
2022-02-05 15:18:51,962 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 500 normal>) = 10.145
2022-02-05 15:18:51,962 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,962 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.335
2022-02-05 15:18:51,962 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,962 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,963 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,963 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,963 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,963 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,963 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 300 normal>) = 10.145
2022-02-05 15:18:51,963 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,963 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,963 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 250 normal>) = 10.1925
2022-02-05 15:18:51,963 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 300 normal>) = 10.145
2022-02-05 15:18:51,963 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 4.6863636363636365
2022-02-05 15:18:51,963 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,963 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,963 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:18:51,963 - DEBUG - matplotlib.font_manager - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=14.399999999999999 to DejaVu Sans ('/Users/johann/PycharmProjects/PiQ/env/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2022-02-05 15:19:56,387 - DEBUG - matplotlib.font_manager - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2022-02-05 15:19:56,387 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-02-05 15:19:56,387 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,387 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,387 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,387 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,387 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2022-02-05 15:19:56,387 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,388 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,388 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,388 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,388 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-02-05 15:19:56,388 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2022-02-05 15:19:56,388 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,388 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-02-05 15:19:56,388 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-02-05 15:19:56,388 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-02-05 15:19:56,388 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2022-02-05 15:19:56,388 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,388 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,389 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2022-02-05 15:19:56,389 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2022-02-05 15:19:56,389 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2022-02-05 15:19:56,389 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2022-02-05 15:19:56,389 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2022-02-05 15:19:56,389 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,389 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2022-02-05 15:19:56,389 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,389 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,389 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2022-02-05 15:19:56,389 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2022-02-05 15:19:56,389 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,390 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,390 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,390 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-02-05 15:19:56,390 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,390 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-02-05 15:19:56,390 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2022-02-05 15:19:56,390 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2022-02-05 15:19:56,390 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,390 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,390 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
2022-02-05 15:19:56,390 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,390 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,390 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,390 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,391 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,391 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 600 normal>) = 10.24
2022-02-05 15:19:56,391 - DEBUG - matplotlib.font_manager - findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal 900 normal>) = 10.525
2022-02-05 15:19:56,391 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,391 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,391 - DEBUG - matplotlib.font_manager - findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal 295 normal>) = 11.14975
2022-02-05 15:19:56,391 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,391 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,391 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,391 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.335
2022-02-05 15:19:56,391 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,391 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,391 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,391 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,391 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal 700 normal>) = 10.335
2022-02-05 15:19:56,392 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.335
2022-02-05 15:19:56,392 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,392 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,392 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 7.322727272727273
2022-02-05 15:19:56,392 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,392 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,392 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,392 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,392 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.535
2022-02-05 15:19:56,392 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,392 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,392 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,392 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,392 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,393 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,393 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,393 - DEBUG - matplotlib.font_manager - findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 100 normal>) = 10.335
2022-02-05 15:19:56,393 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,393 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Charter' (Charter.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,393 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 500 normal>) = 10.145
2022-02-05 15:19:56,393 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,393 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.335
2022-02-05 15:19:56,393 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,393 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,393 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
2022-02-05 15:19:56,393 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,393 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,394 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,394 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,394 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 6.413636363636363
2022-02-05 15:19:56,394 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,394 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,394 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,394 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal 400 normal>) = 11.05
2022-02-05 15:19:56,394 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,394 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,394 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.335
2022-02-05 15:19:56,394 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,394 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,394 - DEBUG - matplotlib.font_manager - findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 1000 normal>) = 11.62
2022-02-05 15:19:56,394 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,394 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,395 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal 900 normal>) = 10.525
2022-02-05 15:19:56,395 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 200 normal>) = 10.24
2022-02-05 15:19:56,395 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,395 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,395 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 10.335
2022-02-05 15:19:56,395 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,395 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,395 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,395 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,395 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,395 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal 900 normal>) = 10.525
2022-02-05 15:19:56,395 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,395 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Sana' (Sana.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,395 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,396 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 7.413636363636363
2022-02-05 15:19:56,396 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,396 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,396 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,396 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,396 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
2022-02-05 15:19:56,396 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,396 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,396 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,396 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,396 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,396 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,396 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,396 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 500 normal>) = 10.145
2022-02-05 15:19:56,397 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
2022-02-05 15:19:56,397 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 900 normal>) = 10.525
2022-02-05 15:19:56,397 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.335
2022-02-05 15:19:56,397 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,397 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.335
2022-02-05 15:19:56,397 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-02-05 15:19:56,397 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,397 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,397 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal 900 normal>) = 10.525
2022-02-05 15:19:56,397 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.535
2022-02-05 15:19:56,397 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,397 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 0 normal>) = 10.43
2022-02-05 15:19:56,397 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,397 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,397 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,398 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,398 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,398 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,398 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,398 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,398 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,398 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,398 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,398 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,398 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,398 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,398 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,398 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,399 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,399 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal 500 normal>) = 10.145
2022-02-05 15:19:56,399 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,399 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,399 - DEBUG - matplotlib.font_manager - findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,399 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal 400 normal>) = 11.05
2022-02-05 15:19:56,399 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,399 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 11.335
2022-02-05 15:19:56,399 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.335
2022-02-05 15:19:56,399 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,399 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,399 - DEBUG - matplotlib.font_manager - findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 300 normal>) = 10.145
2022-02-05 15:19:56,399 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,399 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
2022-02-05 15:19:56,400 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,400 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Muna' (Muna.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,400 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,400 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,400 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,400 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,400 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,400 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,400 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,400 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,400 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,400 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,400 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal 900 normal>) = 10.525
2022-02-05 15:19:56,400 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,400 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 7.698636363636363
2022-02-05 15:19:56,401 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,401 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,401 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Skia' (Skia.ttf) normal normal 5 normal>) = 10.42525
2022-02-05 15:19:56,401 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,401 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,401 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,401 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,401 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,401 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Times' (Times.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,401 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.335
2022-02-05 15:19:56,401 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,401 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,401 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 11.335
2022-02-05 15:19:56,401 - DEBUG - matplotlib.font_manager - findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 1000 normal>) = 10.62
2022-02-05 15:19:56,401 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,402 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,402 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-02-05 15:19:56,402 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal 700 normal>) = 10.335
2022-02-05 15:19:56,402 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,402 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,402 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,402 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,402 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,402 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,402 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,402 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,402 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,402 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,402 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,402 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Marion' (Marion.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,402 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,403 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,403 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,403 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,403 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
2022-02-05 15:19:56,403 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,403 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,403 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 6.698636363636363
2022-02-05 15:19:56,403 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,403 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 100 normal>) = 10.335
2022-02-05 15:19:56,403 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,403 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,403 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,403 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,403 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal 300 normal>) = 10.145
2022-02-05 15:19:56,404 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 10.335
2022-02-05 15:19:56,404 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.335
2022-02-05 15:19:56,404 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,404 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-02-05 15:19:56,404 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.335
2022-02-05 15:19:56,404 - DEBUG - matplotlib.font_manager - findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.05
2022-02-05 15:19:56,404 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal 900 normal>) = 10.525
2022-02-05 15:19:56,404 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,404 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,404 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,404 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal 400 normal>) = 11.05
2022-02-05 15:19:56,404 - DEBUG - matplotlib.font_manager - findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal 295 normal>) = 10.14975
2022-02-05 15:19:56,404 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,404 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,404 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,404 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,405 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,405 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,405 - DEBUG - matplotlib.font_manager - findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,405 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,405 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.535
2022-02-05 15:19:56,405 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,405 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Farah' (Farah.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,405 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,405 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,405 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 250 normal>) = 10.1925
2022-02-05 15:19:56,405 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,405 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,405 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2022-02-05 15:19:56,405 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,405 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,406 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.335
2022-02-05 15:19:56,406 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,406 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
2022-02-05 15:19:56,406 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,406 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,406 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,406 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,406 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,406 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,406 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,406 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,406 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,406 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,406 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,406 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.335
2022-02-05 15:19:56,407 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,407 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,407 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,407 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,407 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,407 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,407 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,407 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,407 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,407 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 300 normal>) = 10.145
2022-02-05 15:19:56,407 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,407 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Optima' (Optima.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,407 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,407 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,407 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,407 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,408 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,408 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,408 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,408 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,408 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,408 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,408 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,408 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 800 normal>) = 10.43
2022-02-05 15:19:56,408 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.335
2022-02-05 15:19:56,408 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,408 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,408 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 500 normal>) = 2.872272727272727
2022-02-05 15:19:56,408 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 3.9713636363636367
2022-02-05 15:19:56,409 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,409 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,409 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.335
2022-02-05 15:19:56,409 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,409 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,409 - DEBUG - matplotlib.font_manager - findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,409 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.335
2022-02-05 15:19:56,409 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,409 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,409 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,409 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,409 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,409 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,409 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,409 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,410 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.335
2022-02-05 15:19:56,410 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,410 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 4.971363636363637
2022-02-05 15:19:56,410 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,410 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,410 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.535
2022-02-05 15:19:56,410 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,410 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,410 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,410 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
2022-02-05 15:19:56,410 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,410 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,410 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,410 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-02-05 15:19:56,410 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,410 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal 900 normal>) = 10.525
2022-02-05 15:19:56,411 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,411 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal 700 normal>) = 10.335
2022-02-05 15:19:56,411 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,411 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,411 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,411 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,411 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
2022-02-05 15:19:56,411 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,411 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.335
2022-02-05 15:19:56,411 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,411 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,411 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,411 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 500 normal>) = 10.145
2022-02-05 15:19:56,411 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Futura' (Futura.ttc) normal normal 500 normal>) = 10.145
2022-02-05 15:19:56,411 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,412 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,412 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
2022-02-05 15:19:56,412 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,412 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,412 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,412 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,412 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,412 - DEBUG - matplotlib.font_manager - findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,412 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,412 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,412 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.335
2022-02-05 15:19:56,412 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,412 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,412 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,412 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal 300 normal>) = 10.145
2022-02-05 15:19:56,413 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 500 normal>) = 10.145
2022-02-05 15:19:56,413 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,413 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.335
2022-02-05 15:19:56,413 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,413 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,413 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,413 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,413 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,413 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,413 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 300 normal>) = 10.145
2022-02-05 15:19:56,413 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,413 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,413 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 250 normal>) = 10.1925
2022-02-05 15:19:56,413 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 300 normal>) = 10.145
2022-02-05 15:19:56,413 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 4.6863636363636365
2022-02-05 15:19:56,414 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,414 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,414 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:56,414 - DEBUG - matplotlib.font_manager - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/Users/johann/PycharmProjects/PiQ/env/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2022-02-05 15:19:58,729 - DEBUG - matplotlib.font_manager - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=14.399999999999999.
2022-02-05 15:19:58,729 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-02-05 15:19:58,729 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,729 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,729 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,729 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,730 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2022-02-05 15:19:58,730 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,730 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,730 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,730 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,730 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-02-05 15:19:58,730 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2022-02-05 15:19:58,730 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,730 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-02-05 15:19:58,730 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-02-05 15:19:58,730 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-02-05 15:19:58,730 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2022-02-05 15:19:58,730 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,731 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,731 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2022-02-05 15:19:58,731 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2022-02-05 15:19:58,731 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2022-02-05 15:19:58,731 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2022-02-05 15:19:58,731 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2022-02-05 15:19:58,731 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,731 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2022-02-05 15:19:58,731 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,731 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,731 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2022-02-05 15:19:58,731 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2022-02-05 15:19:58,731 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,732 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,732 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,732 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-02-05 15:19:58,732 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,732 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-02-05 15:19:58,732 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2022-02-05 15:19:58,732 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2022-02-05 15:19:58,732 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,732 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,732 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
2022-02-05 15:19:58,732 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,732 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,732 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,733 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,733 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,733 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 600 normal>) = 10.24
2022-02-05 15:19:58,733 - DEBUG - matplotlib.font_manager - findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal 900 normal>) = 10.525
2022-02-05 15:19:58,733 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,733 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,733 - DEBUG - matplotlib.font_manager - findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal 295 normal>) = 11.14975
2022-02-05 15:19:58,733 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,733 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,733 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,733 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.335
2022-02-05 15:19:58,733 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,733 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,733 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,734 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,734 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal 700 normal>) = 10.335
2022-02-05 15:19:58,734 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.335
2022-02-05 15:19:58,734 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,734 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,734 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 7.322727272727273
2022-02-05 15:19:58,734 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,734 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,734 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,734 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,734 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.535
2022-02-05 15:19:58,734 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,734 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,734 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,735 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,735 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,735 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,735 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,735 - DEBUG - matplotlib.font_manager - findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 100 normal>) = 10.335
2022-02-05 15:19:58,735 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,735 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Charter' (Charter.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,735 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 500 normal>) = 10.145
2022-02-05 15:19:58,735 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,735 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.335
2022-02-05 15:19:58,735 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,735 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,735 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
2022-02-05 15:19:58,736 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,736 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,736 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,736 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,736 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 6.413636363636363
2022-02-05 15:19:58,736 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,736 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,736 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,736 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal 400 normal>) = 11.05
2022-02-05 15:19:58,736 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,736 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,736 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.335
2022-02-05 15:19:58,736 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,736 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,737 - DEBUG - matplotlib.font_manager - findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 1000 normal>) = 11.62
2022-02-05 15:19:58,737 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,737 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,737 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal 900 normal>) = 10.525
2022-02-05 15:19:58,737 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 200 normal>) = 10.24
2022-02-05 15:19:58,737 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,737 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,737 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 10.335
2022-02-05 15:19:58,737 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,737 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,737 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,737 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,737 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,737 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal 900 normal>) = 10.525
2022-02-05 15:19:58,737 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,738 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Sana' (Sana.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,738 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,738 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 7.413636363636363
2022-02-05 15:19:58,738 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,738 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,738 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,738 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,738 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
2022-02-05 15:19:58,738 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,738 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,738 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,738 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,738 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,739 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,739 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,739 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 500 normal>) = 10.145
2022-02-05 15:19:58,739 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
2022-02-05 15:19:58,739 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 900 normal>) = 10.525
2022-02-05 15:19:58,739 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.335
2022-02-05 15:19:58,739 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,739 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.335
2022-02-05 15:19:58,739 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-02-05 15:19:58,739 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,739 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,739 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal 900 normal>) = 10.525
2022-02-05 15:19:58,739 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.535
2022-02-05 15:19:58,739 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,740 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 0 normal>) = 10.43
2022-02-05 15:19:58,740 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,740 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,740 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,740 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,740 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,740 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,740 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,740 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,740 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,740 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,740 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,740 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,740 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,740 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,741 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,741 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,741 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,741 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal 500 normal>) = 10.145
2022-02-05 15:19:58,741 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,741 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,741 - DEBUG - matplotlib.font_manager - findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,741 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal 400 normal>) = 11.05
2022-02-05 15:19:58,741 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,741 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 11.335
2022-02-05 15:19:58,741 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.335
2022-02-05 15:19:58,741 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,741 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,741 - DEBUG - matplotlib.font_manager - findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 300 normal>) = 10.145
2022-02-05 15:19:58,742 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,742 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
2022-02-05 15:19:58,742 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,742 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Muna' (Muna.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,742 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,742 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,742 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,742 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,742 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,742 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,742 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,742 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,742 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,742 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,743 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal 900 normal>) = 10.525
2022-02-05 15:19:58,743 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,743 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 7.698636363636363
2022-02-05 15:19:58,743 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,743 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,743 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Skia' (Skia.ttf) normal normal 5 normal>) = 10.42525
2022-02-05 15:19:58,743 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,743 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,743 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,743 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,743 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,743 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Times' (Times.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,743 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.335
2022-02-05 15:19:58,743 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,743 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,744 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 11.335
2022-02-05 15:19:58,744 - DEBUG - matplotlib.font_manager - findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 1000 normal>) = 10.62
2022-02-05 15:19:58,744 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,744 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,744 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-02-05 15:19:58,744 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal 700 normal>) = 10.335
2022-02-05 15:19:58,744 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,744 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,744 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,744 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,744 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,744 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,744 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,744 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,745 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,745 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,745 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,745 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Marion' (Marion.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,745 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,745 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,745 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,745 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,745 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
2022-02-05 15:19:58,745 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,745 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,745 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 6.698636363636363
2022-02-05 15:19:58,745 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,745 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 100 normal>) = 10.335
2022-02-05 15:19:58,745 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,746 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,746 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,746 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,746 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal 300 normal>) = 10.145
2022-02-05 15:19:58,746 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 10.335
2022-02-05 15:19:58,746 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.335
2022-02-05 15:19:58,746 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,746 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-02-05 15:19:58,746 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.335
2022-02-05 15:19:58,746 - DEBUG - matplotlib.font_manager - findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.05
2022-02-05 15:19:58,746 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal 900 normal>) = 10.525
2022-02-05 15:19:58,746 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,746 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,746 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,747 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal 400 normal>) = 11.05
2022-02-05 15:19:58,747 - DEBUG - matplotlib.font_manager - findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal 295 normal>) = 10.14975
2022-02-05 15:19:58,747 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,747 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,747 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,747 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,747 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,747 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,747 - DEBUG - matplotlib.font_manager - findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,747 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,747 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.535
2022-02-05 15:19:58,747 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,747 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Farah' (Farah.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,747 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,747 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,747 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 250 normal>) = 10.1925
2022-02-05 15:19:58,748 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,748 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,748 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2022-02-05 15:19:58,748 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,748 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,748 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.335
2022-02-05 15:19:58,748 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,748 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
2022-02-05 15:19:58,748 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,748 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,748 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,748 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,748 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,748 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,748 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,749 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,749 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,749 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,749 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,749 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.335
2022-02-05 15:19:58,749 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,749 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,749 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,749 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,749 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,749 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,749 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,749 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,749 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,749 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 300 normal>) = 10.145
2022-02-05 15:19:58,750 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,750 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Optima' (Optima.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,750 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,750 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,750 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,750 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,750 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,750 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,750 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,750 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,750 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,750 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,750 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,750 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 800 normal>) = 10.43
2022-02-05 15:19:58,750 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.335
2022-02-05 15:19:58,750 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,751 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,751 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 500 normal>) = 2.872272727272727
2022-02-05 15:19:58,751 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 3.9713636363636367
2022-02-05 15:19:58,751 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,751 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,751 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.335
2022-02-05 15:19:58,751 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,751 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,751 - DEBUG - matplotlib.font_manager - findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,751 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.335
2022-02-05 15:19:58,751 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,751 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,751 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,751 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,751 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,751 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,752 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,752 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,752 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.335
2022-02-05 15:19:58,752 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,752 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 4.971363636363637
2022-02-05 15:19:58,752 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,752 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,752 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.535
2022-02-05 15:19:58,752 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,752 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,752 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,752 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
2022-02-05 15:19:58,752 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,752 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,752 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,752 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-02-05 15:19:58,753 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,753 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal 900 normal>) = 10.525
2022-02-05 15:19:58,753 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,753 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal 700 normal>) = 10.335
2022-02-05 15:19:58,753 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,753 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,753 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,753 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,753 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
2022-02-05 15:19:58,753 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,753 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.335
2022-02-05 15:19:58,753 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,753 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,753 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,753 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 500 normal>) = 10.145
2022-02-05 15:19:58,753 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Futura' (Futura.ttc) normal normal 500 normal>) = 10.145
2022-02-05 15:19:58,754 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,754 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,754 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
2022-02-05 15:19:58,754 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,754 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,754 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,754 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,754 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,754 - DEBUG - matplotlib.font_manager - findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,754 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,754 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,754 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.335
2022-02-05 15:19:58,754 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,754 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,755 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,755 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal 300 normal>) = 10.145
2022-02-05 15:19:58,755 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 500 normal>) = 10.145
2022-02-05 15:19:58,755 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,755 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.335
2022-02-05 15:19:58,755 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,755 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,755 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,755 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,755 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,755 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,755 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 300 normal>) = 10.145
2022-02-05 15:19:58,756 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,756 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,756 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 250 normal>) = 10.1925
2022-02-05 15:19:58,756 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 300 normal>) = 10.145
2022-02-05 15:19:58,756 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 4.6863636363636365
2022-02-05 15:19:58,756 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,756 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,756 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:19:58,756 - DEBUG - matplotlib.font_manager - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=14.399999999999999 to DejaVu Sans ('/Users/johann/PycharmProjects/PiQ/env/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2022-02-05 15:28:09,655 - DEBUG - matplotlib.font_manager - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=20.0.
2022-02-05 15:28:09,657 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-02-05 15:28:09,657 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,657 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,657 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,658 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,658 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2022-02-05 15:28:09,658 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,659 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,659 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,659 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,660 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-02-05 15:28:09,660 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2022-02-05 15:28:09,660 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,661 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-02-05 15:28:09,661 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-02-05 15:28:09,661 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-02-05 15:28:09,661 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2022-02-05 15:28:09,661 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,661 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,662 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2022-02-05 15:28:09,662 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2022-02-05 15:28:09,662 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2022-02-05 15:28:09,662 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2022-02-05 15:28:09,662 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2022-02-05 15:28:09,662 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,662 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2022-02-05 15:28:09,663 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,663 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,663 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2022-02-05 15:28:09,663 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2022-02-05 15:28:09,663 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,663 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,664 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,664 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-02-05 15:28:09,664 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,664 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-02-05 15:28:09,664 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2022-02-05 15:28:09,664 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2022-02-05 15:28:09,664 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,664 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,664 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
2022-02-05 15:28:09,665 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,665 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,665 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,665 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,665 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,665 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 600 normal>) = 10.24
2022-02-05 15:28:09,665 - DEBUG - matplotlib.font_manager - findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal 900 normal>) = 10.525
2022-02-05 15:28:09,666 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,666 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,666 - DEBUG - matplotlib.font_manager - findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal 295 normal>) = 11.14975
2022-02-05 15:28:09,666 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,666 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,666 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,666 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.335
2022-02-05 15:28:09,666 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,666 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,667 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,667 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,667 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal 700 normal>) = 10.335
2022-02-05 15:28:09,667 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.335
2022-02-05 15:28:09,667 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,667 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,667 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 7.322727272727273
2022-02-05 15:28:09,667 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,668 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,668 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,668 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,668 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.535
2022-02-05 15:28:09,668 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,668 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,668 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,668 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,668 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,669 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,669 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,669 - DEBUG - matplotlib.font_manager - findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 100 normal>) = 10.335
2022-02-05 15:28:09,669 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,669 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Charter' (Charter.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,669 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 500 normal>) = 10.145
2022-02-05 15:28:09,669 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,670 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.335
2022-02-05 15:28:09,670 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,670 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,670 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
2022-02-05 15:28:09,671 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,671 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,671 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,671 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,671 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 6.413636363636363
2022-02-05 15:28:09,671 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,671 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,671 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,672 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal 400 normal>) = 11.05
2022-02-05 15:28:09,672 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,672 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,672 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.335
2022-02-05 15:28:09,672 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,672 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,672 - DEBUG - matplotlib.font_manager - findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 1000 normal>) = 11.62
2022-02-05 15:28:09,673 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,673 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,673 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal 900 normal>) = 10.525
2022-02-05 15:28:09,673 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 200 normal>) = 10.24
2022-02-05 15:28:09,674 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,674 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,674 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 10.335
2022-02-05 15:28:09,674 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,675 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,675 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,676 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,677 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,677 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal 900 normal>) = 10.525
2022-02-05 15:28:09,677 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,677 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Sana' (Sana.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,677 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,677 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 7.413636363636363
2022-02-05 15:28:09,678 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,678 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,678 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,678 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,678 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
2022-02-05 15:28:09,679 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,679 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,679 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,679 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,679 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,679 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,679 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,680 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 500 normal>) = 10.145
2022-02-05 15:28:09,680 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
2022-02-05 15:28:09,680 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 900 normal>) = 10.525
2022-02-05 15:28:09,680 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.335
2022-02-05 15:28:09,681 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,681 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.335
2022-02-05 15:28:09,681 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-02-05 15:28:09,681 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,681 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,681 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal 900 normal>) = 10.525
2022-02-05 15:28:09,681 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.535
2022-02-05 15:28:09,682 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,682 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 0 normal>) = 10.43
2022-02-05 15:28:09,682 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,682 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,682 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,682 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,682 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,682 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,683 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,683 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,683 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,683 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,683 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,683 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,684 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,684 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,684 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,684 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,685 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,686 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal 500 normal>) = 10.145
2022-02-05 15:28:09,686 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,686 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,686 - DEBUG - matplotlib.font_manager - findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,686 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal 400 normal>) = 11.05
2022-02-05 15:28:09,686 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,686 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 11.335
2022-02-05 15:28:09,686 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.335
2022-02-05 15:28:09,687 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,687 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,687 - DEBUG - matplotlib.font_manager - findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 300 normal>) = 10.145
2022-02-05 15:28:09,687 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,687 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
2022-02-05 15:28:09,688 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,688 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Muna' (Muna.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,688 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,688 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,688 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,688 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,688 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,688 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,688 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,688 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,689 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,689 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,689 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal 900 normal>) = 10.525
2022-02-05 15:28:09,689 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,689 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 7.698636363636363
2022-02-05 15:28:09,689 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,689 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,689 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Skia' (Skia.ttf) normal normal 5 normal>) = 10.42525
2022-02-05 15:28:09,689 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,690 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,690 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,690 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,690 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,690 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Times' (Times.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,691 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.335
2022-02-05 15:28:09,691 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,691 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,691 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 11.335
2022-02-05 15:28:09,691 - DEBUG - matplotlib.font_manager - findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 1000 normal>) = 10.62
2022-02-05 15:28:09,691 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,692 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,692 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-02-05 15:28:09,692 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal 700 normal>) = 10.335
2022-02-05 15:28:09,692 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,692 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,693 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,693 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,693 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,694 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,694 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,694 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,694 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,694 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,694 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,694 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Marion' (Marion.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,694 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,694 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,694 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,694 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,695 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
2022-02-05 15:28:09,695 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,695 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,695 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 6.698636363636363
2022-02-05 15:28:09,695 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,695 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 100 normal>) = 10.335
2022-02-05 15:28:09,695 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,695 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,696 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,696 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,696 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal 300 normal>) = 10.145
2022-02-05 15:28:09,696 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 10.335
2022-02-05 15:28:09,696 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.335
2022-02-05 15:28:09,696 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,696 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-02-05 15:28:09,696 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.335
2022-02-05 15:28:09,697 - DEBUG - matplotlib.font_manager - findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.05
2022-02-05 15:28:09,697 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal 900 normal>) = 10.525
2022-02-05 15:28:09,697 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,697 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,697 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,697 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal 400 normal>) = 11.05
2022-02-05 15:28:09,697 - DEBUG - matplotlib.font_manager - findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal 295 normal>) = 10.14975
2022-02-05 15:28:09,697 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,697 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,697 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,697 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,698 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,698 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,698 - DEBUG - matplotlib.font_manager - findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,698 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,698 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.535
2022-02-05 15:28:09,698 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,698 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Farah' (Farah.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,698 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,699 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,699 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 250 normal>) = 10.1925
2022-02-05 15:28:09,699 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,699 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,699 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2022-02-05 15:28:09,699 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,699 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,699 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.335
2022-02-05 15:28:09,699 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,700 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
2022-02-05 15:28:09,700 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,700 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,700 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,700 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,700 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,700 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,701 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,701 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,701 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,702 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,702 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,703 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.335
2022-02-05 15:28:09,703 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,704 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,704 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,704 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,704 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,704 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,704 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,705 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,705 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,705 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 300 normal>) = 10.145
2022-02-05 15:28:09,705 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,705 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Optima' (Optima.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,705 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,705 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,705 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,705 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,706 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,706 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,706 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,706 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,706 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,706 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,706 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,706 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 800 normal>) = 10.43
2022-02-05 15:28:09,706 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.335
2022-02-05 15:28:09,706 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,707 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,707 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 500 normal>) = 2.872272727272727
2022-02-05 15:28:09,707 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 3.9713636363636367
2022-02-05 15:28:09,707 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,707 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,707 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.335
2022-02-05 15:28:09,707 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,707 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,707 - DEBUG - matplotlib.font_manager - findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,707 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.335
2022-02-05 15:28:09,708 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,708 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,708 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,708 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,708 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,708 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,708 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,708 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,709 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.335
2022-02-05 15:28:09,710 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,712 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 4.971363636363637
2022-02-05 15:28:09,712 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,712 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,713 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.535
2022-02-05 15:28:09,713 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,713 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,713 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,713 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
2022-02-05 15:28:09,713 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,714 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,714 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,714 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-02-05 15:28:09,714 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,714 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal 900 normal>) = 10.525
2022-02-05 15:28:09,715 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,715 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal 700 normal>) = 10.335
2022-02-05 15:28:09,715 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,715 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,715 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,715 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,715 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
2022-02-05 15:28:09,715 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,716 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.335
2022-02-05 15:28:09,716 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,716 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,716 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,716 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 500 normal>) = 10.145
2022-02-05 15:28:09,716 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Futura' (Futura.ttc) normal normal 500 normal>) = 10.145
2022-02-05 15:28:09,716 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,716 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,717 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
2022-02-05 15:28:09,717 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,717 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,717 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,719 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,719 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,719 - DEBUG - matplotlib.font_manager - findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,719 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,720 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,720 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.335
2022-02-05 15:28:09,720 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,721 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,721 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,721 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal 300 normal>) = 10.145
2022-02-05 15:28:09,721 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 500 normal>) = 10.145
2022-02-05 15:28:09,722 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,722 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.335
2022-02-05 15:28:09,722 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,722 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,722 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,722 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,722 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,722 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,723 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 300 normal>) = 10.145
2022-02-05 15:28:09,723 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,723 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,723 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 250 normal>) = 10.1925
2022-02-05 15:28:09,723 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 300 normal>) = 10.145
2022-02-05 15:28:09,723 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 4.6863636363636365
2022-02-05 15:28:09,723 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,723 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,723 - DEBUG - matplotlib.font_manager - findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-05 15:28:09,723 - DEBUG - matplotlib.font_manager - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=20.0 to DejaVu Sans ('/Users/johann/PycharmProjects/PiQ/env/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
